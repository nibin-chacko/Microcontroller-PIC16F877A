

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jun 30 16:35:56 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0000                     	;# 
   169  0001                     	;# 
   170  0002                     	;# 
   171  0003                     	;# 
   172  0004                     	;# 
   173  0005                     	;# 
   174  0006                     	;# 
   175  0007                     	;# 
   176  0008                     	;# 
   177  0009                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  0087                     	;# 
   207  0088                     	;# 
   208  0089                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  0091                     	;# 
   213  0092                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  010F                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  001E                     _ADRESH	set	30
   229  0008                     _PORTD	set	8
   230  00FA                     _nDONE	set	250
   231  00FA                     _GO	set	250
   232  00F8                     _ADON	set	248
   233  0040                     _RD0	set	64
   234  009E                     _ADRESL	set	158
   235  0088                     _TRISD	set	136
   236  04FF                     _ADFM	set	1279
   237                           
   238                           ; #config settings
   239  0000                     
   240                           	psect	cinit
   241  07F8                     start_initialization:	
   242  07F8                     __initialization:	
   243                           
   244                           ; Clear objects allocated to COMMON
   245  07F8  01F8               	clrf	__pbssCOMMON& (0+127)
   246  07F9  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   247  07FA  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   248  07FB  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   249  07FC                     end_of_initialization:	
   250                           ;End of C runtime variable initialization code
   251                           
   252  07FC                     __end_of__initialization:	
   253  07FC  0183               	clrf	3
   254  07FD  120A  118A  2F78   	ljmp	_main	;jump to C main() function
   255                           
   256                           	psect	bssCOMMON
   257  0078                     __pbssCOMMON:	
   258  0078                     software_pwm@wait:	
   259  0078                     	ds	2
   260  007A                     software_pwm@loop_counter:	
   261  007A                     	ds	2
   262                           
   263                           	psect	cstackCOMMON
   264  0070                     __pcstackCOMMON:	
   265  0070                     ?_init_adc:	
   266  0070                     ??_init_adc:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ?_software_pwm:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     ?_init_config:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ??_init_config:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ?_main:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0070                     ?_read_adc:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     software_pwm@adc_reg_val:	
   285                           ; 2 bytes @ 0x0
   286                           
   287                           
   288                           ; 2 bytes @ 0x0
   289  0070                     	ds	2
   290  0072                     ??_read_adc:	
   291  0072                     ??_software_pwm:	
   292                           ; 1 bytes @ 0x2
   293                           
   294  0072                     software_pwm@value:	
   295                           ; 1 bytes @ 0x2
   296                           
   297  0072                     read_adc@adc_reg_val:	
   298                           ; 2 bytes @ 0x2
   299                           
   300                           
   301                           ; 2 bytes @ 0x2
   302  0072                     	ds	2
   303  0074                     software_pwm@duty_cycle:	
   304                           
   305                           ; 2 bytes @ 0x4
   306  0074                     	ds	2
   307  0076                     ??_main:	
   308  0076                     main@adc_reg_val:	
   309                           ; 1 bytes @ 0x6
   310                           
   311                           
   312                           ; 2 bytes @ 0x6
   313  0076                     	ds	2
   314                           
   315                           	psect	maintext
   316  0778                     __pmaintext:	
   317 ;;
   318 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   319 ;;
   320 ;; *************** function _main *****************
   321 ;; Defined at:
   322 ;;		line 76 in file "newmain.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;		None
   325 ;; Auto vars:     Size  Location     Type
   326 ;;  adc_reg_val     2    6[COMMON] unsigned short 
   327 ;; Return value:  Size  Location     Type
   328 ;;                  1    wreg      void 
   329 ;; Registers used:
   330 ;;		wreg, status,2, status,0, pclath, cstack
   331 ;; Tracked objects:
   332 ;;		On entry : B00/0
   333 ;;		On exit  : 0/0
   334 ;;		Unchanged: 0/0
   335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   336 ;;      Params:         0       0       0       0       0
   337 ;;      Locals:         2       0       0       0       0
   338 ;;      Temps:          0       0       0       0       0
   339 ;;      Totals:         2       0       0       0       0
   340 ;;Total ram usage:        2 bytes
   341 ;; Hardware stack levels required when called:    2
   342 ;; This function calls:
   343 ;;		_init_config
   344 ;;		_read_adc
   345 ;;		_software_pwm
   346 ;; This function is called by:
   347 ;;		Startup code after reset
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           
   352                           ;psect for function _main
   353  0778                     _main:	
   354  0778                     l730:	
   355                           ;incstack = 0
   356                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   357                           
   358  0778  120A  118A  275A  120A  118A  	fcall	_init_config
   359  077D                     l732:	
   360  077D  120A  118A  2766  120A  118A  	fcall	_read_adc
   361  0782  0871               	movf	?_read_adc+1,w
   362  0783  00F7               	movwf	main@adc_reg_val+1
   363  0784  0870               	movf	?_read_adc,w
   364  0785  00F6               	movwf	main@adc_reg_val
   365  0786                     l734:	
   366  0786  0877               	movf	main@adc_reg_val+1,w
   367  0787  00F1               	movwf	software_pwm@adc_reg_val+1
   368  0788  0876               	movf	main@adc_reg_val,w
   369  0789  00F0               	movwf	software_pwm@adc_reg_val
   370  078A  120A  118A  2793  120A  118A  	fcall	_software_pwm
   371  078F  2F7D               	goto	l732
   372  0790  120A  118A  2800   	ljmp	start
   373  0793                     __end_of_main:	
   374                           
   375                           	psect	text1
   376  0793                     __ptext1:	
   377 ;; *************** function _software_pwm *****************
   378 ;; Defined at:
   379 ;;		line 18 in file "newmain.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;  adc_reg_val     2    0[COMMON] unsigned short 
   382 ;; Auto vars:     Size  Location     Type
   383 ;;  duty_cycle      2    4[COMMON] unsigned short 
   384 ;;  value           2    2[COMMON] unsigned short 
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, status,2, status,0
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   394 ;;      Params:         2       0       0       0       0
   395 ;;      Locals:         4       0       0       0       0
   396 ;;      Temps:          0       0       0       0       0
   397 ;;      Totals:         6       0       0       0       0
   398 ;;Total ram usage:        6 bytes
   399 ;; Hardware stack levels used:    1
   400 ;; This function calls:
   401 ;;		Nothing
   402 ;; This function is called by:
   403 ;;		_main
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407                           
   408                           ;psect for function _software_pwm
   409  0793                     _software_pwm:	
   410  0793                     l696:	
   411                           ;incstack = 0
   412                           ; Regs used in _software_pwm: [wreg+status,2+status,0]
   413                           
   414                           
   415                           ;newmain.c: 18: ;newmain.c: 19:             duty_cycle++;;newmain.c: 20:             }
   416  0793  0871               	movf	software_pwm@adc_reg_val+1,w
   417  0794  00F5               	movwf	software_pwm@duty_cycle+1
   418  0795  0870               	movf	software_pwm@adc_reg_val,w
   419  0796  00F4               	movwf	software_pwm@duty_cycle
   420  0797                     l698:	
   421                           
   422                           ;newmain.c: 21:         };newmain.c: 22: ;newmain.c: 23:         else if (duty_cycle < v
      +                          alue);newmain.c: 25:             value = duty_cycle;
   423  0797  3001               	movlw	1
   424  0798  02F8               	subwf	software_pwm@wait,f
   425  0799  3000               	movlw	0
   426  079A  1C03               	skipc
   427  079B  03F9               	decf	software_pwm@wait+1,f
   428  079C  02F9               	subwf	software_pwm@wait+1,f
   429  079D  0A78               	incf	software_pwm@wait,w
   430  079E  1D03               	skipz
   431  079F  2FA4               	goto	u91
   432  07A0  0A79               	incf	software_pwm@wait+1,w
   433  07A1  1D03               	btfss	3,2
   434  07A2  2FA4               	goto	u91
   435  07A3  2FA5               	goto	u90
   436  07A4                     u91:	
   437  07A4  2FD7               	goto	l17
   438  07A5                     u90:	
   439  07A5                     l700:	
   440                           
   441                           ;newmain.c: 26:             if(duty_cycle != 0);newmain.c: 27:             {
   442  07A5  30F4               	movlw	244
   443  07A6  00F8               	movwf	software_pwm@wait
   444  07A7  3001               	movlw	1
   445  07A8  00F9               	movwf	software_pwm@wait+1
   446                           
   447                           ;newmain.c: 29:             duty_cycle--;
   448  07A9  0875               	movf	software_pwm@duty_cycle+1,w
   449  07AA  0273               	subwf	software_pwm@value+1,w
   450  07AB  1D03               	skipz
   451  07AC  2FAF               	goto	u105
   452  07AD  0874               	movf	software_pwm@duty_cycle,w
   453  07AE  0272               	subwf	software_pwm@value,w
   454  07AF                     u105:	
   455  07AF  1803               	skipnc
   456  07B0  2FB2               	goto	u101
   457  07B1  2FB3               	goto	u100
   458  07B2                     u101:	
   459  07B2  2FC1               	goto	l708
   460  07B3                     u100:	
   461  07B3                     l702:	
   462  07B3                     l704:	
   463                           
   464                           ;newmain.c: 32:     }
   465  07B3  3004               	movlw	4
   466  07B4  0675               	xorwf	software_pwm@duty_cycle+1,w
   467  07B5  0474               	iorwf	software_pwm@duty_cycle,w
   468  07B6  1903               	btfsc	3,2
   469  07B7  2FB9               	goto	u111
   470  07B8  2FBA               	goto	u110
   471  07B9                     u111:	
   472  07B9  2FD7               	goto	l17
   473  07BA                     u110:	
   474  07BA                     l706:	
   475                           
   476                           ;newmain.c: 33: ;newmain.c: 35:     if(loop_counter <= duty_cycle)
   477  07BA  3001               	movlw	1
   478  07BB  07F4               	addwf	software_pwm@duty_cycle,f
   479  07BC  1803               	skipnc
   480  07BD  0AF5               	incf	software_pwm@duty_cycle+1,f
   481  07BE  3000               	movlw	0
   482  07BF  07F5               	addwf	software_pwm@duty_cycle+1,f
   483  07C0  2FD7               	goto	l17
   484  07C1                     l708:	
   485  07C1  0873               	movf	software_pwm@value+1,w
   486  07C2  0275               	subwf	software_pwm@duty_cycle+1,w
   487  07C3  1D03               	skipz
   488  07C4  2FC7               	goto	u125
   489  07C5  0872               	movf	software_pwm@value,w
   490  07C6  0274               	subwf	software_pwm@duty_cycle,w
   491  07C7                     u125:	
   492  07C7  1803               	skipnc
   493  07C8  2FCA               	goto	u121
   494  07C9  2FCB               	goto	u120
   495  07CA                     u121:	
   496  07CA  2FD7               	goto	l17
   497  07CB                     u120:	
   498  07CB                     l710:	
   499  07CB                     l712:	
   500                           
   501                           ;newmain.c: 42:     }
   502  07CB  0874               	movf	software_pwm@duty_cycle,w
   503  07CC  0475               	iorwf	software_pwm@duty_cycle+1,w
   504  07CD  1903               	btfsc	3,2
   505  07CE  2FD0               	goto	u131
   506  07CF  2FD1               	goto	u130
   507  07D0                     u131:	
   508  07D0  2FD7               	goto	l17
   509  07D1                     u130:	
   510  07D1                     l714:	
   511                           
   512                           ;newmain.c: 43: ;newmain.c: 45:     if(loop_counter == 1024)
   513  07D1  3001               	movlw	1
   514  07D2  02F4               	subwf	software_pwm@duty_cycle,f
   515  07D3  3000               	movlw	0
   516  07D4  1C03               	skipc
   517  07D5  03F5               	decf	software_pwm@duty_cycle+1,f
   518  07D6  02F5               	subwf	software_pwm@duty_cycle+1,f
   519  07D7                     l17:	
   520                           ;newmain.c: 48:     }
   521                           
   522                           
   523                           ;newmain.c: 51: }
   524  07D7  087B               	movf	software_pwm@loop_counter+1,w
   525  07D8  0275               	subwf	software_pwm@duty_cycle+1,w
   526  07D9  1D03               	skipz
   527  07DA  2FDD               	goto	u145
   528  07DB  087A               	movf	software_pwm@loop_counter,w
   529  07DC  0274               	subwf	software_pwm@duty_cycle,w
   530  07DD                     u145:	
   531  07DD  1C03               	skipc
   532  07DE  2FE0               	goto	u141
   533  07DF  2FE1               	goto	u140
   534  07E0                     u141:	
   535  07E0  2FE5               	goto	l23
   536  07E1                     u140:	
   537  07E1                     l716:	
   538                           
   539                           ;newmain.c: 52: ;newmain.c: 53: static void init_config(void) {
   540  07E1  1283               	bcf	3,5	;RP0=0, select bank0
   541  07E2  1303               	bcf	3,6	;RP1=0, select bank0
   542  07E3  1408               	bsf	8,0	;volatile
   543                           
   544                           ;newmain.c: 54:     PORTD = 0x00;
   545  07E4  2FE8               	goto	l718
   546  07E5                     l23:	
   547                           ;newmain.c: 55:     TRISD = 0x00;
   548                           
   549                           
   550                           ;newmain.c: 56: ;newmain.c: 57:     init_adc();
   551  07E5  1283               	bcf	3,5	;RP0=0, select bank0
   552  07E6  1303               	bcf	3,6	;RP1=0, select bank0
   553  07E7  1008               	bcf	8,0	;volatile
   554  07E8                     l718:	
   555                           
   556                           ;newmain.c: 61:     unsigned short adc_reg_val;
   557  07E8  3004               	movlw	4
   558  07E9  067B               	xorwf	software_pwm@loop_counter+1,w
   559  07EA  047A               	iorwf	software_pwm@loop_counter,w
   560  07EB  1D03               	btfss	3,2
   561  07EC  2FEE               	goto	u151
   562  07ED  2FEF               	goto	u150
   563  07EE                     u151:	
   564  07EE  2FF1               	goto	l722
   565  07EF                     u150:	
   566  07EF                     l720:	
   567                           
   568                           ;newmain.c: 62:     init_config();;newmain.c: 63: 
   569  07EF  01FA               	clrf	software_pwm@loop_counter
   570  07F0  01FB               	clrf	software_pwm@loop_counter+1
   571  07F1                     l722:	
   572                           
   573                           ;newmain.c: 65: 
   574  07F1  3001               	movlw	1
   575  07F2  07FA               	addwf	software_pwm@loop_counter,f
   576  07F3  1803               	skipnc
   577  07F4  0AFB               	incf	software_pwm@loop_counter+1,f
   578  07F5  3000               	movlw	0
   579  07F6  07FB               	addwf	software_pwm@loop_counter+1,f
   580  07F7                     l26:	
   581  07F7  0008               	return
   582  07F8                     __end_of_software_pwm:	
   583                           
   584                           	psect	text2
   585  0766                     __ptext2:	
   586 ;; *************** function _read_adc *****************
   587 ;; Defined at:
   588 ;;		line 12 in file "adc.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;		None
   591 ;; Auto vars:     Size  Location     Type
   592 ;;  adc_reg_val     2    2[COMMON] unsigned short 
   593 ;; Return value:  Size  Location     Type
   594 ;;                  2    0[COMMON] unsigned short 
   595 ;; Registers used:
   596 ;;		wreg
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   602 ;;      Params:         2       0       0       0       0
   603 ;;      Locals:         2       0       0       0       0
   604 ;;      Temps:          0       0       0       0       0
   605 ;;      Totals:         4       0       0       0       0
   606 ;;Total ram usage:        4 bytes
   607 ;; Hardware stack levels used:    1
   608 ;; This function calls:
   609 ;;		Nothing
   610 ;; This function is called by:
   611 ;;		_main
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           
   616                           ;psect for function _read_adc
   617  0766                     _read_adc:	
   618  0766                     l724:	
   619                           ;incstack = 0
   620                           ; Regs used in _read_adc: [wreg]
   621                           
   622                           
   623                           ;adc.c: 14:     unsigned short adc_reg_val;;adc.c: 17:     GO = 1;
   624  0766  1283               	bcf	3,5	;RP0=0, select bank0
   625  0767  1303               	bcf	3,6	;RP1=0, select bank0
   626  0768  151F               	bsf	31,2	;volatile
   627  0769                     l55:	
   628                           ;adc.c: 19:     while (nDONE);
   629                           
   630  0769  191F               	btfsc	31,2	;volatile
   631  076A  2F6C               	goto	u161
   632  076B  2F6D               	goto	u160
   633  076C                     u161:	
   634  076C  2F69               	goto	l55
   635  076D                     u160:	
   636  076D                     l726:	
   637                           
   638                           ;adc.c: 21:     adc_reg_val = (ADRESH << 8) | ADRESL;
   639  076D  081E               	movf	30,w	;volatile
   640  076E  00F3               	movwf	read_adc@adc_reg_val+1
   641  076F  1683               	bsf	3,5	;RP0=1, select bank1
   642  0770  1303               	bcf	3,6	;RP1=0, select bank1
   643  0771  081E               	movf	30,w	;volatile
   644  0772  00F2               	movwf	read_adc@adc_reg_val
   645                           
   646                           ;adc.c: 23:     return adc_reg_val;
   647  0773  0873               	movf	read_adc@adc_reg_val+1,w
   648  0774  00F1               	movwf	?_read_adc+1
   649  0775  0872               	movf	read_adc@adc_reg_val,w
   650  0776  00F0               	movwf	?_read_adc
   651  0777                     l58:	
   652  0777  0008               	return
   653  0778                     __end_of_read_adc:	
   654                           
   655                           	psect	text3
   656  075A                     __ptext3:	
   657 ;; *************** function _init_config *****************
   658 ;; Defined at:
   659 ;;		line 69 in file "newmain.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;		None
   662 ;; Auto vars:     Size  Location     Type
   663 ;;		None
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      void 
   666 ;; Registers used:
   667 ;;		status,2, status,0, pclath, cstack
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   673 ;;      Params:         0       0       0       0       0
   674 ;;      Locals:         0       0       0       0       0
   675 ;;      Temps:          0       0       0       0       0
   676 ;;      Totals:         0       0       0       0       0
   677 ;;Total ram usage:        0 bytes
   678 ;; Hardware stack levels used:    1
   679 ;; Hardware stack levels required when called:    1
   680 ;; This function calls:
   681 ;;		_init_adc
   682 ;; This function is called by:
   683 ;;		_main
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           
   688                           ;psect for function _init_config
   689  075A                     _init_config:	
   690  075A                     l680:	
   691                           ;incstack = 0
   692                           ; Regs used in _init_config: [status,2+status,0+pclath+cstack]
   693                           
   694                           
   695                           ;newmain.c: 70:     }
   696  075A  1283               	bcf	3,5	;RP0=0, select bank0
   697  075B  1303               	bcf	3,6	;RP1=0, select bank0
   698  075C  0188               	clrf	8	;volatile
   699                           
   700                           ;newmain.c: 71:     return;
   701  075D  1683               	bsf	3,5	;RP0=1, select bank1
   702  075E  1303               	bcf	3,6	;RP1=0, select bank1
   703  075F  0188               	clrf	8	;volatile
   704  0760                     l682:	
   705  0760  120A  118A  2753  120A  118A  	fcall	_init_adc
   706  0765                     l29:	
   707  0765  0008               	return
   708  0766                     __end_of_init_config:	
   709                           
   710                           	psect	text4
   711  0753                     __ptext4:	
   712 ;; *************** function _init_adc *****************
   713 ;; Defined at:
   714 ;;		line 3 in file "adc.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;		None
   717 ;; Auto vars:     Size  Location     Type
   718 ;;		None
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		None
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   728 ;;      Params:         0       0       0       0       0
   729 ;;      Locals:         0       0       0       0       0
   730 ;;      Temps:          0       0       0       0       0
   731 ;;      Totals:         0       0       0       0       0
   732 ;;Total ram usage:        0 bytes
   733 ;; Hardware stack levels used:    1
   734 ;; This function calls:
   735 ;;		Nothing
   736 ;; This function is called by:
   737 ;;		_init_config
   738 ;; This function uses a non-reentrant model
   739 ;;
   740                           
   741                           
   742                           ;psect for function _init_adc
   743  0753                     _init_adc:	
   744  0753                     l650:	
   745                           ;incstack = 0
   746                           ; Regs used in _init_adc: []
   747                           
   748                           
   749                           ;adc.c: 6:     ADFM = 1;
   750  0753  1683               	bsf	3,5	;RP0=1, select bank1
   751  0754  1303               	bcf	3,6	;RP1=0, select bank1
   752  0755  179F               	bsf	31,7	;volatile
   753                           
   754                           ;adc.c: 9:     ADON = 1;
   755  0756  1283               	bcf	3,5	;RP0=0, select bank0
   756  0757  1303               	bcf	3,6	;RP1=0, select bank0
   757  0758  141F               	bsf	31,0	;volatile
   758  0759                     l52:	
   759  0759  0008               	return
   760  075A                     __end_of_init_adc:	
   761  007E                     btemp	set	126	;btemp
   762  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_software_pwm

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     347
                                              6 COMMON     2     2      0
                        _init_config
                           _read_adc
                       _software_pwm
 ---------------------------------------------------------------------------------
 (1) _software_pwm                                         6     4      2     301
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                           _init_adc
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
     _init_adc
   _read_adc
   _software_pwm

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jun 30 16:35:56 2020

                      l23 07E5                        l17 07D7                        l26 07F7  
                      l52 0759                        l29 0765                        l55 0769  
                      l58 0777                        _GO 00FA                        u90 07A5  
                      u91 07A4                       l700 07A5                       l710 07CB  
                     l702 07B3                       l720 07EF                       l712 07CB  
                     l704 07B3                       l650 0753                       l722 07F1  
                     l714 07D1                       l706 07BA                       l730 0778  
                     l724 0766                       l716 07E1                       l708 07C1  
                     l732 077D                       l726 076D                       l718 07E8  
                     l734 0786                       l680 075A                       l682 0760  
                     l696 0793                       l698 0797                       _RD0 0040  
                     u100 07B3                       u101 07B2                       u110 07BA  
                     u111 07B9                       u120 07CB                       u121 07CA  
                     u105 07AF                       u130 07D1                       u131 07D0  
                     u140 07E1                       u141 07E0                       u125 07C7  
                     u150 07EF                       u151 07EE                       u160 076D  
                     u161 076C                       u145 07DD              _software_pwm 0793  
        software_pwm@wait 0078                      _ADFM 04FF                      _ADON 00F8  
                    _main 0778                      btemp 007E                      start 0000  
       software_pwm@value 0072                     ?_main 0070             __CFG_WDTE$OFF 0000  
            ?_init_config 0070                     _PORTD 0008                     _TRISD 0088  
                   _nDONE 00FA   software_pwm@adc_reg_val 0070                     status 0003  
                   wtemp0 007E           __initialization 07F8              __end_of_main 0793  
                  ??_main 0076                    _ADRESH 001E                    _ADRESL 009E  
        __end_of_init_adc 075A          __end_of_read_adc 0778   __end_of__initialization 07FC  
          __pcstackCOMMON 0070      __size_of_init_config 000C                __pmaintext 0778  
               ?_init_adc 0070                 ?_read_adc 0070                   __ptext1 0793  
                 __ptext2 0766                   __ptext3 075A                   __ptext4 0753  
    end_of_initialization 07FC                ??_init_adc 0070                ??_read_adc 0072  
         main@adc_reg_val 0076             ?_software_pwm 0070       start_initialization 07F8  
           ??_init_config 0070            ??_software_pwm 0072               __pbssCOMMON 0078  
               ___latbits 0002         __size_of_init_adc 0007         __size_of_read_adc 0012  
     read_adc@adc_reg_val 0072       __end_of_init_config 0766    software_pwm@duty_cycle 0074  
    __end_of_software_pwm 07F8               _init_config 075A                  _init_adc 0753  
                _read_adc 0766             __size_of_main 001B  software_pwm@loop_counter 007A  
   __size_of_software_pwm 0065  
