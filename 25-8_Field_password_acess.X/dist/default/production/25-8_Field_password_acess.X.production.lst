

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jun 23 02:03:15 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.10
    29                           ; Generated 31/07/2019 GMT
    30                           ; 
    31                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F877A Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  018C                     	;# 
   121  018D                     	;# 
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  0007                     	;# 
   130  0008                     	;# 
   131  0009                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000D                     	;# 
   136  000E                     	;# 
   137  000E                     	;# 
   138  000F                     	;# 
   139  0010                     	;# 
   140  0011                     	;# 
   141  0012                     	;# 
   142  0013                     	;# 
   143  0014                     	;# 
   144  0015                     	;# 
   145  0015                     	;# 
   146  0016                     	;# 
   147  0017                     	;# 
   148  0018                     	;# 
   149  0019                     	;# 
   150  001A                     	;# 
   151  001B                     	;# 
   152  001B                     	;# 
   153  001C                     	;# 
   154  001D                     	;# 
   155  001E                     	;# 
   156  001F                     	;# 
   157  0081                     	;# 
   158  0085                     	;# 
   159  0086                     	;# 
   160  0087                     	;# 
   161  0088                     	;# 
   162  0089                     	;# 
   163  008C                     	;# 
   164  008D                     	;# 
   165  008E                     	;# 
   166  0091                     	;# 
   167  0092                     	;# 
   168  0093                     	;# 
   169  0094                     	;# 
   170  0098                     	;# 
   171  0099                     	;# 
   172  009C                     	;# 
   173  009D                     	;# 
   174  009E                     	;# 
   175  009F                     	;# 
   176  010C                     	;# 
   177  010D                     	;# 
   178  010E                     	;# 
   179  010F                     	;# 
   180  018C                     	;# 
   181  018D                     	;# 
   182  0000                     	;# 
   183  0001                     	;# 
   184  0002                     	;# 
   185  0003                     	;# 
   186  0004                     	;# 
   187  0005                     	;# 
   188  0006                     	;# 
   189  0007                     	;# 
   190  0008                     	;# 
   191  0009                     	;# 
   192  000A                     	;# 
   193  000B                     	;# 
   194  000C                     	;# 
   195  000D                     	;# 
   196  000E                     	;# 
   197  000E                     	;# 
   198  000F                     	;# 
   199  0010                     	;# 
   200  0011                     	;# 
   201  0012                     	;# 
   202  0013                     	;# 
   203  0014                     	;# 
   204  0015                     	;# 
   205  0015                     	;# 
   206  0016                     	;# 
   207  0017                     	;# 
   208  0018                     	;# 
   209  0019                     	;# 
   210  001A                     	;# 
   211  001B                     	;# 
   212  001B                     	;# 
   213  001C                     	;# 
   214  001D                     	;# 
   215  001E                     	;# 
   216  001F                     	;# 
   217  0081                     	;# 
   218  0085                     	;# 
   219  0086                     	;# 
   220  0087                     	;# 
   221  0088                     	;# 
   222  0089                     	;# 
   223  008C                     	;# 
   224  008D                     	;# 
   225  008E                     	;# 
   226  0091                     	;# 
   227  0092                     	;# 
   228  0093                     	;# 
   229  0094                     	;# 
   230  0098                     	;# 
   231  0099                     	;# 
   232  009C                     	;# 
   233  009D                     	;# 
   234  009E                     	;# 
   235  009F                     	;# 
   236  010C                     	;# 
   237  010D                     	;# 
   238  010E                     	;# 
   239  010F                     	;# 
   240  018C                     	;# 
   241  018D                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  0006                     	;# 
   249  0007                     	;# 
   250  0008                     	;# 
   251  0009                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000D                     	;# 
   256  000E                     	;# 
   257  000E                     	;# 
   258  000F                     	;# 
   259  0010                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0013                     	;# 
   263  0014                     	;# 
   264  0015                     	;# 
   265  0015                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001B                     	;# 
   273  001C                     	;# 
   274  001D                     	;# 
   275  001E                     	;# 
   276  001F                     	;# 
   277  0081                     	;# 
   278  0085                     	;# 
   279  0086                     	;# 
   280  0087                     	;# 
   281  0088                     	;# 
   282  0089                     	;# 
   283  008C                     	;# 
   284  008D                     	;# 
   285  008E                     	;# 
   286  0091                     	;# 
   287  0092                     	;# 
   288  0093                     	;# 
   289  0094                     	;# 
   290  0098                     	;# 
   291  0099                     	;# 
   292  009C                     	;# 
   293  009D                     	;# 
   294  009E                     	;# 
   295  009F                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  0000                     	;# 
   303  0001                     	;# 
   304  0002                     	;# 
   305  0003                     	;# 
   306  0004                     	;# 
   307  0005                     	;# 
   308  0006                     	;# 
   309  0007                     	;# 
   310  0008                     	;# 
   311  0009                     	;# 
   312  000A                     	;# 
   313  000B                     	;# 
   314  000C                     	;# 
   315  000D                     	;# 
   316  000E                     	;# 
   317  000E                     	;# 
   318  000F                     	;# 
   319  0010                     	;# 
   320  0011                     	;# 
   321  0012                     	;# 
   322  0013                     	;# 
   323  0014                     	;# 
   324  0015                     	;# 
   325  0015                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  001A                     	;# 
   331  001B                     	;# 
   332  001B                     	;# 
   333  001C                     	;# 
   334  001D                     	;# 
   335  001E                     	;# 
   336  001F                     	;# 
   337  0081                     	;# 
   338  0085                     	;# 
   339  0086                     	;# 
   340  0087                     	;# 
   341  0088                     	;# 
   342  0089                     	;# 
   343  008C                     	;# 
   344  008D                     	;# 
   345  008E                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009C                     	;# 
   353  009D                     	;# 
   354  009E                     	;# 
   355  009F                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  018C                     	;# 
   361  018D                     	;# 
   362                           
   363                           	psect	idataBANK0
   364  0466                     __pidataBANK0:	
   365                           
   366                           ;initializer for _chance
   367  0466  3405               	retlw	5
   368  0467  3400               	retlw	0
   369                           
   370                           ;initializer for _i
   371  0468  3403               	retlw	3
   372  0469  3400               	retlw	0
   373                           
   374                           ;initializer for read_matrix_keypad@once
   375  046A  3401               	retlw	1
   376                           
   377                           ;initializer for _initial
   378  046B  3401               	retlw	1
   379                           
   380                           ;initializer for _password
   381  046C  3467               	retlw	low ((STR_1-__stringbase)| (0+32768))
   382  0008                     _PORTD	set	8
   383  0049                     _RE1	set	73
   384  004A                     _RE2	set	74
   385  0092                     _TMR2ON	set	146
   386  0091                     _T2CKPS1	set	145
   387  0090                     _T2CKPS0	set	144
   388  0032                     _RB2	set	50
   389  0031                     _RB1	set	49
   390  0030                     _RB0	set	48
   391  0043                     _RD3	set	67
   392  0041                     _RD1	set	65
   393  0042                     _RD2	set	66
   394  005E                     _PEIE	set	94
   395  005F                     _GIE	set	95
   396  0037                     _RB7	set	55
   397  0092                     _PR2	set	146
   398  0088                     _TRISD	set	136
   399  0086                     _TRISB	set	134
   400  0449                     _TRISE1	set	1097
   401  044A                     _TRISE2	set	1098
   402  0461                     _TMR2IE	set	1121
   403  040F                     _nRBPU	set	1039
   404  0437                     _TRISB7	set	1079
   405                           
   406                           	psect	strings
   407  0003                     __pstrings:	
   408  0003                     stringtab:	
   409  0003                     __stringtab:	
   410  0003                     stringcode:	
   411                           ;	String table - string pointers are 1 byte each
   412                           
   413  0003                     stringdir:	
   414  0003  3000               	movlw	high stringdir
   415  0004  008A               	movwf	10
   416  0005  0804               	movf	4,w
   417  0006  0A84               	incf	4,f
   418  0007  0782               	addwf	2,f
   419  0008                     __stringbase:	
   420  0008  3400               	retlw	0
   421  0009                     __end_of__stringtab:	
   422  0009                     STR_5:	
   423  0009  3420               	retlw	32	;' '
   424  000A  3420               	retlw	32	;' '
   425  000B  3420               	retlw	32	;' '
   426  000C  3420               	retlw	32	;' '
   427  000D  3420               	retlw	32	;' '
   428  000E  3420               	retlw	32	;' '
   429  000F  3420               	retlw	32	;' '
   430  0010  3420               	retlw	32	;' '
   431  0011  3420               	retlw	32	;' '
   432  0012  3420               	retlw	32	;' '
   433  0013  3420               	retlw	32	;' '
   434  0014  3420               	retlw	32	;' '
   435  0015  3420               	retlw	32	;' '
   436  0016  3420               	retlw	32	;' '
   437  0017  3420               	retlw	32	;' '
   438  0018  3420               	retlw	32	;' '
   439  0019  3400               	retlw	0
   440  001A                     STR_3:	
   441  001A  3452               	retlw	82	;'R'
   442  001B  3465               	retlw	101	;'e'
   443  001C  3473               	retlw	115	;'s'
   444  001D  3465               	retlw	101	;'e'
   445  001E  3474               	retlw	116	;'t'
   446  001F  3420               	retlw	32	;' '
   447  0020  3474               	retlw	116	;'t'
   448  0021  3468               	retlw	104	;'h'
   449  0022  3465               	retlw	101	;'e'
   450  0023  3420               	retlw	32	;' '
   451  0024  3462               	retlw	98	;'b'
   452  0025  346F               	retlw	111	;'o'
   453  0026  3461               	retlw	97	;'a'
   454  0027  3472               	retlw	114	;'r'
   455  0028  3464               	retlw	100	;'d'
   456  0029  3420               	retlw	32	;' '
   457  002A  3400               	retlw	0
   458  002B                     STR_4:	
   459  002B  3420               	retlw	32	;' '
   460  002C  3445               	retlw	69	;'E'
   461  002D  346E               	retlw	110	;'n'
   462  002E  3474               	retlw	116	;'t'
   463  002F  3465               	retlw	101	;'e'
   464  0030  3472               	retlw	114	;'r'
   465  0031  3420               	retlw	32	;' '
   466  0032  3450               	retlw	80	;'P'
   467  0033  3461               	retlw	97	;'a'
   468  0034  3473               	retlw	115	;'s'
   469  0035  3473               	retlw	115	;'s'
   470  0036  3477               	retlw	119	;'w'
   471  0037  346F               	retlw	111	;'o'
   472  0038  3472               	retlw	114	;'r'
   473  0039  3464               	retlw	100	;'d'
   474  003A  3420               	retlw	32	;' '
   475  003B  3400               	retlw	0
   476  003C                     STR_6:	
   477  003C  3420               	retlw	32	;' '
   478  003D  3445               	retlw	69	;'E'
   479  003E  3478               	retlw	120	;'x'
   480  003F  3463               	retlw	99	;'c'
   481  0040  3465               	retlw	101	;'e'
   482  0041  346C               	retlw	108	;'l'
   483  0042  346C               	retlw	108	;'l'
   484  0043  3465               	retlw	101	;'e'
   485  0044  346E               	retlw	110	;'n'
   486  0045  3474               	retlw	116	;'t'
   487  0046  3420               	retlw	32	;' '
   488  0047  3420               	retlw	32	;' '
   489  0048  3459               	retlw	89	;'Y'
   490  0049  346F               	retlw	111	;'o'
   491  004A  3475               	retlw	117	;'u'
   492  004B  3420               	retlw	32	;' '
   493  004C  3400               	retlw	0
   494  004D                     STR_2:	
   495  004D  3443               	retlw	67	;'C'
   496  004E  3468               	retlw	104	;'h'
   497  004F  3461               	retlw	97	;'a'
   498  0050  346E               	retlw	110	;'n'
   499  0051  3463               	retlw	99	;'c'
   500  0052  3465               	retlw	101	;'e'
   501  0053  3473               	retlw	115	;'s'
   502  0054  3420               	retlw	32	;' '
   503  0055  3445               	retlw	69	;'E'
   504  0056  3478               	retlw	120	;'x'
   505  0057  3461               	retlw	97	;'a'
   506  0058  3475               	retlw	117	;'u'
   507  0059  3473               	retlw	115	;'s'
   508  005A  3474               	retlw	116	;'t'
   509  005B  3465               	retlw	101	;'e'
   510  005C  3464               	retlw	100	;'d'
   511  005D  3400               	retlw	0
   512  005E                     STR_7:	
   513  005E  3443               	retlw	67	;'C'
   514  005F  3472               	retlw	114	;'r'
   515  0060  3461               	retlw	97	;'a'
   516  0061  3463               	retlw	99	;'c'
   517  0062  346B               	retlw	107	;'k'
   518  0063  3465               	retlw	101	;'e'
   519  0064  3464               	retlw	100	;'d'
   520  0065  3420               	retlw	32	;' '
   521  0066  3474               	retlw	116	;'t'
   522  0067  3468               	retlw	104	;'h'
   523  0068  3465               	retlw	101	;'e'
   524  0069  3420               	retlw	32	;' '
   525  006A  3463               	retlw	99	;'c'
   526  006B  346F               	retlw	111	;'o'
   527  006C  3464               	retlw	100	;'d'
   528  006D  3465               	retlw	101	;'e'
   529  006E  3400               	retlw	0
   530  006F                     STR_1:	
   531  006F  3431               	retlw	49	;'1'
   532  0070  3432               	retlw	50	;'2'
   533  0071  3431               	retlw	49	;'1'
   534  0072  3432               	retlw	50	;'2'
   535  0073  3431               	retlw	49	;'1'
   536  0074  3432               	retlw	50	;'2'
   537  0075  3431               	retlw	49	;'1'
   538  0076  3432               	retlw	50	;'2'
   539  0077  3400               	retlw	0
   540                           
   541                           ; #config settings
   542  0000                     
   543                           	psect	cinit
   544  07E6                     start_initialization:	
   545  07E6                     __initialization:	
   546                           
   547                           ; Initialize objects allocated to BANK0
   548  07E6  1383               	bcf	3,7	;select IRP bank0
   549  07E7  303A               	movlw	low (__pdataBANK0+7)
   550  07E8  00FD               	movwf	btemp+-1
   551  07E9  3004               	movlw	high __pidataBANK0
   552  07EA  00FE               	movwf	btemp
   553  07EB  3066               	movlw	low __pidataBANK0
   554  07EC  00FF               	movwf	btemp+1
   555  07ED  3033               	movlw	low __pdataBANK0
   556  07EE  0084               	movwf	4
   557  07EF  120A  118A  24B1  120A  118A  	fcall	init_ram0
   558                           
   559                           ; Clear objects allocated to BANK0
   560  07F4  3020               	movlw	low __pbssBANK0
   561  07F5  0084               	movwf	4
   562  07F6  3033               	movlw	low (__pbssBANK0+19)
   563  07F7  120A  118A  246D  120A  118A  	fcall	clear_ram0
   564  07FC                     end_of_initialization:	
   565                           ;End of C runtime variable initialization code
   566                           
   567  07FC                     __end_of__initialization:	
   568  07FC  0183               	clrf	3
   569  07FD  120A  118A  2EBA   	ljmp	_main	;jump to C main() function
   570                           
   571                           	psect	bssBANK0
   572  0020                     __pbssBANK0:	
   573  0020                     ledblink@wait:	
   574  0020                     	ds	2
   575  0022                     _blink:	
   576  0022                     	ds	2
   577  0024                     _cursor:	
   578  0024                     	ds	2
   579  0026                     _count:	
   580  0026                     	ds	1
   581  0027                     _duty_cycle:	
   582  0027                     	ds	1
   583  0028                     _loop_count:	
   584  0028                     	ds	1
   585  0029                     _user:	
   586  0029                     	ds	10
   587                           
   588                           	psect	dataBANK0
   589  0033                     __pdataBANK0:	
   590  0033                     _chance:	
   591  0033                     	ds	2
   592  0035                     _i:	
   593  0035                     	ds	2
   594  0037                     read_matrix_keypad@once:	
   595  0037                     	ds	1
   596  0038                     _initial:	
   597  0038                     	ds	1
   598  0039                     _password:	
   599  0039                     	ds	1
   600                           
   601                           	psect	inittext
   602  04AD                     init_fetch0:	
   603                           ;	Called with low address in FSR and high address in W
   604                           
   605  04AD  087E               	movf	btemp,w
   606  04AE  008A               	movwf	10
   607  04AF  087F               	movf	btemp+1,w
   608  04B0  0082               	movwf	2
   609  04B1                     init_ram0:	
   610                           ;Called with:
   611                           ;	high address of idata address in btemp 
   612                           ;	low address of idata address in btemp+1 
   613                           ;	low address of data in FSR
   614                           ;	high address + 1 of data in btemp-1
   615                           
   616  04B1  120A  118A  24AD  120A  118A  	fcall	init_fetch0
   617  04B6  0080               	movwf	0
   618  04B7  0A84               	incf	4,f
   619  04B8  0804               	movf	4,w
   620  04B9  067D               	xorwf	btemp+-1,w
   621  04BA  1903               	btfsc	3,2
   622  04BB  3400               	retlw	0
   623  04BC  0AFF               	incf	btemp+1,f
   624  04BD  1903               	btfsc	3,2
   625  04BE  0AFE               	incf	btemp,f
   626  04BF  2CB1               	goto	init_ram0
   627                           
   628                           	psect	clrtext
   629  046D                     clear_ram0:	
   630                           ;	Called with FSR containing the base address, and
   631                           ;	W with the last address+1
   632                           
   633  046D  0064               	clrwdt	;clear the watchdog before getting into this loop
   634  046E                     clrloop0:	
   635  046E  0180               	clrf	0	;clear RAM location pointed to by FSR
   636  046F  0A84               	incf	4,f	;increment pointer
   637  0470  0604               	xorwf	4,w	;XOR with final address
   638  0471  1903               	btfsc	3,2	;have we reached the end yet?
   639  0472  3400               	retlw	0	;all done for this memory range, return
   640  0473  0604               	xorwf	4,w	;XOR again to restore value
   641  0474  2C6E               	goto	clrloop0	;do the next byte
   642                           
   643                           	psect	cstackCOMMON
   644  0070                     __pcstackCOMMON:	
   645  0070                     ?_init_clcd:	
   646  0070                     ?_init_timer2:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ??_init_timer2:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_init_matrix_keypad:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ??_init_matrix_keypad:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_read_matrix_keypad:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_init_config:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_main:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_scan_keypad:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ??_scan_keypad:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_clcd_write:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_init_display_controller:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_strcmp:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?___wmul:	
   683                           ; 2 bytes @ 0x0
   684                           
   685  0070                     clcd_write@mode:	
   686                           ; 2 bytes @ 0x0
   687                           
   688  0070                     strcmp@s2:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     scan_keypad@i:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ___wmul@multiplier:	
   695                           ; 2 bytes @ 0x0
   696                           
   697                           
   698                           ; 2 bytes @ 0x0
   699  0070                     	ds	1
   700  0071                     ??_clcd_write:	
   701                           
   702                           ; 1 bytes @ 0x1
   703  0071                     	ds	1
   704  0072                     ??_read_matrix_keypad:	
   705  0072                     ??_strcmp:	
   706                           ; 1 bytes @ 0x2
   707                           
   708  0072                     ___wmul@multiplicand:	
   709                           ; 1 bytes @ 0x2
   710                           
   711                           
   712                           ; 2 bytes @ 0x2
   713  0072                     	ds	1
   714  0073                     read_matrix_keypad@mode:	
   715  0073                     clcd_write@byte:	
   716                           ; 1 bytes @ 0x3
   717                           
   718                           
   719                           ; 1 bytes @ 0x3
   720  0073                     	ds	1
   721  0074                     ?_clcd_print:	
   722  0074                     ?_clcd_putch:	
   723                           ; 1 bytes @ 0x4
   724                           
   725  0074                     ??_init_display_controller:	
   726                           ; 1 bytes @ 0x4
   727                           
   728  0074                     ??___wmul:	
   729                           ; 1 bytes @ 0x4
   730                           
   731  0074                     read_matrix_keypad@key:	
   732                           ; 1 bytes @ 0x4
   733                           
   734  0074                     clcd_putch@addr:	
   735                           ; 1 bytes @ 0x4
   736                           
   737  0074                     clcd_print@addr:	
   738                           ; 1 bytes @ 0x4
   739                           
   740  0074                     ___wmul@product:	
   741                           ; 1 bytes @ 0x4
   742                           
   743                           
   744                           ; 2 bytes @ 0x4
   745  0074                     	ds	1
   746  0075                     ??_clcd_print:	
   747  0075                     ??_clcd_putch:	
   748                           ; 1 bytes @ 0x5
   749                           
   750  0075                     clcd_putch@data:	
   751                           ; 1 bytes @ 0x5
   752                           
   753  0075                     strcmp@r:	
   754                           ; 1 bytes @ 0x5
   755                           
   756                           
   757                           ; 1 bytes @ 0x5
   758  0075                     	ds	1
   759  0076                     ??_init_clcd:	
   760  0076                     ?_ledblink:	
   761                           ; 1 bytes @ 0x6
   762                           
   763  0076                     ??_init_config:	
   764                           ; 1 bytes @ 0x6
   765                           
   766  0076                     clcd_print@str:	
   767                           ; 1 bytes @ 0x6
   768                           
   769  0076                     strcmp@s1:	
   770                           ; 1 bytes @ 0x6
   771                           
   772  0076                     ledblink@chance:	
   773                           ; 1 bytes @ 0x6
   774                           
   775                           
   776                           ; 2 bytes @ 0x6
   777  0076                     	ds	2
   778  0078                     ??_ledblink:	
   779  0078                     ??_main:	
   780                           ; 1 bytes @ 0x8
   781                           
   782                           
   783                           ; 1 bytes @ 0x8
   784  0078                     	ds	1
   785  0079                     main@wait:	
   786                           
   787                           ; 2 bytes @ 0x9
   788  0079                     	ds	2
   789  007B                     main@key:	
   790                           
   791                           ; 1 bytes @ 0xB
   792  007B                     	ds	1
   793  007C                     main@j:	
   794                           
   795                           ; 2 bytes @ 0xC
   796  007C                     	ds	2
   797                           
   798                           	psect	maintext
   799  06BA                     __pmaintext:	
   800 ;;
   801 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   802 ;;
   803 ;; *************** function _main *****************
   804 ;; Defined at:
   805 ;;		line 44 in file "main.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;		None
   808 ;; Auto vars:     Size  Location     Type
   809 ;;  j               2   12[COMMON] unsigned int 
   810 ;;  wait            2    9[COMMON] unsigned int 
   811 ;;  key             1   11[COMMON] unsigned char 
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      void 
   814 ;; Registers used:
   815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   816 ;; Tracked objects:
   817 ;;		On entry : B00/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   821 ;;      Params:         0       0       0       0       0
   822 ;;      Locals:         5       0       0       0       0
   823 ;;      Temps:          1       0       0       0       0
   824 ;;      Totals:         6       0       0       0       0
   825 ;;Total ram usage:        6 bytes
   826 ;; Hardware stack levels required when called:    4
   827 ;; This function calls:
   828 ;;		_clcd_print
   829 ;;		_clcd_putch
   830 ;;		_init_config
   831 ;;		_ledblink
   832 ;;		_read_matrix_keypad
   833 ;;		_strcmp
   834 ;; This function is called by:
   835 ;;		Startup code after reset
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           
   840                           ;psect for function _main
   841  06BA                     _main:	
   842  06BA                     l1281:	
   843                           ;incstack = 0
   844                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   845                           
   846                           
   847                           ;main.c: 45:                 clcd_print("Reset the board ",(0xC0 + 0));
   848  06BA  01F9               	clrf	main@wait
   849  06BB  01FA               	clrf	main@wait+1
   850  06BC  01FC               	clrf	main@j
   851  06BD  01FD               	clrf	main@j+1
   852  06BE                     l1283:	
   853                           
   854                           ;main.c: 46:                 i = 17;;main.c: 47:                 initial = 0;
   855  06BE  120A  118A  24C0  120A  118A  	fcall	_init_config
   856  06C3                     l1285:	
   857                           
   858                           ;main.c: 51:                 clcd_print(" Enter Password ",(0x80 + 0));
   859  06C3  1283               	bcf	3,5	;RP0=0, select bank0
   860  06C4  1303               	bcf	3,6	;RP1=0, select bank0
   861  06C5  0834               	movf	_chance+1,w
   862  06C6  3A80               	xorlw	128
   863  06C7  00FF               	movwf	btemp+1
   864  06C8  3080               	movlw	128
   865  06C9  027F               	subwf	btemp+1,w
   866  06CA  1D03               	skipz
   867  06CB  2ECE               	goto	u655
   868  06CC  3005               	movlw	5
   869  06CD  0233               	subwf	_chance,w
   870  06CE                     u655:	
   871  06CE  1803               	skipnc
   872  06CF  2ED1               	goto	u651
   873  06D0  2ED2               	goto	u650
   874  06D1                     u651:	
   875  06D1  2EE1               	goto	l57
   876  06D2                     u650:	
   877  06D2                     l1287:	
   878  06D2  1283               	bcf	3,5	;RP0=0, select bank0
   879  06D3  1303               	bcf	3,6	;RP1=0, select bank0
   880  06D4  1BB4               	btfsc	_chance+1,7
   881  06D5  2ED7               	goto	u661
   882  06D6  2ED8               	goto	u660
   883  06D7                     u661:	
   884  06D7  2EE1               	goto	l57
   885  06D8                     u660:	
   886  06D8                     l1289:	
   887                           
   888                           ;main.c: 52:                 clcd_print("                ",(0xC0 + 0));;main.c: 53:     
      +                                      user[9]=0;
   889  06D8  0834               	movf	_chance+1,w
   890  06D9  00F7               	movwf	ledblink@chance+1
   891  06DA  0833               	movf	_chance,w
   892  06DB  00F6               	movwf	ledblink@chance
   893  06DC  120A  118A  24FD  120A  118A  	fcall	_ledblink
   894  06E1                     l57:	
   895                           ;main.c: 54:                 initial = 0,j = 0,i = 3,wait = 0;
   896                           
   897                           
   898                           ;main.c: 56:         }
   899  06E1  3001               	movlw	1
   900  06E2  120A  118A  254B  120A  118A  	fcall	_read_matrix_keypad
   901  06E7  00F8               	movwf	??_main
   902  06E8  0878               	movf	??_main,w
   903  06E9  00FB               	movwf	main@key
   904  06EA                     l1291:	
   905                           
   906                           ;main.c: 58:        if(key != 0xFF)
   907  06EA  1283               	bcf	3,5	;RP0=0, select bank0
   908  06EB  1303               	bcf	3,6	;RP1=0, select bank0
   909  06EC  0838               	movf	_initial,w
   910  06ED  1903               	btfsc	3,2
   911  06EE  2EF0               	goto	u671
   912  06EF  2EF1               	goto	u670
   913  06F0                     u671:	
   914  06F0  2F33               	goto	l1313
   915  06F1                     u670:	
   916  06F1                     l1293:	
   917                           
   918                           ;main.c: 59:         {;main.c: 60:             if(i <= 10)
   919  06F1  0833               	movf	_chance,w
   920  06F2  0434               	iorwf	_chance+1,w
   921  06F3  1D03               	btfss	3,2
   922  06F4  2EF6               	goto	u681
   923  06F5  2EF7               	goto	u680
   924  06F6                     u681:	
   925  06F6  2F13               	goto	l1301
   926  06F7                     u680:	
   927  06F7                     l1295:	
   928                           
   929                           ;main.c: 61:             {;main.c: 62:                 user[j]='0' + key;
   930  06F7  3080               	movlw	128
   931  06F8  00F8               	movwf	??_main
   932  06F9  0878               	movf	??_main,w
   933  06FA  00F4               	movwf	clcd_print@addr
   934  06FB  3045               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   935  06FC  120A  118A  2523  120A  118A  	fcall	_clcd_print
   936                           
   937                           ;main.c: 63:                 clcd_putch('*',(0xC0 + i));
   938  0701  30C0               	movlw	192
   939  0702  00F8               	movwf	??_main
   940  0703  0878               	movf	??_main,w
   941  0704  00F4               	movwf	clcd_print@addr
   942  0705  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   943  0706  120A  118A  2523  120A  118A  	fcall	_clcd_print
   944  070B                     l1297:	
   945                           
   946                           ;main.c: 64:                 j++;
   947  070B  3011               	movlw	17
   948  070C  1283               	bcf	3,5	;RP0=0, select bank0
   949  070D  1303               	bcf	3,6	;RP1=0, select bank0
   950  070E  00B5               	movwf	_i
   951  070F  3000               	movlw	0
   952  0710  00B6               	movwf	_i+1
   953  0711                     l1299:	
   954                           
   955                           ;main.c: 65:                 i++;
   956  0711  01B8               	clrf	_initial
   957                           
   958                           ;main.c: 66:             }
   959  0712  2F33               	goto	l1313
   960  0713                     l1301:	
   961                           
   962                           ;main.c: 68: ;main.c: 69:         else if(j == 8)
   963  0713  3080               	movlw	128
   964  0714  00F8               	movwf	??_main
   965  0715  0878               	movf	??_main,w
   966  0716  00F4               	movwf	clcd_print@addr
   967  0717  3023               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   968  0718  120A  118A  2523  120A  118A  	fcall	_clcd_print
   969                           
   970                           ;main.c: 70:         {
   971  071D  30C0               	movlw	192
   972  071E  00F8               	movwf	??_main
   973  071F  0878               	movf	??_main,w
   974  0720  00F4               	movwf	clcd_print@addr
   975  0721  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   976  0722  120A  118A  2523  120A  118A  	fcall	_clcd_print
   977  0727                     l1303:	
   978                           
   979                           ;main.c: 71:             user[j]='\0';
   980  0727  1283               	bcf	3,5	;RP0=0, select bank0
   981  0728  1303               	bcf	3,6	;RP1=0, select bank0
   982  0729  01B2               	clrf	_user+9
   983  072A                     l1305:	
   984                           
   985                           ;main.c: 72: 
   986  072A  01B8               	clrf	_initial
   987  072B                     l1307:	
   988  072B  01FC               	clrf	main@j
   989  072C  01FD               	clrf	main@j+1
   990  072D                     l1309:	
   991  072D  3003               	movlw	3
   992  072E  00B5               	movwf	_i
   993  072F  3000               	movlw	0
   994  0730  00B6               	movwf	_i+1
   995  0731                     l1311:	
   996  0731  01F9               	clrf	main@wait
   997  0732  01FA               	clrf	main@wait+1
   998  0733                     l1313:	
   999                           
  1000                           ;main.c: 76:                clcd_print("Cracked the code",(0xC0 + 0));
  1001  0733  0A7B               	incf	main@key,w
  1002  0734  1903               	btfsc	3,2
  1003  0735  2F37               	goto	u691
  1004  0736  2F38               	goto	u690
  1005  0737                     u691:	
  1006  0737  2F6A               	goto	l1325
  1007  0738                     u690:	
  1008  0738                     l1315:	
  1009                           
  1010                           ;main.c: 77:                wait = 4;;main.c: 78:                chance = 5;
  1011  0738  0836               	movf	_i+1,w
  1012  0739  3A80               	xorlw	128
  1013  073A  00FF               	movwf	btemp+1
  1014  073B  3080               	movlw	128
  1015  073C  027F               	subwf	btemp+1,w
  1016  073D  1D03               	skipz
  1017  073E  2F41               	goto	u705
  1018  073F  300B               	movlw	11
  1019  0740  0235               	subwf	_i,w
  1020  0741                     u705:	
  1021  0741  1803               	skipnc
  1022  0742  2F44               	goto	u701
  1023  0743  2F45               	goto	u700
  1024  0744                     u701:	
  1025  0744  2FB5               	goto	l1343
  1026  0745                     u700:	
  1027  0745                     l1317:	
  1028                           
  1029                           ;main.c: 79:            };main.c: 80:            else if(chance != 0)
  1030  0745  087B               	movf	main@key,w
  1031  0746  3E30               	addlw	48
  1032  0747  00F8               	movwf	??_main
  1033  0748  087C               	movf	main@j,w
  1034  0749  3E29               	addlw	(low (_user| 0))& (0+255)
  1035  074A  0084               	movwf	4
  1036  074B  0878               	movf	??_main,w
  1037  074C  1383               	bcf	3,7	;select IRP bank0
  1038  074D  0080               	movwf	0
  1039  074E                     l1319:	
  1040                           
  1041                           ;main.c: 81:            {
  1042  074E  1283               	bcf	3,5	;RP0=0, select bank0
  1043  074F  1303               	bcf	3,6	;RP1=0, select bank0
  1044  0750  0835               	movf	_i,w
  1045  0751  3EC0               	addlw	192
  1046  0752  00F8               	movwf	??_main
  1047  0753  0878               	movf	??_main,w
  1048  0754  00F4               	movwf	clcd_putch@addr
  1049  0755  302A               	movlw	42
  1050  0756  120A  118A  249C  120A  118A  	fcall	_clcd_putch
  1051  075B                     l1321:	
  1052                           
  1053                           ;main.c: 82:                initial = 1;
  1054  075B  3001               	movlw	1
  1055  075C  07FC               	addwf	main@j,f
  1056  075D  1803               	skipnc
  1057  075E  0AFD               	incf	main@j+1,f
  1058  075F  3000               	movlw	0
  1059  0760  07FD               	addwf	main@j+1,f
  1060  0761                     l1323:	
  1061                           
  1062                           ;main.c: 83:                chance--;
  1063  0761  3001               	movlw	1
  1064  0762  1283               	bcf	3,5	;RP0=0, select bank0
  1065  0763  1303               	bcf	3,6	;RP1=0, select bank0
  1066  0764  07B5               	addwf	_i,f
  1067  0765  1803               	skipnc
  1068  0766  0AB6               	incf	_i+1,f
  1069  0767  3000               	movlw	0
  1070  0768  07B6               	addwf	_i+1,f
  1071  0769  2FB5               	goto	l1343
  1072  076A                     l1325:	
  1073  076A  3008               	movlw	8
  1074  076B  067C               	xorwf	main@j,w
  1075  076C  047D               	iorwf	main@j+1,w
  1076  076D  1D03               	btfss	3,2
  1077  076E  2F70               	goto	u711
  1078  076F  2F71               	goto	u710
  1079  0770                     u711:	
  1080  0770  2FB5               	goto	l1343
  1081  0771                     u710:	
  1082  0771                     l1327:	
  1083                           
  1084                           ;main.c: 88:         {;main.c: 89:             wait = 1;
  1085  0771  087C               	movf	main@j,w
  1086  0772  3E29               	addlw	(low (_user| 0))& (0+255)
  1087  0773  0084               	movwf	4
  1088  0774  1383               	bcf	3,7	;select IRP bank0
  1089  0775  0180               	clrf	0
  1090  0776                     l1329:	
  1091                           
  1092                           ;main.c: 91:         }
  1093  0776  3067               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1094  0777  00F8               	movwf	??_main
  1095  0778  0878               	movf	??_main,w
  1096  0779  00F0               	movwf	strcmp@s2
  1097  077A  3029               	movlw	(low (_user| 0))& (0+255)
  1098  077B  120A  118A  2574  120A  118A  	fcall	_strcmp
  1099  0780  0870               	movf	?_strcmp,w
  1100  0781  0471               	iorwf	?_strcmp+1,w
  1101  0782  1D03               	btfss	3,2
  1102  0783  2F85               	goto	u721
  1103  0784  2F86               	goto	u720
  1104  0785                     u721:	
  1105  0785  2FA5               	goto	l1337
  1106  0786                     u720:	
  1107  0786                     l1331:	
  1108                           
  1109                           ;main.c: 92:         else;main.c: 93:         {
  1110  0786  3080               	movlw	128
  1111  0787  00F8               	movwf	??_main
  1112  0788  0878               	movf	??_main,w
  1113  0789  00F4               	movwf	clcd_print@addr
  1114  078A  3034               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1115  078B  120A  118A  2523  120A  118A  	fcall	_clcd_print
  1116                           
  1117                           ;main.c: 94:             clcd_putch(' ',(0xC0 + i));
  1118  0790  30C0               	movlw	192
  1119  0791  00F8               	movwf	??_main
  1120  0792  0878               	movf	??_main,w
  1121  0793  00F4               	movwf	clcd_print@addr
  1122  0794  3056               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1123  0795  120A  118A  2523  120A  118A  	fcall	_clcd_print
  1124  079A                     l1333:	
  1125                           
  1126                           ;main.c: 95:         }
  1127  079A  3004               	movlw	4
  1128  079B  00F9               	movwf	main@wait
  1129  079C  3000               	movlw	0
  1130  079D  00FA               	movwf	main@wait+1
  1131  079E                     l1335:	
  1132                           
  1133                           ;main.c: 96: 
  1134  079E  3005               	movlw	5
  1135  079F  1283               	bcf	3,5	;RP0=0, select bank0
  1136  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  1137  07A1  00B3               	movwf	_chance
  1138  07A2  3000               	movlw	0
  1139  07A3  00B4               	movwf	_chance+1
  1140                           
  1141                           ;main.c: 97:     }
  1142  07A4  2FB5               	goto	l1343
  1143  07A5                     l1337:	
  1144  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1145  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1146  07A7  0833               	movf	_chance,w
  1147  07A8  0434               	iorwf	_chance+1,w
  1148  07A9  1903               	btfsc	3,2
  1149  07AA  2FAC               	goto	u731
  1150  07AB  2FAD               	goto	u730
  1151  07AC                     u731:	
  1152  07AC  2FB5               	goto	l1343
  1153  07AD                     u730:	
  1154  07AD                     l1339:	
  1155                           
  1156                           ;main.c: 99:     return;;main.c: 100: }
  1157  07AD  01B8               	clrf	_initial
  1158  07AE  0AB8               	incf	_initial,f
  1159  07AF                     l1341:	
  1160  07AF  30FF               	movlw	255
  1161  07B0  07B3               	addwf	_chance,f
  1162  07B1  1803               	skipnc
  1163  07B2  0AB4               	incf	_chance+1,f
  1164  07B3  30FF               	movlw	255
  1165  07B4  07B4               	addwf	_chance+1,f
  1166  07B5                     l1343:	
  1167  07B5  3001               	movlw	1
  1168  07B6  02F9               	subwf	main@wait,f
  1169  07B7  3000               	movlw	0
  1170  07B8  1C03               	skipc
  1171  07B9  03FA               	decf	main@wait+1,f
  1172  07BA  02FA               	subwf	main@wait+1,f
  1173  07BB  0A79               	incf	main@wait,w
  1174  07BC  1D03               	skipz
  1175  07BD  2FC2               	goto	u741
  1176  07BE  0A7A               	incf	main@wait+1,w
  1177  07BF  1D03               	btfss	3,2
  1178  07C0  2FC2               	goto	u741
  1179  07C1  2FC3               	goto	u740
  1180  07C2                     u741:	
  1181  07C2  2FD5               	goto	l1349
  1182  07C3                     u740:	
  1183  07C3                     l1345:	
  1184  07C3  3001               	movlw	1
  1185  07C4  00F9               	movwf	main@wait
  1186  07C5  3000               	movlw	0
  1187  07C6  00FA               	movwf	main@wait+1
  1188  07C7                     l1347:	
  1189  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1190  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1191  07C9  0835               	movf	_i,w
  1192  07CA  3EC0               	addlw	192
  1193  07CB  00F8               	movwf	??_main
  1194  07CC  0878               	movf	??_main,w
  1195  07CD  00F4               	movwf	clcd_putch@addr
  1196  07CE  305F               	movlw	95
  1197  07CF  120A  118A  249C  120A  118A  	fcall	_clcd_putch
  1198  07D4  2EC3               	goto	l1285
  1199  07D5                     l1349:	
  1200  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1201  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1202  07D7  0835               	movf	_i,w
  1203  07D8  3EC0               	addlw	192
  1204  07D9  00F8               	movwf	??_main
  1205  07DA  0878               	movf	??_main,w
  1206  07DB  00F4               	movwf	clcd_putch@addr
  1207  07DC  3020               	movlw	32
  1208  07DD  120A  118A  249C  120A  118A  	fcall	_clcd_putch
  1209  07E2  2EC3               	goto	l1285
  1210  07E3  120A  118A  2800   	ljmp	start
  1211  07E6                     __end_of_main:	
  1212                           
  1213                           	psect	text1
  1214  0574                     __ptext1:	
  1215 ;; *************** function _strcmp *****************
  1216 ;; Defined at:
  1217 ;;		line 33 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strcmp.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;  s1              1    wreg     PTR const unsigned char 
  1220 ;;		 -> user(10), 
  1221 ;;  s2              1    0[COMMON] PTR const unsigned char 
  1222 ;;		 -> STR_1(9), 
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;  s1              1    6[COMMON] PTR const unsigned char 
  1225 ;;		 -> user(10), 
  1226 ;;  r               1    5[COMMON] char 
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  2    0[COMMON] int 
  1229 ;; Registers used:
  1230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1236 ;;      Params:         2       0       0       0       0
  1237 ;;      Locals:         2       0       0       0       0
  1238 ;;      Temps:          3       0       0       0       0
  1239 ;;      Totals:         7       0       0       0       0
  1240 ;;Total ram usage:        7 bytes
  1241 ;; Hardware stack levels used:    2
  1242 ;; This function calls:
  1243 ;;		Nothing
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           
  1250                           ;psect for function _strcmp
  1251  0574                     _strcmp:	
  1252                           
  1253                           ;incstack = 0
  1254                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+pclath]
  1255                           ;strcmp@s1 stored from wreg
  1256  0574  00F6               	movwf	strcmp@s1
  1257  0575                     l1267:	
  1258  0575  2D7E               	goto	l1273
  1259  0576                     l1269:	
  1260  0576  3001               	movlw	1
  1261  0577  00F2               	movwf	??_strcmp
  1262  0578  0872               	movf	??_strcmp,w
  1263  0579  07F6               	addwf	strcmp@s1,f
  1264  057A                     l1271:	
  1265  057A  3001               	movlw	1
  1266  057B  00F2               	movwf	??_strcmp
  1267  057C  0872               	movf	??_strcmp,w
  1268  057D  07F0               	addwf	strcmp@s2,f
  1269  057E                     l1273:	
  1270  057E  0870               	movf	strcmp@s2,w
  1271  057F  0084               	movwf	4
  1272  0580  120A  118A  2003  120A  118A  	fcall	stringdir
  1273  0585  00F2               	movwf	??_strcmp
  1274  0586  0876               	movf	strcmp@s1,w
  1275  0587  0084               	movwf	4
  1276  0588  1383               	bcf	3,7	;select IRP bank0
  1277  0589  0800               	movf	0,w
  1278  058A  00F3               	movwf	??_strcmp+1
  1279  058B  0872               	movf	??_strcmp,w
  1280  058C  0273               	subwf	??_strcmp+1,w
  1281  058D  00F4               	movwf	??_strcmp+2
  1282  058E  0874               	movf	??_strcmp+2,w
  1283  058F  00F5               	movwf	strcmp@r
  1284  0590  0875               	movf	strcmp@r,w
  1285  0591  1D03               	btfss	3,2
  1286  0592  2D94               	goto	u631
  1287  0593  2D95               	goto	u630
  1288  0594                     u631:	
  1289  0594  2D9C               	goto	l1277
  1290  0595                     u630:	
  1291  0595                     l1275:	
  1292  0595  0876               	movf	strcmp@s1,w
  1293  0596  0084               	movwf	4
  1294  0597  0800               	movf	0,w
  1295  0598  1D03               	btfss	3,2
  1296  0599  2D9B               	goto	u641
  1297  059A  2D9C               	goto	u640
  1298  059B                     u641:	
  1299  059B  2D76               	goto	l1269
  1300  059C                     u640:	
  1301  059C                     l1277:	
  1302  059C  0875               	movf	strcmp@r,w
  1303  059D  00F0               	movwf	?_strcmp
  1304  059E  01F1               	clrf	?_strcmp+1
  1305  059F  1BF0               	btfsc	?_strcmp,7
  1306  05A0  03F1               	decf	?_strcmp+1,f
  1307  05A1                     l711:	
  1308  05A1  0008               	return
  1309  05A2                     __end_of_strcmp:	
  1310                           
  1311                           	psect	text2
  1312  054B                     __ptext2:	
  1313 ;; *************** function _read_matrix_keypad *****************
  1314 ;; Defined at:
  1315 ;;		line 89 in file "matrix_keypad.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  mode            1    wreg     unsigned char 
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  mode            1    3[COMMON] unsigned char 
  1320 ;;  key             1    4[COMMON] unsigned char 
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      unsigned char 
  1323 ;; Registers used:
  1324 ;;		wreg, status,2, status,0, pclath, cstack
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1330 ;;      Params:         0       0       0       0       0
  1331 ;;      Locals:         2       0       0       0       0
  1332 ;;      Temps:          1       0       0       0       0
  1333 ;;      Totals:         3       0       0       0       0
  1334 ;;Total ram usage:        3 bytes
  1335 ;; Hardware stack levels used:    1
  1336 ;; Hardware stack levels required when called:    1
  1337 ;; This function calls:
  1338 ;;		_scan_keypad
  1339 ;; This function is called by:
  1340 ;;		_main
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           
  1345                           ;psect for function _read_matrix_keypad
  1346  054B                     _read_matrix_keypad:	
  1347                           
  1348                           ;incstack = 0
  1349                           ; Regs used in _read_matrix_keypad: [wreg+status,2+status,0+pclath+cstack]
  1350                           ;read_matrix_keypad@mode stored from wreg
  1351  054B  00F3               	movwf	read_matrix_keypad@mode
  1352  054C                     l1227:	
  1353                           
  1354                           ;matrix_keypad.c: 89: unsigned char read_matrix_keypad(unsigned char mode);matrix_keypad
      +                          .c: 90: {;matrix_keypad.c: 91:     static unsigned char once = 1;;matrix_keypad.c: 92:  
      +                             unsigned char key;;matrix_keypad.c: 94:     key = scan_keypad();
  1355  054C  120A  118A  263B  120A  118A  	fcall	_scan_keypad
  1356  0551  00F2               	movwf	??_read_matrix_keypad
  1357  0552  0872               	movf	??_read_matrix_keypad,w
  1358  0553  00F4               	movwf	read_matrix_keypad@key
  1359  0554                     l1229:	
  1360                           
  1361                           ;matrix_keypad.c: 96:     if (mode == 0)
  1362  0554  0873               	movf	read_matrix_keypad@mode,w
  1363  0555  1D03               	btfss	3,2
  1364  0556  2D58               	goto	u581
  1365  0557  2D59               	goto	u580
  1366  0558                     u581:	
  1367  0558  2D5B               	goto	l1237
  1368  0559                     u580:	
  1369  0559                     l1231:	
  1370                           
  1371                           ;matrix_keypad.c: 97:     {;matrix_keypad.c: 98:         return key;
  1372  0559  0874               	movf	read_matrix_keypad@key,w
  1373  055A  2D73               	goto	l126
  1374  055B                     l1237:	
  1375                           
  1376                           ;matrix_keypad.c: 101:     {;matrix_keypad.c: 102:         if ((key != 0xFF) && once)
  1377  055B  0A74               	incf	read_matrix_keypad@key,w
  1378  055C  1903               	btfsc	3,2
  1379  055D  2D5F               	goto	u591
  1380  055E  2D60               	goto	u590
  1381  055F                     u591:	
  1382  055F  2D69               	goto	l1249
  1383  0560                     u590:	
  1384  0560                     l1239:	
  1385  0560  1283               	bcf	3,5	;RP0=0, select bank0
  1386  0561  1303               	bcf	3,6	;RP1=0, select bank0
  1387  0562  0837               	movf	read_matrix_keypad@once,w
  1388  0563  1903               	btfsc	3,2
  1389  0564  2D66               	goto	u601
  1390  0565  2D67               	goto	u600
  1391  0566                     u601:	
  1392  0566  2D69               	goto	l1249
  1393  0567                     u600:	
  1394  0567                     l1241:	
  1395                           
  1396                           ;matrix_keypad.c: 103:         {;matrix_keypad.c: 104:             once = 0;
  1397  0567  01B7               	clrf	read_matrix_keypad@once
  1398  0568  2D59               	goto	l1231
  1399  0569                     l1249:	
  1400  0569  0A74               	incf	read_matrix_keypad@key,w
  1401  056A  1D03               	btfss	3,2
  1402  056B  2D6D               	goto	u611
  1403  056C  2D6E               	goto	u610
  1404  056D                     u611:	
  1405  056D  2D72               	goto	l1253
  1406  056E                     u610:	
  1407  056E                     l1251:	
  1408                           
  1409                           ;matrix_keypad.c: 109:         {;matrix_keypad.c: 110:             once = 1;
  1410  056E  1283               	bcf	3,5	;RP0=0, select bank0
  1411  056F  1303               	bcf	3,6	;RP1=0, select bank0
  1412  0570  01B7               	clrf	read_matrix_keypad@once
  1413  0571  0AB7               	incf	read_matrix_keypad@once,f
  1414  0572                     l1253:	
  1415                           
  1416                           ;matrix_keypad.c: 114:     return 0xFF;
  1417  0572  30FF               	movlw	255
  1418  0573                     l126:	
  1419  0573  0008               	return
  1420  0574                     __end_of_read_matrix_keypad:	
  1421                           
  1422                           	psect	text3
  1423  063B                     __ptext3:	
  1424 ;; *************** function _scan_keypad *****************
  1425 ;; Defined at:
  1426 ;;		line 21 in file "matrix_keypad.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  i               2    0[COMMON] int 
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      unsigned char 
  1433 ;; Registers used:
  1434 ;;		wreg, status,2, status,0
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1440 ;;      Params:         0       0       0       0       0
  1441 ;;      Locals:         2       0       0       0       0
  1442 ;;      Temps:          0       0       0       0       0
  1443 ;;      Totals:         2       0       0       0       0
  1444 ;;Total ram usage:        2 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; This function calls:
  1447 ;;		Nothing
  1448 ;; This function is called by:
  1449 ;;		_read_matrix_keypad
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           
  1454                           ;psect for function _scan_keypad
  1455  063B                     _scan_keypad:	
  1456  063B                     l1131:	
  1457                           ;incstack = 0
  1458                           ; Regs used in _scan_keypad: [wreg+status,2+status,0]
  1459                           
  1460                           
  1461                           ;matrix_keypad.c: 23:     int i;;matrix_keypad.c: 25:     RD3 = 0;
  1462  063B  1283               	bcf	3,5	;RP0=0, select bank0
  1463  063C  1303               	bcf	3,6	;RP1=0, select bank0
  1464  063D  1188               	bcf	8,3	;volatile
  1465                           
  1466                           ;matrix_keypad.c: 26:     RD2 = 1;
  1467  063E  1508               	bsf	8,2	;volatile
  1468                           
  1469                           ;matrix_keypad.c: 27:     RD1 = 1;
  1470  063F  1488               	bsf	8,1	;volatile
  1471  0640                     l1133:	
  1472                           
  1473                           ;matrix_keypad.c: 30:     for (i = 100; i--; );
  1474  0640  3064               	movlw	100
  1475  0641  00F0               	movwf	scan_keypad@i
  1476  0642  3000               	movlw	0
  1477  0643  00F1               	movwf	scan_keypad@i+1
  1478  0644                     l1135:	
  1479  0644  30FF               	movlw	255
  1480  0645  07F0               	addwf	scan_keypad@i,f
  1481  0646  1803               	skipnc
  1482  0647  0AF1               	incf	scan_keypad@i+1,f
  1483  0648  30FF               	movlw	255
  1484  0649  07F1               	addwf	scan_keypad@i+1,f
  1485  064A  0A70               	incf	scan_keypad@i,w
  1486  064B  1D03               	skipz
  1487  064C  2E51               	goto	u411
  1488  064D  0A71               	incf	scan_keypad@i+1,w
  1489  064E  1D03               	btfss	3,2
  1490  064F  2E51               	goto	u411
  1491  0650  2E52               	goto	u410
  1492  0651                     u411:	
  1493  0651  2E44               	goto	l1135
  1494  0652                     u410:	
  1495  0652                     l98:	
  1496                           
  1497                           ;matrix_keypad.c: 32:     if (RB0 == 0)
  1498  0652  1283               	bcf	3,5	;RP0=0, select bank0
  1499  0653  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0654  1806               	btfsc	6,0	;volatile
  1501  0655  2E57               	goto	u421
  1502  0656  2E58               	goto	u420
  1503  0657                     u421:	
  1504  0657  2E5A               	goto	l99
  1505  0658                     u420:	
  1506  0658                     l1137:	
  1507                           
  1508                           ;matrix_keypad.c: 33:     {;matrix_keypad.c: 34:         return 1;
  1509  0658  3001               	movlw	1
  1510  0659  2EB9               	goto	l100
  1511  065A                     l99:	
  1512                           ;matrix_keypad.c: 36:     else if (RB1 == 0)
  1513                           
  1514  065A  1886               	btfsc	6,1	;volatile
  1515  065B  2E5D               	goto	u431
  1516  065C  2E5E               	goto	u430
  1517  065D                     u431:	
  1518  065D  2E60               	goto	l102
  1519  065E                     u430:	
  1520  065E                     l1143:	
  1521                           
  1522                           ;matrix_keypad.c: 37:     {;matrix_keypad.c: 38:         return 2;
  1523  065E  3002               	movlw	2
  1524  065F  2EB9               	goto	l100
  1525  0660                     l102:	
  1526                           ;matrix_keypad.c: 40:     else if (RB2 == 0)
  1527                           
  1528  0660  1906               	btfsc	6,2	;volatile
  1529  0661  2E63               	goto	u441
  1530  0662  2E64               	goto	u440
  1531  0663                     u441:	
  1532  0663  2E66               	goto	l101
  1533  0664                     u440:	
  1534  0664                     l1149:	
  1535                           
  1536                           ;matrix_keypad.c: 41:     {;matrix_keypad.c: 42:         return 3;
  1537  0664  3003               	movlw	3
  1538  0665  2EB9               	goto	l100
  1539  0666                     l101:	
  1540                           
  1541                           ;matrix_keypad.c: 46:     RD2 = 0;
  1542  0666  1108               	bcf	8,2	;volatile
  1543                           
  1544                           ;matrix_keypad.c: 47:     RD1 = 1;
  1545  0667  1488               	bsf	8,1	;volatile
  1546                           
  1547                           ;matrix_keypad.c: 48:     RD3 = 1;
  1548  0668  1588               	bsf	8,3	;volatile
  1549  0669                     l1153:	
  1550                           
  1551                           ;matrix_keypad.c: 50:     for (i = 100; i--; );
  1552  0669  3064               	movlw	100
  1553  066A  00F0               	movwf	scan_keypad@i
  1554  066B  3000               	movlw	0
  1555  066C  00F1               	movwf	scan_keypad@i+1
  1556  066D                     l1155:	
  1557  066D  30FF               	movlw	255
  1558  066E  07F0               	addwf	scan_keypad@i,f
  1559  066F  1803               	skipnc
  1560  0670  0AF1               	incf	scan_keypad@i+1,f
  1561  0671  30FF               	movlw	255
  1562  0672  07F1               	addwf	scan_keypad@i+1,f
  1563  0673  0A70               	incf	scan_keypad@i,w
  1564  0674  1D03               	skipz
  1565  0675  2E7A               	goto	u451
  1566  0676  0A71               	incf	scan_keypad@i+1,w
  1567  0677  1D03               	btfss	3,2
  1568  0678  2E7A               	goto	u451
  1569  0679  2E7B               	goto	u450
  1570  067A                     u451:	
  1571  067A  2E6D               	goto	l1155
  1572  067B                     u450:	
  1573  067B                     l107:	
  1574                           
  1575                           ;matrix_keypad.c: 52:     if (RB0 == 0)
  1576  067B  1283               	bcf	3,5	;RP0=0, select bank0
  1577  067C  1303               	bcf	3,6	;RP1=0, select bank0
  1578  067D  1806               	btfsc	6,0	;volatile
  1579  067E  2E80               	goto	u461
  1580  067F  2E81               	goto	u460
  1581  0680                     u461:	
  1582  0680  2E83               	goto	l108
  1583  0681                     u460:	
  1584  0681                     l1157:	
  1585                           
  1586                           ;matrix_keypad.c: 53:     {;matrix_keypad.c: 54:         return 4;
  1587  0681  3004               	movlw	4
  1588  0682  2EB9               	goto	l100
  1589  0683                     l108:	
  1590                           ;matrix_keypad.c: 56:     else if (RB1 == 0)
  1591                           
  1592  0683  1886               	btfsc	6,1	;volatile
  1593  0684  2E86               	goto	u471
  1594  0685  2E87               	goto	u470
  1595  0686                     u471:	
  1596  0686  2E89               	goto	l110
  1597  0687                     u470:	
  1598  0687                     l1163:	
  1599                           
  1600                           ;matrix_keypad.c: 57:     {;matrix_keypad.c: 58:         return 5;
  1601  0687  3005               	movlw	5
  1602  0688  2EB9               	goto	l100
  1603  0689                     l110:	
  1604                           ;matrix_keypad.c: 60:     else if (RB2 == 0)
  1605                           
  1606  0689  1906               	btfsc	6,2	;volatile
  1607  068A  2E8C               	goto	u481
  1608  068B  2E8D               	goto	u480
  1609  068C                     u481:	
  1610  068C  2E8F               	goto	l109
  1611  068D                     u480:	
  1612  068D                     l1169:	
  1613                           
  1614                           ;matrix_keypad.c: 61:     {;matrix_keypad.c: 62:         return 6;
  1615  068D  3006               	movlw	6
  1616  068E  2EB9               	goto	l100
  1617  068F                     l109:	
  1618                           
  1619                           ;matrix_keypad.c: 66:     RD2 = 1;
  1620  068F  1508               	bsf	8,2	;volatile
  1621                           
  1622                           ;matrix_keypad.c: 67:     RD1 = 0;
  1623  0690  1088               	bcf	8,1	;volatile
  1624                           
  1625                           ;matrix_keypad.c: 68:     RD3 = 1;
  1626  0691  1588               	bsf	8,3	;volatile
  1627  0692                     l1173:	
  1628                           
  1629                           ;matrix_keypad.c: 70:     for (i = 100; i--; );
  1630  0692  3064               	movlw	100
  1631  0693  00F0               	movwf	scan_keypad@i
  1632  0694  3000               	movlw	0
  1633  0695  00F1               	movwf	scan_keypad@i+1
  1634  0696                     l1175:	
  1635  0696  30FF               	movlw	255
  1636  0697  07F0               	addwf	scan_keypad@i,f
  1637  0698  1803               	skipnc
  1638  0699  0AF1               	incf	scan_keypad@i+1,f
  1639  069A  30FF               	movlw	255
  1640  069B  07F1               	addwf	scan_keypad@i+1,f
  1641  069C  0A70               	incf	scan_keypad@i,w
  1642  069D  1D03               	skipz
  1643  069E  2EA3               	goto	u491
  1644  069F  0A71               	incf	scan_keypad@i+1,w
  1645  06A0  1D03               	btfss	3,2
  1646  06A1  2EA3               	goto	u491
  1647  06A2  2EA4               	goto	u490
  1648  06A3                     u491:	
  1649  06A3  2E96               	goto	l1175
  1650  06A4                     u490:	
  1651  06A4                     l115:	
  1652                           
  1653                           ;matrix_keypad.c: 72:     if (RB0 == 0)
  1654  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  1655  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  1656  06A6  1806               	btfsc	6,0	;volatile
  1657  06A7  2EA9               	goto	u501
  1658  06A8  2EAA               	goto	u500
  1659  06A9                     u501:	
  1660  06A9  2EAC               	goto	l116
  1661  06AA                     u500:	
  1662  06AA                     l1177:	
  1663                           
  1664                           ;matrix_keypad.c: 73:     {;matrix_keypad.c: 74:         return 7;
  1665  06AA  3007               	movlw	7
  1666  06AB  2EB9               	goto	l100
  1667  06AC                     l116:	
  1668                           ;matrix_keypad.c: 76:     else if (RB1 == 0)
  1669                           
  1670  06AC  1886               	btfsc	6,1	;volatile
  1671  06AD  2EAF               	goto	u511
  1672  06AE  2EB0               	goto	u510
  1673  06AF                     u511:	
  1674  06AF  2EB2               	goto	l118
  1675  06B0                     u510:	
  1676  06B0                     l1183:	
  1677                           
  1678                           ;matrix_keypad.c: 77:     {;matrix_keypad.c: 78:         return 8;
  1679  06B0  3008               	movlw	8
  1680  06B1  2EB9               	goto	l100
  1681  06B2                     l118:	
  1682                           ;matrix_keypad.c: 80:     else if (RB2 == 0)
  1683                           
  1684  06B2  1906               	btfsc	6,2	;volatile
  1685  06B3  2EB5               	goto	u521
  1686  06B4  2EB6               	goto	u520
  1687  06B5                     u521:	
  1688  06B5  2EB8               	goto	l1193
  1689  06B6                     u520:	
  1690  06B6                     l1189:	
  1691                           
  1692                           ;matrix_keypad.c: 81:     {;matrix_keypad.c: 82:         return 9;
  1693  06B6  3009               	movlw	9
  1694  06B7  2EB9               	goto	l100
  1695  06B8                     l1193:	
  1696                           
  1697                           ;matrix_keypad.c: 86:     return 0xFF;
  1698  06B8  30FF               	movlw	255
  1699  06B9                     l100:	
  1700  06B9  0008               	return
  1701  06BA                     __end_of_scan_keypad:	
  1702                           
  1703                           	psect	text4
  1704  04FD                     __ptext4:	
  1705 ;; *************** function _ledblink *****************
  1706 ;; Defined at:
  1707 ;;		line 24 in file "main.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  chance          2    6[COMMON] int 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;		None
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      void 
  1714 ;; Registers used:
  1715 ;;		wreg, status,2, status,0, pclath, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1721 ;;      Params:         2       0       0       0       0
  1722 ;;      Locals:         0       0       0       0       0
  1723 ;;      Temps:          0       0       0       0       0
  1724 ;;      Totals:         2       0       0       0       0
  1725 ;;Total ram usage:        2 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    1
  1728 ;; This function calls:
  1729 ;;		___wmul
  1730 ;; This function is called by:
  1731 ;;		_main
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           
  1736                           ;psect for function _ledblink
  1737  04FD                     _ledblink:	
  1738  04FD                     l1211:	
  1739                           ;incstack = 0
  1740                           ; Regs used in _ledblink: [wreg+status,2+status,0+pclath+cstack]
  1741                           
  1742                           
  1743                           ;main.c: 24: };main.c: 25: ;main.c: 26: void main(void) {;main.c: 27:     unsigned int w
      +                          ait = 0,j = 0;
  1744  04FD  3001               	movlw	1
  1745  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  1746  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  1747  0500  02A0               	subwf	ledblink@wait,f
  1748  0501  3000               	movlw	0
  1749  0502  1C03               	skipc
  1750  0503  03A1               	decf	ledblink@wait+1,f
  1751  0504  02A1               	subwf	ledblink@wait+1,f
  1752  0505  0A20               	incf	ledblink@wait,w
  1753  0506  1D03               	skipz
  1754  0507  2D0C               	goto	u571
  1755  0508  0A21               	incf	ledblink@wait+1,w
  1756  0509  1D03               	btfss	3,2
  1757  050A  2D0C               	goto	u571
  1758  050B  2D0D               	goto	u570
  1759  050C                     u571:	
  1760  050C  2D22               	goto	l48
  1761  050D                     u570:	
  1762  050D                     l1213:	
  1763                           
  1764                           ;main.c: 28:     unsigned char key;;main.c: 29:     init_config();
  1765  050D  0877               	movf	ledblink@chance+1,w
  1766  050E  00F1               	movwf	___wmul@multiplier+1
  1767  050F  0876               	movf	ledblink@chance,w
  1768  0510  00F0               	movwf	___wmul@multiplier
  1769  0511  3014               	movlw	20
  1770  0512  00F2               	movwf	___wmul@multiplicand
  1771  0513  3000               	movlw	0
  1772  0514  00F3               	movwf	___wmul@multiplicand+1
  1773  0515  120A  118A  24D8  120A  118A  	fcall	___wmul
  1774  051A  0871               	movf	?___wmul+1,w
  1775  051B  1283               	bcf	3,5	;RP0=0, select bank0
  1776  051C  1303               	bcf	3,6	;RP1=0, select bank0
  1777  051D  00A1               	movwf	ledblink@wait+1
  1778  051E  0870               	movf	?___wmul,w
  1779  051F  00A0               	movwf	ledblink@wait
  1780  0520                     l1215:	
  1781                           
  1782                           ;main.c: 31:     while (1) {
  1783  0520  3080               	movlw	128
  1784  0521  0686               	xorwf	6,f
  1785  0522                     l48:	
  1786  0522  0008               	return
  1787  0523                     __end_of_ledblink:	
  1788                           
  1789                           	psect	text5
  1790  04D8                     __ptext5:	
  1791 ;; *************** function ___wmul *****************
  1792 ;; Defined at:
  1793 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul16.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;  multiplier      2    0[COMMON] unsigned int 
  1796 ;;  multiplicand    2    2[COMMON] unsigned int 
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  product         2    4[COMMON] unsigned int 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  2    0[COMMON] unsigned int 
  1801 ;; Registers used:
  1802 ;;		wreg, status,2, status,0
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1808 ;;      Params:         4       0       0       0       0
  1809 ;;      Locals:         2       0       0       0       0
  1810 ;;      Temps:          0       0       0       0       0
  1811 ;;      Totals:         6       0       0       0       0
  1812 ;;Total ram usage:        6 bytes
  1813 ;; Hardware stack levels used:    1
  1814 ;; This function calls:
  1815 ;;		Nothing
  1816 ;; This function is called by:
  1817 ;;		_ledblink
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           
  1822                           ;psect for function ___wmul
  1823  04D8                     ___wmul:	
  1824  04D8                     l1197:	
  1825                           ;incstack = 0
  1826                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1827                           
  1828  04D8  01F4               	clrf	___wmul@product
  1829  04D9  01F5               	clrf	___wmul@product+1
  1830  04DA                     l1199:	
  1831  04DA  1C70               	btfss	___wmul@multiplier,0
  1832  04DB  2CDD               	goto	u531
  1833  04DC  2CDE               	goto	u530
  1834  04DD                     u531:	
  1835  04DD  2CE4               	goto	l261
  1836  04DE                     u530:	
  1837  04DE                     l1201:	
  1838  04DE  0872               	movf	___wmul@multiplicand,w
  1839  04DF  07F4               	addwf	___wmul@product,f
  1840  04E0  1803               	skipnc
  1841  04E1  0AF5               	incf	___wmul@product+1,f
  1842  04E2  0873               	movf	___wmul@multiplicand+1,w
  1843  04E3  07F5               	addwf	___wmul@product+1,f
  1844  04E4                     l261:	
  1845  04E4  3001               	movlw	1
  1846  04E5                     u545:	
  1847  04E5  1003               	clrc
  1848  04E6  0DF2               	rlf	___wmul@multiplicand,f
  1849  04E7  0DF3               	rlf	___wmul@multiplicand+1,f
  1850  04E8  3EFF               	addlw	-1
  1851  04E9  1D03               	skipz
  1852  04EA  2CE5               	goto	u545
  1853  04EB                     l1203:	
  1854  04EB  3001               	movlw	1
  1855  04EC                     u555:	
  1856  04EC  1003               	clrc
  1857  04ED  0CF1               	rrf	___wmul@multiplier+1,f
  1858  04EE  0CF0               	rrf	___wmul@multiplier,f
  1859  04EF  3EFF               	addlw	-1
  1860  04F0  1D03               	skipz
  1861  04F1  2CEC               	goto	u555
  1862  04F2                     l1205:	
  1863  04F2  0870               	movf	___wmul@multiplier,w
  1864  04F3  0471               	iorwf	___wmul@multiplier+1,w
  1865  04F4  1D03               	btfss	3,2
  1866  04F5  2CF7               	goto	u561
  1867  04F6  2CF8               	goto	u560
  1868  04F7                     u561:	
  1869  04F7  2CDA               	goto	l1199
  1870  04F8                     u560:	
  1871  04F8                     l1207:	
  1872  04F8  0875               	movf	___wmul@product+1,w
  1873  04F9  00F1               	movwf	?___wmul+1
  1874  04FA  0874               	movf	___wmul@product,w
  1875  04FB  00F0               	movwf	?___wmul
  1876  04FC                     l263:	
  1877  04FC  0008               	return
  1878  04FD                     __end_of___wmul:	
  1879                           
  1880                           	psect	text6
  1881  04C0                     __ptext6:	
  1882 ;; *************** function _init_config *****************
  1883 ;; Defined at:
  1884 ;;		line 34 in file "main.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;		None
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;		None
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		wreg, status,2, status,0, pclath, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1898 ;;      Params:         0       0       0       0       0
  1899 ;;      Locals:         0       0       0       0       0
  1900 ;;      Temps:          0       0       0       0       0
  1901 ;;      Totals:         0       0       0       0       0
  1902 ;;Total ram usage:        0 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    3
  1905 ;; This function calls:
  1906 ;;		_init_clcd
  1907 ;;		_init_matrix_keypad
  1908 ;;		_init_timer2
  1909 ;; This function is called by:
  1910 ;;		_main
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           
  1915                           ;psect for function _init_config
  1916  04C0                     _init_config:	
  1917  04C0                     l1217:	
  1918                           ;incstack = 0
  1919                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  1920                           
  1921                           
  1922                           ;main.c: 35:             ledblink(chance);
  1923  04C0  120A  118A  2475  120A  118A  	fcall	_init_clcd
  1924                           
  1925                           ;main.c: 36:         }
  1926  04C5  120A  118A  2480  120A  118A  	fcall	_init_timer2
  1927                           
  1928                           ;main.c: 37: 
  1929  04CA  120A  118A  248D  120A  118A  	fcall	_init_matrix_keypad
  1930  04CF                     l1219:	
  1931                           
  1932                           ;main.c: 38:         key = read_matrix_keypad(1);
  1933  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  1934  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  1935  04D1  1386               	bcf	6,7	;volatile
  1936  04D2                     l1221:	
  1937                           
  1938                           ;main.c: 39: 
  1939  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  1940  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  1941  04D4  1386               	bcf	6,7	;volatile
  1942  04D5                     l1223:	
  1943                           
  1944                           ;main.c: 40:         if(initial)
  1945  04D5  178B               	bsf	11,7	;volatile
  1946  04D6                     l1225:	
  1947                           
  1948                           ;main.c: 41:         {
  1949  04D6  170B               	bsf	11,6	;volatile
  1950  04D7                     l51:	
  1951  04D7  0008               	return
  1952  04D8                     __end_of_init_config:	
  1953                           
  1954                           	psect	text7
  1955  0480                     __ptext7:	
  1956 ;; *************** function _init_timer2 *****************
  1957 ;; Defined at:
  1958 ;;		line 3 in file "Timers.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;		None
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  1    wreg      void 
  1965 ;; Registers used:
  1966 ;;		wreg
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1972 ;;      Params:         0       0       0       0       0
  1973 ;;      Locals:         0       0       0       0       0
  1974 ;;      Temps:          0       0       0       0       0
  1975 ;;      Totals:         0       0       0       0       0
  1976 ;;Total ram usage:        0 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; This function calls:
  1979 ;;		Nothing
  1980 ;; This function is called by:
  1981 ;;		_init_config
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           
  1986                           ;psect for function _init_timer2
  1987  0480                     _init_timer2:	
  1988  0480                     l1115:	
  1989                           ;incstack = 0
  1990                           ; Regs used in _init_timer2: [wreg]
  1991                           
  1992                           
  1993                           ;Timers.c: 7:     T2CKPS0 = 0;
  1994  0480  1283               	bcf	3,5	;RP0=0, select bank0
  1995  0481  1303               	bcf	3,6	;RP1=0, select bank0
  1996  0482  1012               	bcf	18,0	;volatile
  1997                           
  1998                           ;Timers.c: 8:     T2CKPS1 = 0;
  1999  0483  1092               	bcf	18,1	;volatile
  2000                           
  2001                           ;Timers.c: 12:     TMR2IE = 1;
  2002  0484  1683               	bsf	3,5	;RP0=1, select bank1
  2003  0485  1303               	bcf	3,6	;RP1=0, select bank1
  2004  0486  148C               	bsf	12,1	;volatile
  2005  0487                     l1117:	
  2006                           
  2007                           ;Timers.c: 17:     PR2 = 250;
  2008  0487  30FA               	movlw	250
  2009  0488  0092               	movwf	18	;volatile
  2010  0489                     l1119:	
  2011                           
  2012                           ;Timers.c: 19:     TMR2ON = 1;
  2013  0489  1283               	bcf	3,5	;RP0=0, select bank0
  2014  048A  1303               	bcf	3,6	;RP1=0, select bank0
  2015  048B  1512               	bsf	18,2	;volatile
  2016  048C                     l143:	
  2017  048C  0008               	return
  2018  048D                     __end_of_init_timer2:	
  2019                           
  2020                           	psect	text8
  2021  048D                     __ptext8:	
  2022 ;; *************** function _init_matrix_keypad *****************
  2023 ;; Defined at:
  2024 ;;		line 4 in file "matrix_keypad.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;		None
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;		None
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      void 
  2031 ;; Registers used:
  2032 ;;		wreg, status,2
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2038 ;;      Params:         0       0       0       0       0
  2039 ;;      Locals:         0       0       0       0       0
  2040 ;;      Temps:          0       0       0       0       0
  2041 ;;      Totals:         0       0       0       0       0
  2042 ;;Total ram usage:        0 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; This function calls:
  2045 ;;		Nothing
  2046 ;; This function is called by:
  2047 ;;		_init_config
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           
  2052                           ;psect for function _init_matrix_keypad
  2053  048D                     _init_matrix_keypad:	
  2054  048D                     l1121:	
  2055                           ;incstack = 0
  2056                           ; Regs used in _init_matrix_keypad: [wreg+status,2]
  2057                           
  2058                           
  2059                           ;matrix_keypad.c: 7:     TRISB = TRISB | 0x07;
  2060  048D  1683               	bsf	3,5	;RP0=1, select bank1
  2061  048E  1303               	bcf	3,6	;RP1=0, select bank1
  2062  048F  0806               	movf	6,w	;volatile
  2063  0490  3807               	iorlw	7
  2064  0491  0086               	movwf	6	;volatile
  2065                           
  2066                           ;matrix_keypad.c: 9:     TRISD = TRISD & 0xF0;
  2067  0492  0808               	movf	8,w	;volatile
  2068  0493  39F0               	andlw	240
  2069  0494  0088               	movwf	8	;volatile
  2070  0495                     l1123:	
  2071                           
  2072                           ;matrix_keypad.c: 12:     nRBPU = 0;
  2073  0495  1381               	bcf	1,7	;volatile
  2074  0496                     l1125:	
  2075                           
  2076                           ;matrix_keypad.c: 16:     RD2 = 1;
  2077  0496  1283               	bcf	3,5	;RP0=0, select bank0
  2078  0497  1303               	bcf	3,6	;RP1=0, select bank0
  2079  0498  1508               	bsf	8,2	;volatile
  2080  0499                     l1127:	
  2081                           
  2082                           ;matrix_keypad.c: 17:     RD1 = 1;
  2083  0499  1488               	bsf	8,1	;volatile
  2084  049A                     l1129:	
  2085                           
  2086                           ;matrix_keypad.c: 18:     RD3 = 1;
  2087  049A  1588               	bsf	8,3	;volatile
  2088  049B                     l93:	
  2089  049B  0008               	return
  2090  049C                     __end_of_init_matrix_keypad:	
  2091                           
  2092                           	psect	text9
  2093  0475                     __ptext9:	
  2094 ;; *************** function _init_clcd *****************
  2095 ;; Defined at:
  2096 ;;		line 44 in file "clcd.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;		None
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, status,2, status,0, pclath, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2110 ;;      Params:         0       0       0       0       0
  2111 ;;      Locals:         0       0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0
  2113 ;;      Totals:         0       0       0       0       0
  2114 ;;Total ram usage:        0 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    2
  2117 ;; This function calls:
  2118 ;;		_init_display_controller
  2119 ;; This function is called by:
  2120 ;;		_init_config
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           
  2125                           ;psect for function _init_clcd
  2126  0475                     _init_clcd:	
  2127  0475                     l1107:	
  2128                           ;incstack = 0
  2129                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  2130                           
  2131                           
  2132                           ;clcd.c: 47:     TRISD = 0x00;
  2133  0475  1683               	bsf	3,5	;RP0=1, select bank1
  2134  0476  1303               	bcf	3,6	;RP1=0, select bank1
  2135  0477  0188               	clrf	8	;volatile
  2136  0478                     l1109:	
  2137                           
  2138                           ;clcd.c: 50:     TRISE2 = 0;
  2139  0478  1109               	bcf	9,2	;volatile
  2140  0479                     l1111:	
  2141                           
  2142                           ;clcd.c: 51:     TRISE1 = 0;
  2143  0479  1089               	bcf	9,1	;volatile
  2144  047A                     l1113:	
  2145                           
  2146                           ;clcd.c: 53:     init_display_controller();
  2147  047A  120A  118A  25D8  120A  118A  	fcall	_init_display_controller
  2148  047F                     l166:	
  2149  047F  0008               	return
  2150  0480                     __end_of_init_clcd:	
  2151                           
  2152                           	psect	text10
  2153  05D8                     __ptext10:	
  2154 ;; *************** function _init_display_controller *****************
  2155 ;; Defined at:
  2156 ;;		line 21 in file "clcd.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;		None
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;		None
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		wreg, status,2, status,0, pclath, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2170 ;;      Params:         0       0       0       0       0
  2171 ;;      Locals:         0       0       0       0       0
  2172 ;;      Temps:          2       0       0       0       0
  2173 ;;      Totals:         2       0       0       0       0
  2174 ;;Total ram usage:        2 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; Hardware stack levels required when called:    1
  2177 ;; This function calls:
  2178 ;;		_clcd_write
  2179 ;; This function is called by:
  2180 ;;		_init_clcd
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           
  2185                           ;psect for function _init_display_controller
  2186  05D8                     _init_display_controller:	
  2187  05D8                     l1083:	
  2188                           ;incstack = 0
  2189                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  2190                           
  2191                           
  2192                           ;clcd.c: 24:     _delay((unsigned long)((30)*(20000000/4000.0)));
  2193  05D8  30C3               	movlw	195
  2194  05D9  00F5               	movwf	??_init_display_controller+1
  2195  05DA  30CD               	movlw	205
  2196  05DB  00F4               	movwf	??_init_display_controller
  2197  05DC                     u757:	
  2198  05DC  0BF4               	decfsz	??_init_display_controller,f
  2199  05DD  2DDC               	goto	u757
  2200  05DE  0BF5               	decfsz	??_init_display_controller+1,f
  2201  05DF  2DDC               	goto	u757
  2202  05E0                     l1085:	
  2203                           
  2204                           ;clcd.c: 27:     clcd_write(0x33, 0);
  2205  05E0  01F0               	clrf	clcd_write@mode
  2206  05E1  3033               	movlw	51
  2207  05E2  120A  118A  25A2  120A  118A  	fcall	_clcd_write
  2208  05E7                     l1087:	
  2209                           
  2210                           ;clcd.c: 28:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  2211  05E7  301B               	movlw	27
  2212  05E8  00F5               	movwf	??_init_display_controller+1
  2213  05E9  309E               	movlw	158
  2214  05EA  00F4               	movwf	??_init_display_controller
  2215  05EB                     u767:	
  2216  05EB  0BF4               	decfsz	??_init_display_controller,f
  2217  05EC  2DEB               	goto	u767
  2218  05ED  0BF5               	decfsz	??_init_display_controller+1,f
  2219  05EE  2DEB               	goto	u767
  2220  05EF  0000               	nop
  2221                           
  2222                           ;clcd.c: 29:     clcd_write(0x33, 0);
  2223  05F0  01F0               	clrf	clcd_write@mode
  2224  05F1  3033               	movlw	51
  2225  05F2  120A  118A  25A2  120A  118A  	fcall	_clcd_write
  2226  05F7                     l1089:	
  2227                           
  2228                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2229  05F7  30A6               	movlw	166
  2230  05F8  00F4               	movwf	??_init_display_controller
  2231  05F9                     u777:	
  2232  05F9  0BF4               	decfsz	??_init_display_controller,f
  2233  05FA  2DF9               	goto	u777
  2234  05FB  0000               	nop
  2235  05FC                     l1091:	
  2236                           
  2237                           ;clcd.c: 31:     clcd_write(0x33, 0);
  2238  05FC  01F0               	clrf	clcd_write@mode
  2239  05FD  3033               	movlw	51
  2240  05FE  120A  118A  25A2  120A  118A  	fcall	_clcd_write
  2241  0603                     l1093:	
  2242                           
  2243                           ;clcd.c: 32:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  2244  0603  2E04               	nop2	;2 cycle nop
  2245  0604  2E05               	nop2	;2 cycle nop
  2246  0605  0000               	nop
  2247  0606                     l1095:	
  2248                           
  2249                           ;clcd.c: 34:     clcd_write(0x02, 0);
  2250  0606  01F0               	clrf	clcd_write@mode
  2251  0607  3002               	movlw	2
  2252  0608  120A  118A  25A2  120A  118A  	fcall	_clcd_write
  2253  060D                     l1097:	
  2254                           
  2255                           ;clcd.c: 35:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2256  060D  30A6               	movlw	166
  2257  060E  00F4               	movwf	??_init_display_controller
  2258  060F                     u787:	
  2259  060F  0BF4               	decfsz	??_init_display_controller,f
  2260  0610  2E0F               	goto	u787
  2261  0611  0000               	nop
  2262                           
  2263                           ;clcd.c: 36:     clcd_write(0x28, 0);
  2264  0612  01F0               	clrf	clcd_write@mode
  2265  0613  3028               	movlw	40
  2266  0614  120A  118A  25A2  120A  118A  	fcall	_clcd_write
  2267  0619                     l1099:	
  2268                           
  2269                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2270  0619  30A6               	movlw	166
  2271  061A  00F4               	movwf	??_init_display_controller
  2272  061B                     u797:	
  2273  061B  0BF4               	decfsz	??_init_display_controller,f
  2274  061C  2E1B               	goto	u797
  2275  061D  0000               	nop
  2276  061E                     l1101:	
  2277                           
  2278                           ;clcd.c: 38:     clcd_write(0x01, 0);
  2279  061E  01F0               	clrf	clcd_write@mode
  2280  061F  3001               	movlw	1
  2281  0620  120A  118A  25A2  120A  118A  	fcall	_clcd_write
  2282                           
  2283                           ;clcd.c: 39:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  2284  0625  3004               	movlw	4
  2285  0626  00F5               	movwf	??_init_display_controller+1
  2286  0627  303D               	movlw	61
  2287  0628  00F4               	movwf	??_init_display_controller
  2288  0629                     u807:	
  2289  0629  0BF4               	decfsz	??_init_display_controller,f
  2290  062A  2E29               	goto	u807
  2291  062B  0BF5               	decfsz	??_init_display_controller+1,f
  2292  062C  2E29               	goto	u807
  2293  062D  2E2E               	nop2
  2294  062E                     l1103:	
  2295                           
  2296                           ;clcd.c: 40:     clcd_write(0x0C, 0);
  2297  062E  01F0               	clrf	clcd_write@mode
  2298  062F  300C               	movlw	12
  2299  0630  120A  118A  25A2  120A  118A  	fcall	_clcd_write
  2300  0635                     l1105:	
  2301                           
  2302                           ;clcd.c: 41:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2303  0635  30A6               	movlw	166
  2304  0636  00F4               	movwf	??_init_display_controller
  2305  0637                     u817:	
  2306  0637  0BF4               	decfsz	??_init_display_controller,f
  2307  0638  2E37               	goto	u817
  2308  0639  0000               	nop
  2309  063A                     l163:	
  2310  063A  0008               	return
  2311  063B                     __end_of_init_display_controller:	
  2312                           
  2313                           	psect	text11
  2314  049C                     __ptext11:	
  2315 ;; *************** function _clcd_putch *****************
  2316 ;; Defined at:
  2317 ;;		line 56 in file "clcd.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  data            1    wreg     const unsigned char 
  2320 ;;  addr            1    4[COMMON] unsigned char 
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;  data            1    5[COMMON] const unsigned char 
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  1    wreg      void 
  2325 ;; Registers used:
  2326 ;;		wreg, status,2, status,0, pclath, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2332 ;;      Params:         1       0       0       0       0
  2333 ;;      Locals:         1       0       0       0       0
  2334 ;;      Temps:          0       0       0       0       0
  2335 ;;      Totals:         2       0       0       0       0
  2336 ;;Total ram usage:        2 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; Hardware stack levels required when called:    1
  2339 ;; This function calls:
  2340 ;;		_clcd_write
  2341 ;; This function is called by:
  2342 ;;		_main
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           
  2347                           ;psect for function _clcd_putch
  2348  049C                     _clcd_putch:	
  2349                           
  2350                           ;incstack = 0
  2351                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  2352                           ;clcd_putch@data stored from wreg
  2353  049C  00F5               	movwf	clcd_putch@data
  2354  049D                     l1265:	
  2355                           
  2356                           ;clcd.c: 56: void clcd_putch(const char data, unsigned char addr);clcd.c: 57: {;clcd.c: 
      +                          58:     clcd_write(addr, 0);
  2357  049D  01F0               	clrf	clcd_write@mode
  2358  049E  0874               	movf	clcd_putch@addr,w
  2359  049F  120A  118A  25A2  120A  118A  	fcall	_clcd_write
  2360                           
  2361                           ;clcd.c: 59:     clcd_write(data, 1);
  2362  04A4  01F0               	clrf	clcd_write@mode
  2363  04A5  0AF0               	incf	clcd_write@mode,f
  2364  04A6  0875               	movf	clcd_putch@data,w
  2365  04A7  120A  118A  25A2  120A  118A  	fcall	_clcd_write
  2366  04AC                     l169:	
  2367  04AC  0008               	return
  2368  04AD                     __end_of_clcd_putch:	
  2369                           
  2370                           	psect	text12
  2371  0523                     __ptext12:	
  2372 ;; *************** function _clcd_print *****************
  2373 ;; Defined at:
  2374 ;;		line 62 in file "clcd.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  str             1    wreg     PTR const unsigned char 
  2377 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  2378 ;;		 -> STR_3(17), STR_2(17), 
  2379 ;;  addr            1    4[COMMON] unsigned char 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  str             1    6[COMMON] PTR const unsigned char 
  2382 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  2383 ;;		 -> STR_3(17), STR_2(17), 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      void 
  2386 ;; Registers used:
  2387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2393 ;;      Params:         1       0       0       0       0
  2394 ;;      Locals:         1       0       0       0       0
  2395 ;;      Temps:          1       0       0       0       0
  2396 ;;      Totals:         3       0       0       0       0
  2397 ;;Total ram usage:        3 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:    1
  2400 ;; This function calls:
  2401 ;;		_clcd_write
  2402 ;; This function is called by:
  2403 ;;		_main
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407                           
  2408                           ;psect for function _clcd_print
  2409  0523                     _clcd_print:	
  2410                           
  2411                           ;incstack = 0
  2412                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2413                           ;clcd_print@str stored from wreg
  2414  0523  00F6               	movwf	clcd_print@str
  2415  0524                     l1257:	
  2416                           
  2417                           ;clcd.c: 62: void clcd_print(const char *str, unsigned char addr);clcd.c: 63: {;clcd.c: 
      +                          64:     clcd_write(addr, 0);
  2418  0524  01F0               	clrf	clcd_write@mode
  2419  0525  0874               	movf	clcd_print@addr,w
  2420  0526  120A  118A  25A2  120A  118A  	fcall	_clcd_write
  2421                           
  2422                           ;clcd.c: 66:     while (*str != '\0')
  2423  052B  2D3E               	goto	l1263
  2424  052C                     l1259:	
  2425                           
  2426                           ;clcd.c: 67:     {;clcd.c: 68:         clcd_write(*str, 1);
  2427  052C  01F0               	clrf	clcd_write@mode
  2428  052D  0AF0               	incf	clcd_write@mode,f
  2429  052E  0876               	movf	clcd_print@str,w
  2430  052F  0084               	movwf	4
  2431  0530  120A  118A  2003  120A  118A  	fcall	stringdir
  2432  0535  120A  118A  25A2  120A  118A  	fcall	_clcd_write
  2433  053A                     l1261:	
  2434                           
  2435                           ;clcd.c: 69:         str++;
  2436  053A  3001               	movlw	1
  2437  053B  00F5               	movwf	??_clcd_print
  2438  053C  0875               	movf	??_clcd_print,w
  2439  053D  07F6               	addwf	clcd_print@str,f
  2440  053E                     l1263:	
  2441                           
  2442                           ;clcd.c: 66:     while (*str != '\0')
  2443  053E  0876               	movf	clcd_print@str,w
  2444  053F  0084               	movwf	4
  2445  0540  120A  118A  2003  120A  118A  	fcall	stringdir
  2446  0545  3A00               	xorlw	0
  2447  0546  1D03               	skipz
  2448  0547  2D49               	goto	u621
  2449  0548  2D4A               	goto	u620
  2450  0549                     u621:	
  2451  0549  2D2C               	goto	l1259
  2452  054A                     u620:	
  2453  054A                     l175:	
  2454  054A  0008               	return
  2455  054B                     __end_of_clcd_print:	
  2456                           
  2457                           	psect	text13
  2458  05A2                     __ptext13:	
  2459 ;; *************** function _clcd_write *****************
  2460 ;; Defined at:
  2461 ;;		line 4 in file "clcd.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;  byte            1    wreg     unsigned char 
  2464 ;;  mode            1    0[COMMON] unsigned char 
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;  byte            1    3[COMMON] unsigned char 
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      void 
  2469 ;; Registers used:
  2470 ;;		wreg, status,2, status,0
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2476 ;;      Params:         1       0       0       0       0
  2477 ;;      Locals:         1       0       0       0       0
  2478 ;;      Temps:          2       0       0       0       0
  2479 ;;      Totals:         4       0       0       0       0
  2480 ;;Total ram usage:        4 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		_init_display_controller
  2486 ;;		_clcd_putch
  2487 ;;		_clcd_print
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           
  2492                           ;psect for function _clcd_write
  2493  05A2                     _clcd_write:	
  2494                           
  2495                           ;incstack = 0
  2496                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  2497                           ;clcd_write@byte stored from wreg
  2498  05A2  00F3               	movwf	clcd_write@byte
  2499  05A3                     l1063:	
  2500                           
  2501                           ;clcd.c: 4: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;
      +                          clcd.c: 6:     RE2 = mode;
  2502  05A3  1870               	btfsc	clcd_write@mode,0
  2503  05A4  2DA6               	goto	u381
  2504  05A5  2DAA               	goto	u380
  2505  05A6                     u381:	
  2506  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  2507  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  2508  05A8  1509               	bsf	9,2	;volatile
  2509  05A9  2DAD               	goto	u394
  2510  05AA                     u380:	
  2511  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  2512  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  2513  05AC  1109               	bcf	9,2	;volatile
  2514  05AD                     u394:	
  2515  05AD                     l1065:	
  2516                           
  2517                           ;clcd.c: 8:     PORTD = byte & 0xF0;
  2518  05AD  0873               	movf	clcd_write@byte,w
  2519  05AE  39F0               	andlw	240
  2520  05AF  0088               	movwf	8	;volatile
  2521  05B0                     l1067:	
  2522                           
  2523                           ;clcd.c: 9:     RE1 = 1;
  2524  05B0  1489               	bsf	9,1	;volatile
  2525  05B1                     l1069:	
  2526                           
  2527                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2528  05B1  30A6               	movlw	166
  2529  05B2  00F1               	movwf	??_clcd_write
  2530  05B3                     u827:	
  2531  05B3  0BF1               	decfsz	??_clcd_write,f
  2532  05B4  2DB3               	goto	u827
  2533  05B5  0000               	nop
  2534  05B6                     l1071:	
  2535                           
  2536                           ;clcd.c: 11:     RE1 = 0;
  2537  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  2538  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  2539  05B8  1089               	bcf	9,1	;volatile
  2540  05B9                     l1073:	
  2541                           
  2542                           ;clcd.c: 13:     PORTD = (byte & 0x0F) << 4;
  2543  05B9  0873               	movf	clcd_write@byte,w
  2544  05BA  390F               	andlw	15
  2545  05BB  00F1               	movwf	??_clcd_write
  2546  05BC  3003               	movlw	3
  2547  05BD                     u405:	
  2548  05BD  1003               	clrc
  2549  05BE  0DF1               	rlf	??_clcd_write,f
  2550  05BF  3EFF               	addlw	-1
  2551  05C0  1D03               	skipz
  2552  05C1  2DBD               	goto	u405
  2553  05C2  1003               	clrc
  2554  05C3  0D71               	rlf	??_clcd_write,w
  2555  05C4  0088               	movwf	8	;volatile
  2556  05C5                     l1075:	
  2557                           
  2558                           ;clcd.c: 14:     RE1 = 1;
  2559  05C5  1489               	bsf	9,1	;volatile
  2560  05C6                     l1077:	
  2561                           
  2562                           ;clcd.c: 15:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2563  05C6  30A6               	movlw	166
  2564  05C7  00F1               	movwf	??_clcd_write
  2565  05C8                     u837:	
  2566  05C8  0BF1               	decfsz	??_clcd_write,f
  2567  05C9  2DC8               	goto	u837
  2568  05CA  0000               	nop
  2569  05CB                     l1079:	
  2570                           
  2571                           ;clcd.c: 16:     RE1 = 0;
  2572  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  2573  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  2574  05CD  1089               	bcf	9,1	;volatile
  2575  05CE                     l1081:	
  2576                           
  2577                           ;clcd.c: 18:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  2578  05CE  301B               	movlw	27
  2579  05CF  00F2               	movwf	??_clcd_write+1
  2580  05D0  309E               	movlw	158
  2581  05D1  00F1               	movwf	??_clcd_write
  2582  05D2                     u847:	
  2583  05D2  0BF1               	decfsz	??_clcd_write,f
  2584  05D3  2DD2               	goto	u847
  2585  05D4  0BF2               	decfsz	??_clcd_write+1,f
  2586  05D5  2DD2               	goto	u847
  2587  05D6  0000               	nop
  2588  05D7                     l160:	
  2589  05D7  0008               	return
  2590  05D8                     __end_of_clcd_write:	
  2591  007E                     btemp	set	126	;btemp
  2592  007E                     wtemp0	set	126


Data Sizes:
    Strings     111
    Constant    0
    Data        7
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> user(BANK0[10]), 

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[17]), 

    password	PTR unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_ledblink
    _read_matrix_keypad->_scan_keypad
    _ledblink->___wmul
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_putch->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    4561
                                              8 COMMON     6     6      0
                         _clcd_print
                         _clcd_putch
                        _init_config
                           _ledblink
                 _read_matrix_keypad
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               7     5      2     200
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) _read_matrix_keypad                                   3     3      0     180
                                              2 COMMON     3     3      0
                        _scan_keypad
 ---------------------------------------------------------------------------------
 (2) _scan_keypad                                          2     2      0      69
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ledblink                                             2     0      2     342
                                              6 COMMON     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     902
                          _init_clcd
                 _init_matrix_keypad
                        _init_timer2
 ---------------------------------------------------------------------------------
 (2) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     902
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     902
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_putch                                           2     1      1    1174
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           3     2      1    1623
                                              4 COMMON     3     2      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     902
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _clcd_putch
     _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_matrix_keypad
     _init_timer2
   _ledblink
     ___wmul
   _read_matrix_keypad
     _scan_keypad
   _strcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      1A       5       32.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      28      12        0.0%
ABS                  0      0      28       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jun 23 02:03:15 2020

                               _i 0035                                 pc 0002                    clcd_print@addr 0074  
__size_of_init_display_controller 0063                                l51 04D7                                l48 0522  
                              l57 06E1                                l93 049B                                l98 0652  
                              l99 065A                                fsr 0004               ___wmul@multiplicand 0072  
              _init_matrix_keypad 048D                               l100 06B9                               l101 0666  
                             l110 0689                               l102 0660                               l115 06A4  
                             l107 067B                               l116 06AC                               l108 0683  
                             l109 068F                               l118 06B2                               l126 0573  
                             l143 048C                               l160 05D7                               l163 063A  
                             l261 04E4                               l166 047F                               l175 054A  
                             l263 04FC                               l169 04AC                               l711 05A1  
                             _GIE 005F                               _RB0 0030                               _RB1 0031  
                             _RB2 0032                               _RD1 0041                               _RD2 0042  
                             _RB7 0037                               _RD3 0043                               _RE1 0049  
                             _RE2 004A                               u410 0652                               u411 0651  
                             u500 06AA                               u420 0658                               u405 05BD  
                             u501 06A9                               u421 0657                               u510 06B0  
                             u430 065E                               _PR2 0092                               u511 06AF  
                             u431 065D                               u520 06B6                               u440 0664  
                             u600 0567                               u521 06B5                               u441 0663  
                             u601 0566                               u530 04DE                               u450 067B  
                             u610 056E                               u531 04DD                               u451 067A  
                             u611 056D                               u380 05AA                               u620 054A  
                             u460 0681                               u700 0745                               u381 05A6  
                             u621 0549                               u461 0680                               u701 0744  
                             u470 0687                               u630 0595                               u710 0771  
                             u471 0686                               u631 0594                               u711 0770  
                             u560 04F8                               u480 068D                               u640 059C  
                             u720 0786                               u561 04F7                               u545 04E5  
                             u481 068C                               u641 059B                               u721 0785  
                             u705 0741                               u394 05AD                               u570 050D  
                             u490 06A4                               u730 07AD                               u650 06D2  
                             u555 04EC                               u571 050C                               u491 06A3  
                             u731 07AC                               u651 06D1                               u580 0559  
                             u740 07C3                               u660 06D8                               u581 0558  
                             u741 07C2                               u661 06D7                               u590 0560  
                             u670 06F1                               u807 0629                               u591 055F  
                             u671 06F0                               u655 06CE                               u680 06F7  
                             u817 0637                               u681 06F6                               u690 0738  
                             u827 05B3                               u691 0737                               u837 05C8  
                             u757 05DC                               u847 05D2                               u767 05EB  
                             u777 05F9                               u787 060F                               u797 061B  
                  clcd_putch@addr 0074                               fsr0 0004                    clcd_putch@data 0075  
                             indf 0000               ?_init_matrix_keypad 0070                              l1101 061E  
                            l1103 062E                              l1111 0479                              l1105 0635  
                            l1113 047A                              l1121 048D                              l1201 04DE  
                            l1107 0475                              l1123 0495                              l1115 0480  
                            l1203 04EB                              l1211 04FD                              l1131 063B  
                            l1109 0478                              l1125 0496                              l1117 0487  
                            l1221 04D2                              l1205 04F2                              l1213 050D  
                            l1133 0640                              l1301 0713                              l1071 05B6  
                            l1063 05A3                              l1127 0499                              l1119 0489  
                            l1223 04D5                              l1207 04F8                              l1215 0520  
                            l1143 065E                              l1135 0644                              l1231 0559  
                            l1311 0731                              l1303 0727                              l1081 05CE  
                            l1073 05B9                              l1065 05AD                              l1129 049A  
                            l1225 04D6                              l1217 04C0                              l1153 0669  
                            l1137 0658                              l1241 0567                              l1321 075B  
                            l1305 072A                              l1313 0733                              l1075 05C5  
                            l1067 05B0                              l1091 05FC                              l1083 05D8  
                            l1219 04CF                              l1163 0687                              l1155 066D  
                            l1251 056E                              l1227 054C                              l1331 0786  
                            l1323 0761                              l1315 0738                              l1307 072B  
                            l1077 05C6                              l1069 05B1                              l1261 053A  
                            l1093 0603                              l1085 05E0                              l1173 0692  
                            l1157 0681                              l1149 0664                              l1253 0572  
                            l1237 055B                              l1229 0554                              l1341 07AF  
                            l1333 079A                              l1317 0745                              l1325 076A  
                            l1309 072D                              l1079 05CB                              l1263 053E  
                            l1095 0606                              l1087 05E7                              l1183 06B0  
                            l1175 0696                              l1239 0560                              l1271 057A  
                            l1335 079E                              l1327 0771                              l1319 074E  
                            l1343 07B5                              l1257 0524                              l1265 049D  
                            l1097 060D                              l1089 05F7                              l1193 06B8  
                            l1177 06AA                              l1169 068D                              l1249 0569  
                            l1273 057E                              l1345 07C3                              l1337 07A5  
                            l1329 0776                              l1281 06BA                              l1259 052C  
                            l1099 0619                              l1275 0595                              l1267 0575  
                            l1347 07C7                              l1339 07AD                              l1291 06EA  
                            l1283 06BE                              l1197 04D8                              l1189 06B6  
                            l1277 059C                              l1269 0576                              l1349 07D5  
                            l1293 06F1                              l1285 06C3                              l1199 04DA  
                            l1295 06F7                              l1287 06D2                              l1297 070B  
                            l1289 06D8                              l1299 0711                              STR_1 006F  
                            STR_2 004D                              STR_3 001A                              STR_4 002B  
                            STR_5 0009                              STR_6 003C                              STR_7 005E  
                            _PEIE 005E                              _main 06BA                              btemp 007E  
                            _user 0029                              start 0000              ??_init_matrix_keypad 0070  
                  clcd_write@byte 0073                    clcd_write@mode 0070                             ?_main 0070  
                   __CFG_WDTE$OFF 0000                      ?_init_config 0070                             _PORTD 0008  
                           _TRISB 0086                             _TRISD 0088                      ?_init_timer2 0070  
                           _nRBPU 040F                _read_matrix_keypad 054B                             _blink 0022  
                           _count 0026                             main@j 007C                             pclath 000A  
             ?_read_matrix_keypad 0070                             status 0003                             wtemp0 007E  
                    ?_scan_keypad 0070                   __initialization 07E6                      __end_of_main 07E6  
            ??_read_matrix_keypad 0072                      ledblink@wait 0020                            ??_main 0078  
                          _TMR2IE 0461                            _TMR2ON 0092                            _TRISB7 0437  
                          _TRISE1 0449                            _TRISE2 044A           _init_display_controller 05D8  
                __end_of_ledblink 0523                            ___wmul 04D8                            _chance 0033  
                          _cursor 0024                            _strcmp 0574           __end_of__initialization 07FC  
                  __pcstackCOMMON 0070                      __pidataBANK0 0466              __size_of_init_config 0018  
            __size_of_init_timer2 000D                        __pbssBANK0 0020                __size_of_init_clcd 000B  
       ??_init_display_controller 0074                        _clcd_print 0523                        _clcd_putch 049C  
                      _clcd_write 05A2              __size_of_scan_keypad 007F                        __pmaintext 06BA  
                         ?___wmul 0070                           ?_strcmp 0070                           _T2CKPS0 0090  
                         _T2CKPS1 0091                        __stringtab 0003                         ?_ledblink 0076  
     __size_of_init_matrix_keypad 000F                   __size_of___wmul 0025                           __ptext1 0574  
                         __ptext2 054B                           __ptext3 063B                           __ptext4 04FD  
                         __ptext5 04D8                           __ptext6 04C0                           __ptext7 0480  
                         __ptext8 048D                           __ptext9 0475                   __size_of_strcmp 002E  
 __end_of_init_display_controller 063B                 __end_of_init_clcd 0480                           _initial 0038  
                      _duty_cycle 0027                           main@key 007B                           clrloop0 046E  
            end_of_initialization 07FC                        ??_ledblink 0078                        _loop_count 0028  
                     ?_clcd_print 0074                       ?_clcd_putch 0074                       ?_clcd_write 0070  
                         strcmp@r 0075       __size_of_read_matrix_keypad 0029                     clcd_print@str 0076  
                  __end_of___wmul 04FD                    __end_of_strcmp 05A2               start_initialization 07E6  
             __size_of_clcd_print 0028                      scan_keypad@i 0070               __size_of_clcd_putch 0011  
             __size_of_clcd_write 0036            read_matrix_keypad@mode 0073            read_matrix_keypad@once 0037  
                  ledblink@chance 0076                          ??___wmul 0074                        init_fetch0 04AD  
                     __pdataBANK0 0033                          ??_strcmp 0072                     ??_init_config 0076  
                   ??_init_timer2 0070                         ___latbits 0002                 __size_of_ledblink 0026  
                   ??_scan_keypad 0070                         __pstrings 0003                         _init_clcd 0475  
             __end_of_init_config 04D8               __end_of_init_timer2 048D          ?_init_display_controller 0070  
                  ___wmul@product 0074                         clear_ram0 046D                      ??_clcd_print 0075  
                    ??_clcd_putch 0075        __end_of_init_matrix_keypad 049C                      ??_clcd_write 0071  
             __end_of_scan_keypad 06BA                       __stringbase 0008                 ___wmul@multiplier 0070  
              __end_of_clcd_print 054B                __end_of_clcd_putch 04AD                __end_of_clcd_write 05D8  
                      ?_init_clcd 0070             read_matrix_keypad@key 0074        __end_of_read_matrix_keypad 0574  
              __end_of__stringtab 0009                       _init_config 04C0                       _init_timer2 0480  
                        __ptext10 05D8                          __ptext11 049C                          __ptext12 0523  
                        __ptext13 05A2                          _ledblink 04FD                     __size_of_main 012C  
                     _scan_keypad 063B                          _password 0039                          main@wait 0079  
                        init_ram0 04B1                       ??_init_clcd 0076                         stringcode 0003  
                        strcmp@s1 0076                          strcmp@s2 0070                          stringdir 0003  
                        stringtab 0003  
