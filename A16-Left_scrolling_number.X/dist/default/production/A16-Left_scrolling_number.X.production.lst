

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jun  6 08:12:45 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0011                     	;# 
   131  0012                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001B                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  0086                     	;# 
   150  0087                     	;# 
   151  0088                     	;# 
   152  0089                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  0091                     	;# 
   157  0092                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  009F                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  0000                     	;# 
   173  0001                     	;# 
   174  0002                     	;# 
   175  0003                     	;# 
   176  0004                     	;# 
   177  0005                     	;# 
   178  0006                     	;# 
   179  0007                     	;# 
   180  0008                     	;# 
   181  0009                     	;# 
   182  000A                     	;# 
   183  000B                     	;# 
   184  000C                     	;# 
   185  000D                     	;# 
   186  000E                     	;# 
   187  000E                     	;# 
   188  000F                     	;# 
   189  0010                     	;# 
   190  0011                     	;# 
   191  0012                     	;# 
   192  0013                     	;# 
   193  0014                     	;# 
   194  0015                     	;# 
   195  0015                     	;# 
   196  0016                     	;# 
   197  0017                     	;# 
   198  0018                     	;# 
   199  0019                     	;# 
   200  001A                     	;# 
   201  001B                     	;# 
   202  001B                     	;# 
   203  001C                     	;# 
   204  001D                     	;# 
   205  001E                     	;# 
   206  001F                     	;# 
   207  0081                     	;# 
   208  0085                     	;# 
   209  0086                     	;# 
   210  0087                     	;# 
   211  0088                     	;# 
   212  0089                     	;# 
   213  008C                     	;# 
   214  008D                     	;# 
   215  008E                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0094                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  009F                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  018C                     	;# 
   231  018D                     	;# 
   232                           
   233                           	psect	idataBANK0
   234  06D1                     __pidataBANK0:	
   235                           
   236                           ;initializer for main@F861
   237  06D1  343F               	retlw	63
   238  06D2  3406               	retlw	6
   239  06D3  345B               	retlw	91
   240  06D4  344F               	retlw	79
   241  06D5  3466               	retlw	102
   242  06D6  346D               	retlw	109
   243  06D7  347D               	retlw	125
   244  06D8  3407               	retlw	7
   245  06D9  347F               	retlw	127
   246  06DA  346F               	retlw	111
   247  06DB  3400               	retlw	0
   248  06DC  3400               	retlw	0
   249                           
   250                           ;initializer for _l
   251  06DD  3403               	retlw	3
   252  06DE  3400               	retlw	0
   253                           
   254                           ;initializer for _k
   255  06DF  3402               	retlw	2
   256  06E0  3400               	retlw	0
   257                           
   258                           ;initializer for _j
   259  06E1  3401               	retlw	1
   260  06E2  3400               	retlw	0
   261  0008                     _PORTD	set	8
   262  0005                     _PORTA	set	5
   263  0085                     _TRISA	set	133
   264  0088                     _TRISD	set	136
   265                           
   266                           ; #config settings
   267  0000                     
   268                           	psect	cinit
   269  07E8                     start_initialization:	
   270  07E8                     __initialization:	
   271                           
   272                           ; Initialize objects allocated to BANK0
   273  07E8  1383               	bcf	3,7	;select IRP bank0
   274  07E9  3046               	movlw	low (__pdataBANK0+18)
   275  07EA  00FD               	movwf	btemp+-1
   276  07EB  3006               	movlw	high __pidataBANK0
   277  07EC  00FE               	movwf	btemp
   278  07ED  30D1               	movlw	low __pidataBANK0
   279  07EE  00FF               	movwf	btemp+1
   280  07EF  3034               	movlw	low __pdataBANK0
   281  07F0  0084               	movwf	4
   282  07F1  120A  118A  26E7  120A  118A  	fcall	init_ram0
   283                           
   284                           ; Clear objects allocated to BANK0
   285  07F6  01C6               	clrf	__pbssBANK0& (0+127)
   286  07F7  01C7               	clrf	(__pbssBANK0+1)& (0+127)
   287  07F8  01C8               	clrf	(__pbssBANK0+2)& (0+127)
   288  07F9  01C9               	clrf	(__pbssBANK0+3)& (0+127)
   289                           
   290                           ; Clear objects allocated to COMMON
   291  07FA  01FB               	clrf	__pbssCOMMON& (0+127)
   292  07FB  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   293  07FC                     end_of_initialization:	
   294                           ;End of C runtime variable initialization code
   295                           
   296  07FC                     __end_of__initialization:	
   297  07FC  0183               	clrf	3
   298  07FD  120A  118A  2EF6   	ljmp	_main	;jump to C main() function
   299                           
   300                           	psect	bssCOMMON
   301  007B                     __pbssCOMMON:	
   302  007B                     _i:	
   303  007B                     	ds	2
   304                           
   305                           	psect	bssBANK0
   306  0046                     __pbssBANK0:	
   307  0046                     display@wait:	
   308  0046                     	ds	2
   309  0048                     _count:	
   310  0048                     	ds	2
   311                           
   312                           	psect	dataBANK0
   313  0034                     __pdataBANK0:	
   314  0034                     main@F861:	
   315  0034                     	ds	12
   316  0040                     _l:	
   317  0040                     	ds	2
   318  0042                     _k:	
   319  0042                     	ds	2
   320  0044                     _j:	
   321  0044                     	ds	2
   322                           
   323                           	psect	inittext
   324  06E3                     init_fetch0:	
   325                           ;	Called with low address in FSR and high address in W
   326                           
   327  06E3  087E               	movf	btemp,w
   328  06E4  008A               	movwf	10
   329  06E5  087F               	movf	btemp+1,w
   330  06E6  0082               	movwf	2
   331  06E7                     init_ram0:	
   332                           ;Called with:
   333                           ;	high address of idata address in btemp 
   334                           ;	low address of idata address in btemp+1 
   335                           ;	low address of data in FSR
   336                           ;	high address + 1 of data in btemp-1
   337                           
   338  06E7  120A  118A  26E3  120A  118A  	fcall	init_fetch0
   339  06EC  0080               	movwf	0
   340  06ED  0A84               	incf	4,f
   341  06EE  0804               	movf	4,w
   342  06EF  067D               	xorwf	btemp+-1,w
   343  06F0  1903               	btfsc	3,2
   344  06F1  3400               	retlw	0
   345  06F2  0AFF               	incf	btemp+1,f
   346  06F3  1903               	btfsc	3,2
   347  06F4  0AFE               	incf	btemp,f
   348  06F5  2EE7               	goto	init_ram0
   349                           
   350                           	psect	cstackCOMMON
   351  0070                     __pcstackCOMMON:	
   352  0070                     ?_init_ssd:	
   353  0070                     ??_init_ssd:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_display:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ??_display:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_init_config:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ??_init_config:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_main:	
   369                           ; 1 bytes @ 0x0
   370                           
   371                           
   372                           ; 1 bytes @ 0x0
   373  0070                     	ds	3
   374  0073                     display@i:	
   375                           
   376                           ; 2 bytes @ 0x3
   377  0073                     	ds	2
   378  0075                     display@data:	
   379                           
   380                           ; 1 bytes @ 0x5
   381  0075                     	ds	1
   382  0076                     display@digit:	
   383                           
   384                           ; 1 bytes @ 0x6
   385  0076                     	ds	1
   386  0077                     ??_main:	
   387                           
   388                           ; 1 bytes @ 0x7
   389  0077                     	ds	4
   390                           
   391                           	psect	cstackBANK0
   392  0020                     __pcstackBANK0:	
   393  0020                     main@digit:	
   394                           
   395                           ; 12 bytes @ 0x0
   396  0020                     	ds	14
   397  002E                     main@ssd:	
   398                           
   399                           ; 4 bytes @ 0xE
   400  002E                     	ds	4
   401  0032                     main@prev_count:	
   402                           
   403                           ; 2 bytes @ 0x12
   404  0032                     	ds	2
   405                           
   406                           	psect	maintext
   407  06F6                     __pmaintext:	
   408 ;;
   409 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   410 ;;
   411 ;; *************** function _main *****************
   412 ;; Defined at:
   413 ;;		line 20 in file "main.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;  digit          12    0[BANK0 ] unsigned char [12]
   418 ;;  ssd             4   14[BANK0 ] unsigned char [4]
   419 ;;  prev_count      2   18[BANK0 ] unsigned int 
   420 ;;  wait            2    0        unsigned int 
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   425 ;; Tracked objects:
   426 ;;		On entry : B00/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   430 ;;      Params:         0       0       0       0       0
   431 ;;      Locals:         0      20       0       0       0
   432 ;;      Temps:          4       0       0       0       0
   433 ;;      Totals:         4      20       0       0       0
   434 ;;Total ram usage:       24 bytes
   435 ;; Hardware stack levels required when called:    2
   436 ;; This function calls:
   437 ;;		_display
   438 ;;		_init_config
   439 ;; This function is called by:
   440 ;;		Startup code after reset
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           
   445                           ;psect for function _main
   446  06F6                     _main:	
   447  06F6                     l781:	
   448                           ;incstack = 0
   449                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   450                           
   451                           
   452                           ;main.c: 21:         ssd[1] = digit[j];;main.c: 22:         ssd[2] = digit[k];
   453  06F6  3020               	movlw	main@digit& (0+255)
   454  06F7  0084               	movwf	4
   455  06F8  3034               	movlw	low main@F861
   456  06F9  00F7               	movwf	??_main
   457  06FA  0804               	movf	4,w
   458  06FB  00F8               	movwf	??_main+1
   459  06FC  300C               	movlw	12
   460  06FD  00F9               	movwf	??_main+2
   461  06FE                     u140:	
   462  06FE  0877               	movf	??_main,w
   463  06FF  0084               	movwf	4
   464  0700  1383               	bcf	3,7	;select IRP bank0
   465  0701  0800               	movf	0,w
   466  0702  00FA               	movwf	??_main+3
   467  0703  0AF7               	incf	??_main,f
   468  0704  0878               	movf	??_main+1,w
   469  0705  0084               	movwf	4
   470  0706  087A               	movf	??_main+3,w
   471  0707  0080               	movwf	0
   472  0708  0AF8               	incf	??_main+1,f
   473  0709  0BF9               	decfsz	??_main+2,f
   474  070A  2EFE               	goto	u140
   475  070B                     l783:	
   476                           
   477                           ;main.c: 23:         ssd[3] = digit[l];
   478  070B  3001               	movlw	1
   479  070C  1283               	bcf	3,5	;RP0=0, select bank0
   480  070D  1303               	bcf	3,6	;RP1=0, select bank0
   481  070E  00B2               	movwf	main@prev_count
   482  070F  3000               	movlw	0
   483  0710  00B3               	movwf	main@prev_count+1
   484  0711                     l785:	
   485  0711                     l787:	
   486                           
   487                           ;main.c: 25:         }
   488  0711  120A  118A  26BF  120A  118A  	fcall	_init_config
   489  0716                     l789:	
   490                           
   491                           ;main.c: 29:         {
   492  0716  1283               	bcf	3,5	;RP0=0, select bank0
   493  0717  1303               	bcf	3,6	;RP1=0, select bank0
   494  0718  0849               	movf	_count+1,w
   495  0719  0633               	xorwf	main@prev_count+1,w
   496  071A  1D03               	skipz
   497  071B  2F1E               	goto	u155
   498  071C  0848               	movf	_count,w
   499  071D  0632               	xorwf	main@prev_count,w
   500  071E                     u155:	
   501  071E  1903               	skipnz
   502  071F  2F21               	goto	u151
   503  0720  2F22               	goto	u150
   504  0721                     u151:	
   505  0721  2F43               	goto	l795
   506  0722                     u150:	
   507  0722                     l791:	
   508                           
   509                           ;main.c: 30:             count = 0;;main.c: 31:         }
   510  0722  087B               	movf	_i,w
   511  0723  3E20               	addlw	(low (main@digit| 0))& (0+255)
   512  0724  0084               	movwf	4
   513  0725  1383               	bcf	3,7	;select IRP bank0
   514  0726  0800               	movf	0,w
   515  0727  00F7               	movwf	??_main
   516  0728  0877               	movf	??_main,w
   517  0729  00AE               	movwf	main@ssd
   518                           
   519                           ;main.c: 32: 
   520  072A  0844               	movf	_j,w
   521  072B  3E20               	addlw	(low (main@digit| 0))& (0+255)
   522  072C  0084               	movwf	4
   523  072D  0800               	movf	0,w
   524  072E  00F7               	movwf	??_main
   525  072F  0877               	movf	??_main,w
   526  0730  00AF               	movwf	main@ssd+1
   527                           
   528                           ;main.c: 33:     }
   529  0731  0842               	movf	_k,w
   530  0732  3E20               	addlw	(low (main@digit| 0))& (0+255)
   531  0733  0084               	movwf	4
   532  0734  0800               	movf	0,w
   533  0735  00F7               	movwf	??_main
   534  0736  0877               	movf	??_main,w
   535  0737  00B0               	movwf	main@ssd+2
   536                           
   537                           ;main.c: 34:     return;
   538  0738  0840               	movf	_l,w
   539  0739  3E20               	addlw	(low (main@digit| 0))& (0+255)
   540  073A  0084               	movwf	4
   541  073B  0800               	movf	0,w
   542  073C  00F7               	movwf	??_main
   543  073D  0877               	movf	??_main,w
   544  073E  00B1               	movwf	main@ssd+3
   545  073F                     l793:	
   546                           
   547                           ;main.c: 35: }
   548  073F  0849               	movf	_count+1,w
   549  0740  00B3               	movwf	main@prev_count+1
   550  0741  0848               	movf	_count,w
   551  0742  00B2               	movwf	main@prev_count
   552  0743                     l795:	
   553  0743  302E               	movlw	(low (main@ssd| 0))& (0+255)
   554  0744  120A  118A  2758  120A  118A  	fcall	_display
   555  0749                     l797:	
   556  0749  300A               	movlw	10
   557  074A  1283               	bcf	3,5	;RP0=0, select bank0
   558  074B  1303               	bcf	3,6	;RP1=0, select bank0
   559  074C  0648               	xorwf	_count,w
   560  074D  0449               	iorwf	_count+1,w
   561  074E  1D03               	btfss	3,2
   562  074F  2F51               	goto	u161
   563  0750  2F52               	goto	u160
   564  0751                     u161:	
   565  0751  2F16               	goto	l789
   566  0752                     u160:	
   567  0752                     l799:	
   568  0752  01C8               	clrf	_count
   569  0753  01C9               	clrf	_count+1
   570  0754  2F16               	goto	l789
   571  0755  120A  118A  2800   	ljmp	start
   572  0758                     __end_of_main:	
   573                           
   574                           	psect	text1
   575  06BF                     __ptext1:	
   576 ;; *************** function _init_config *****************
   577 ;; Defined at:
   578 ;;		line 15 in file "main.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg, status,2, status,0, pclath, cstack
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   592 ;;      Params:         0       0       0       0       0
   593 ;;      Locals:         0       0       0       0       0
   594 ;;      Temps:          0       0       0       0       0
   595 ;;      Totals:         0       0       0       0       0
   596 ;;Total ram usage:        0 bytes
   597 ;; Hardware stack levels used:    1
   598 ;; Hardware stack levels required when called:    1
   599 ;; This function calls:
   600 ;;		_init_ssd
   601 ;; This function is called by:
   602 ;;		_main
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           
   607                           ;psect for function _init_config
   608  06BF                     _init_config:	
   609  06BF                     l779:	
   610                           ;incstack = 0
   611                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   612                           
   613                           
   614                           ;main.c: 17: 
   615  06BF  120A  118A  26C5  120A  118A  	fcall	_init_ssd
   616  06C4                     l53:	
   617  06C4  0008               	return
   618  06C5                     __end_of_init_config:	
   619                           
   620                           	psect	text2
   621  06C5                     __ptext2:	
   622 ;; *************** function _init_ssd *****************
   623 ;; Defined at:
   624 ;;		line 4 in file "SSD.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;		None
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		wreg, status,2
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   638 ;;      Params:         0       0       0       0       0
   639 ;;      Locals:         0       0       0       0       0
   640 ;;      Temps:          0       0       0       0       0
   641 ;;      Totals:         0       0       0       0       0
   642 ;;Total ram usage:        0 bytes
   643 ;; Hardware stack levels used:    1
   644 ;; This function calls:
   645 ;;		Nothing
   646 ;; This function is called by:
   647 ;;		_init_config
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           
   652                           ;psect for function _init_ssd
   653  06C5                     _init_ssd:	
   654  06C5                     l725:	
   655                           ;incstack = 0
   656                           ; Regs used in _init_ssd: [wreg+status,2]
   657                           
   658                           
   659                           ;SSD.c: 7:     TRISD = 0x00;
   660  06C5  1683               	bsf	3,5	;RP0=1, select bank1
   661  06C6  1303               	bcf	3,6	;RP1=0, select bank1
   662  06C7  0188               	clrf	8	;volatile
   663  06C8                     l727:	
   664                           
   665                           ;SSD.c: 10:     TRISA = TRISA & 0xC3;
   666  06C8  0805               	movf	5,w	;volatile
   667  06C9  39C3               	andlw	195
   668  06CA  0085               	movwf	5	;volatile
   669  06CB                     l729:	
   670                           
   671                           ;SSD.c: 13:     PORTA = PORTA & 0xC3;
   672  06CB  1283               	bcf	3,5	;RP0=0, select bank0
   673  06CC  1303               	bcf	3,6	;RP1=0, select bank0
   674  06CD  0805               	movf	5,w	;volatile
   675  06CE  39C3               	andlw	195
   676  06CF  0085               	movwf	5	;volatile
   677  06D0                     l21:	
   678  06D0  0008               	return
   679  06D1                     __end_of_init_ssd:	
   680                           
   681                           	psect	text3
   682  0758                     __ptext3:	
   683 ;; *************** function _display *****************
   684 ;; Defined at:
   685 ;;		line 17 in file "SSD.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;  data            1    wreg     PTR unsigned char 
   688 ;;		 -> main@ssd(4), 
   689 ;; Auto vars:     Size  Location     Type
   690 ;;  data            1    5[COMMON] PTR unsigned char 
   691 ;;		 -> main@ssd(4), 
   692 ;;  i               2    3[COMMON] unsigned int 
   693 ;;  digit           1    6[COMMON] unsigned char 
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   703 ;;      Params:         0       0       0       0       0
   704 ;;      Locals:         4       0       0       0       0
   705 ;;      Temps:          3       0       0       0       0
   706 ;;      Totals:         7       0       0       0       0
   707 ;;Total ram usage:        7 bytes
   708 ;; Hardware stack levels used:    1
   709 ;; This function calls:
   710 ;;		Nothing
   711 ;; This function is called by:
   712 ;;		_main
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           
   717                           ;psect for function _display
   718  0758                     _display:	
   719                           
   720                           ;incstack = 0
   721                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0]
   722                           ;display@data stored from wreg
   723  0758  00F5               	movwf	display@data
   724  0759                     l731:	
   725                           
   726                           ;SSD.c: 17: void display(unsigned char data[]);SSD.c: 18: {;SSD.c: 19:     unsigned char
      +                           digit;;SSD.c: 20:     static unsigned int wait= 0;;SSD.c: 21:        if(wait == 500)
   727  0759  30F4               	movlw	244
   728  075A  1283               	bcf	3,5	;RP0=0, select bank0
   729  075B  1303               	bcf	3,6	;RP1=0, select bank0
   730  075C  0646               	xorwf	display@wait,w
   731  075D  1D03               	skipz
   732  075E  2F63               	goto	u61
   733  075F  0347               	decf	display@wait+1,w
   734  0760  1D03               	btfss	3,2
   735  0761  2F63               	goto	u61
   736  0762  2F64               	goto	u60
   737  0763                     u61:	
   738  0763  2FA8               	goto	l761
   739  0764                     u60:	
   740  0764                     l733:	
   741                           
   742                           ;SSD.c: 22:         {;SSD.c: 23:            wait = 0;
   743  0764  01C6               	clrf	display@wait
   744  0765  01C7               	clrf	display@wait+1
   745  0766                     l735:	
   746                           
   747                           ;SSD.c: 24:            i++;
   748  0766  3001               	movlw	1
   749  0767  07FB               	addwf	_i,f
   750  0768  1803               	skipnc
   751  0769  0AFC               	incf	_i+1,f
   752  076A  3000               	movlw	0
   753  076B  07FC               	addwf	_i+1,f
   754  076C                     l737:	
   755                           
   756                           ;SSD.c: 25:            j++;
   757  076C  3001               	movlw	1
   758  076D  07C4               	addwf	_j,f
   759  076E  1803               	skipnc
   760  076F  0AC5               	incf	_j+1,f
   761  0770  3000               	movlw	0
   762  0771  07C5               	addwf	_j+1,f
   763  0772                     l739:	
   764                           
   765                           ;SSD.c: 26:            k++;
   766  0772  3001               	movlw	1
   767  0773  07C2               	addwf	_k,f
   768  0774  1803               	skipnc
   769  0775  0AC3               	incf	_k+1,f
   770  0776  3000               	movlw	0
   771  0777  07C3               	addwf	_k+1,f
   772  0778                     l741:	
   773                           
   774                           ;SSD.c: 27:            l++;
   775  0778  3001               	movlw	1
   776  0779  07C0               	addwf	_l,f
   777  077A  1803               	skipnc
   778  077B  0AC1               	incf	_l+1,f
   779  077C  3000               	movlw	0
   780  077D  07C1               	addwf	_l+1,f
   781  077E                     l743:	
   782                           
   783                           ;SSD.c: 28:            if(i == 12)
   784  077E  300C               	movlw	12
   785  077F  067B               	xorwf	_i,w
   786  0780  047C               	iorwf	_i+1,w
   787  0781  1D03               	btfss	3,2
   788  0782  2F84               	goto	u71
   789  0783  2F85               	goto	u70
   790  0784                     u71:	
   791  0784  2F87               	goto	l747
   792  0785                     u70:	
   793  0785                     l745:	
   794                           
   795                           ;SSD.c: 29:            {;SSD.c: 30:                i = 0;
   796  0785  01FB               	clrf	_i
   797  0786  01FC               	clrf	_i+1
   798  0787                     l747:	
   799                           
   800                           ;SSD.c: 32:            if(j == 12)
   801  0787  300C               	movlw	12
   802  0788  0644               	xorwf	_j,w
   803  0789  0445               	iorwf	_j+1,w
   804  078A  1D03               	btfss	3,2
   805  078B  2F8D               	goto	u81
   806  078C  2F8E               	goto	u80
   807  078D                     u81:	
   808  078D  2F90               	goto	l751
   809  078E                     u80:	
   810  078E                     l749:	
   811                           
   812                           ;SSD.c: 33:            {;SSD.c: 34:                j = 0;
   813  078E  01C4               	clrf	_j
   814  078F  01C5               	clrf	_j+1
   815  0790                     l751:	
   816                           
   817                           ;SSD.c: 36:            if(k == 12)
   818  0790  300C               	movlw	12
   819  0791  0642               	xorwf	_k,w
   820  0792  0443               	iorwf	_k+1,w
   821  0793  1D03               	btfss	3,2
   822  0794  2F96               	goto	u91
   823  0795  2F97               	goto	u90
   824  0796                     u91:	
   825  0796  2F99               	goto	l755
   826  0797                     u90:	
   827  0797                     l753:	
   828                           
   829                           ;SSD.c: 37:            {;SSD.c: 38:                k = 0;
   830  0797  01C2               	clrf	_k
   831  0798  01C3               	clrf	_k+1
   832  0799                     l755:	
   833                           
   834                           ;SSD.c: 40:            if(l == 12)
   835  0799  300C               	movlw	12
   836  079A  0640               	xorwf	_l,w
   837  079B  0441               	iorwf	_l+1,w
   838  079C  1D03               	btfss	3,2
   839  079D  2F9F               	goto	u101
   840  079E  2FA0               	goto	u100
   841  079F                     u101:	
   842  079F  2FA2               	goto	l759
   843  07A0                     u100:	
   844  07A0                     l757:	
   845                           
   846                           ;SSD.c: 41:            {;SSD.c: 42:                l = 0;
   847  07A0  01C0               	clrf	_l
   848  07A1  01C1               	clrf	_l+1
   849  07A2                     l759:	
   850                           
   851                           ;SSD.c: 44:           count++;
   852  07A2  3001               	movlw	1
   853  07A3  07C8               	addwf	_count,f
   854  07A4  1803               	skipnc
   855  07A5  0AC9               	incf	_count+1,f
   856  07A6  3000               	movlw	0
   857  07A7  07C9               	addwf	_count+1,f
   858  07A8                     l761:	
   859                           
   860                           ;SSD.c: 46:          wait++;
   861  07A8  3001               	movlw	1
   862  07A9  07C6               	addwf	display@wait,f
   863  07AA  1803               	skipnc
   864  07AB  0AC7               	incf	display@wait+1,f
   865  07AC  3000               	movlw	0
   866  07AD  07C7               	addwf	display@wait+1,f
   867                           
   868                           ;SSD.c: 47:     for(digit = 0;digit < 4;digit++)
   869  07AE  01F6               	clrf	display@digit
   870  07AF                     l767:	
   871                           
   872                           ;SSD.c: 48:     {;SSD.c: 49:         PORTD =data[digit];
   873  07AF  0876               	movf	display@digit,w
   874  07B0  0775               	addwf	display@data,w
   875  07B1  00F0               	movwf	??_display
   876  07B2  0870               	movf	??_display,w
   877  07B3  0084               	movwf	4
   878  07B4  1383               	bcf	3,7	;select IRP bank0
   879  07B5  0800               	movf	0,w
   880  07B6  1283               	bcf	3,5	;RP0=0, select bank0
   881  07B7  1303               	bcf	3,6	;RP1=0, select bank0
   882  07B8  0088               	movwf	8	;volatile
   883  07B9                     l769:	
   884                           
   885                           ;SSD.c: 50:         PORTA = (PORTA & 0xC3) | (0x20 >> digit);
   886  07B9  0A76               	incf	display@digit,w
   887  07BA  00F0               	movwf	??_display
   888  07BB  3020               	movlw	32
   889  07BC  00F1               	movwf	??_display+1
   890  07BD  3000               	movlw	0
   891  07BE  00F2               	movwf	??_display+2
   892  07BF  2FC3               	goto	u114
   893  07C0                     u115:	
   894  07C0  0D72               	rlf	??_display+2,w
   895  07C1  0CF2               	rrf	??_display+2,f
   896  07C2  0CF1               	rrf	??_display+1,f
   897  07C3                     u114:	
   898  07C3  0BF0               	decfsz	??_display,f
   899  07C4  2FC0               	goto	u115
   900  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   901  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   902  07C7  0805               	movf	5,w	;volatile
   903  07C8  39C3               	andlw	195
   904  07C9  0471               	iorwf	??_display+1,w
   905  07CA  0085               	movwf	5	;volatile
   906  07CB                     l771:	
   907                           
   908                           ;SSD.c: 51:         for(unsigned int i = 400;i--;);
   909  07CB  3090               	movlw	144
   910  07CC  00F3               	movwf	display@i
   911  07CD  3001               	movlw	1
   912  07CE  00F4               	movwf	display@i+1
   913  07CF                     l773:	
   914  07CF  3001               	movlw	1
   915  07D0  02F3               	subwf	display@i,f
   916  07D1  3000               	movlw	0
   917  07D2  1C03               	skipc
   918  07D3  03F4               	decf	display@i+1,f
   919  07D4  02F4               	subwf	display@i+1,f
   920  07D5  0A73               	incf	display@i,w
   921  07D6  1D03               	skipz
   922  07D7  2FDC               	goto	u121
   923  07D8  0A74               	incf	display@i+1,w
   924  07D9  1D03               	btfss	3,2
   925  07DA  2FDC               	goto	u121
   926  07DB  2FDD               	goto	u120
   927  07DC                     u121:	
   928  07DC  2FCF               	goto	l773
   929  07DD                     u120:	
   930  07DD                     l775:	
   931                           
   932                           ;SSD.c: 53:     }
   933  07DD  3001               	movlw	1
   934  07DE  00F0               	movwf	??_display
   935  07DF  0870               	movf	??_display,w
   936  07E0  07F6               	addwf	display@digit,f
   937  07E1                     l777:	
   938  07E1  3004               	movlw	4
   939  07E2  0276               	subwf	display@digit,w
   940  07E3  1C03               	skipc
   941  07E4  2FE6               	goto	u131
   942  07E5  2FE7               	goto	u130
   943  07E6                     u131:	
   944  07E6  2FAF               	goto	l767
   945  07E7                     u130:	
   946  07E7                     l36:	
   947  07E7  0008               	return
   948  07E8                     __end_of_display:	
   949  007E                     btemp	set	126	;btemp
   950  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     20      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display@data	PTR unsigned char  size(1) Largest target is 4
		 -> main@ssd(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_display

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0     382
                                              7 COMMON     4     4      0
                                              0 BANK0     20    20      0
                            _display
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                           _init_ssd
 ---------------------------------------------------------------------------------
 (2) _init_ssd                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              7     7      0     168
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
   _init_config
     _init_ssd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      2A       5       52.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      37      12        0.0%
ABS                  0      0      37       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jun  6 08:12:45 2020

                      _i 007B                        _j 0044                        _k 0042  
                      _l 0040                        pc 0002                       l21 06D0  
                     l36 07E7                       l53 06C4                       u60 0764  
                     u61 0763                       u70 0785                       u71 0784  
                     u80 078E                       u81 078D                       u90 0797  
                     u91 0796                       fsr 0004                      l731 0759  
                    l741 0778                      l733 0764                      l725 06C5  
                    l751 0790                      l743 077E                      l735 0766  
                    l727 06C8                      l753 0797                      l745 0785  
                    l737 076C                      l761 07A8                      l729 06CB  
                    l771 07CB                      l755 0799                      l747 0787  
                    l739 0772                      l773 07CF                      l757 07A0  
                    l749 078E                      l781 06F6                      l775 07DD  
                    l767 07AF                      l759 07A2                      l791 0722  
                    l783 070B                      l777 07E1                      l769 07B9  
                    l793 073F                      l785 0711                      l779 06BF  
                    l795 0743                      l787 0711                      l797 0749  
                    l789 0716                      l799 0752                      u100 07A0  
                    u101 079F                      u120 07DD                      u121 07DC  
                    u130 07E7                      u114 07C3                      u131 07E6  
                    u115 07C0                      u140 06FE                      u150 0722  
                    u151 0721                      u160 0752                      u161 0751  
                    u155 071E                      fsr0 0004                      indf 0000  
            display@data 0075              display@wait 0046                     _main 06F6  
                   btemp 007E                     start 0000                    ?_main 0070  
          __CFG_WDTE$OFF 0000             ?_init_config 0070                    _PORTA 0005  
                  _PORTD 0008                    _TRISA 0085                    _TRISD 0088  
           display@digit 0076          __end_of_display 07E8                    _count 0048  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07E8             __end_of_main 0758                   ??_main 0077  
       __end_of_init_ssd 06D1                ??_display 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 06D1     __size_of_init_config 0006  
             __pbssBANK0 0046               __pmaintext 06F6                ?_init_ssd 0070  
                __ptext1 06BF                  __ptext2 06C5                  __ptext3 0758  
                _display 0758                  main@ssd 002E     end_of_initialization 07FC  
         main@prev_count 0032               ??_init_ssd 0070      start_initialization 07E8  
             init_fetch0 06E3              __pdataBANK0 0034            ??_init_config 0070  
            __pbssCOMMON 007B                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_init_ssd 000C                 ?_display 0070      __end_of_init_config 06C5  
              main@digit 0020              _init_config 06BF         __size_of_display 0090  
          __size_of_main 0062                 _init_ssd 06C5                 main@F861 0034  
               display@i 0073                 init_ram0 06E7  
