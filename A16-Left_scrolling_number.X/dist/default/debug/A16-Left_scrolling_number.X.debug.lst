

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jun  6 06:58:50 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  018C                     	;# 
   110  018D                     	;# 
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0014                     	;# 
   133  0015                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  0087                     	;# 
   150  0088                     	;# 
   151  0089                     	;# 
   152  008C                     	;# 
   153  008D                     	;# 
   154  008E                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0008                     	;# 
   180  0009                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  000E                     	;# 
   187  000F                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  001D                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  0088                     	;# 
   211  0089                     	;# 
   212  008C                     	;# 
   213  008D                     	;# 
   214  008E                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  010C                     	;# 
   226  010D                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231                           
   232                           	psect	idataBANK0
   233  0711                     __pidataBANK0:	
   234                           
   235                           ;initializer for main@F857
   236  0711  343F               	retlw	63
   237  0712  3406               	retlw	6
   238  0713  345B               	retlw	91
   239  0714  344F               	retlw	79
   240  0715  3466               	retlw	102
   241  0716  346D               	retlw	109
   242  0717  347D               	retlw	125
   243  0718  3407               	retlw	7
   244  0719  347F               	retlw	127
   245  071A  346F               	retlw	111
   246  071B  3400               	retlw	0
   247  071C  3400               	retlw	0
   248  0008                     _PORTD	set	8
   249  0005                     _PORTA	set	5
   250  0085                     _TRISA	set	133
   251  0088                     _TRISD	set	136
   252                           
   253                           ; #config settings
   254  0000                     
   255                           	psect	cinit
   256  07EC                     start_initialization:	
   257  07EC                     __initialization:	
   258                           
   259                           ; Initialize objects allocated to BANK0
   260  07EC  1383               	bcf	3,7	;select IRP bank0
   261  07ED  303E               	movlw	low (__pdataBANK0+12)
   262  07EE  00FD               	movwf	btemp+-1
   263  07EF  3007               	movlw	high __pidataBANK0
   264  07F0  00FE               	movwf	btemp
   265  07F1  3011               	movlw	low __pidataBANK0
   266  07F2  00FF               	movwf	btemp+1
   267  07F3  3032               	movlw	low __pdataBANK0
   268  07F4  0084               	movwf	4
   269  07F5  120A  118A  2721  120A  118A  	fcall	init_ram0
   270                           
   271                           ; Clear objects allocated to BANK0
   272  07FA  01BE               	clrf	__pbssBANK0& (0+127)
   273  07FB  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   274  07FC                     end_of_initialization:	
   275                           ;End of C runtime variable initialization code
   276                           
   277  07FC                     __end_of__initialization:	
   278  07FC  0183               	clrf	3
   279  07FD  120A  118A  2F87   	ljmp	_main	;jump to C main() function
   280                           
   281                           	psect	bssBANK0
   282  003E                     __pbssBANK0:	
   283  003E                     _count:	
   284  003E                     	ds	2
   285                           
   286                           	psect	dataBANK0
   287  0032                     __pdataBANK0:	
   288  0032                     main@F857:	
   289  0032                     	ds	12
   290                           
   291                           	psect	inittext
   292  071D                     init_fetch0:	
   293                           ;	Called with low address in FSR and high address in W
   294                           
   295  071D  087E               	movf	btemp,w
   296  071E  008A               	movwf	10
   297  071F  087F               	movf	btemp+1,w
   298  0720  0082               	movwf	2
   299  0721                     init_ram0:	
   300                           ;Called with:
   301                           ;	high address of idata address in btemp 
   302                           ;	low address of idata address in btemp+1 
   303                           ;	low address of data in FSR
   304                           ;	high address + 1 of data in btemp-1
   305                           
   306  0721  120A  118A  271D  120A  118A  	fcall	init_fetch0
   307  0726  0080               	movwf	0
   308  0727  0A84               	incf	4,f
   309  0728  0804               	movf	4,w
   310  0729  067D               	xorwf	btemp+-1,w
   311  072A  1903               	btfsc	3,2
   312  072B  3400               	retlw	0
   313  072C  0AFF               	incf	btemp+1,f
   314  072D  1903               	btfsc	3,2
   315  072E  0AFE               	incf	btemp,f
   316  072F  2F21               	goto	init_ram0
   317                           
   318                           	psect	cstackCOMMON
   319  0070                     __pcstackCOMMON:	
   320  0070                     ?_init_ssd:	
   321  0070                     ??_init_ssd:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ?_display:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ??_display:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_init_config:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ??_init_config:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_main:	
   337                           ; 1 bytes @ 0x0
   338                           
   339                           
   340                           ; 1 bytes @ 0x0
   341  0070                     	ds	3
   342  0073                     display@i:	
   343                           
   344                           ; 2 bytes @ 0x3
   345  0073                     	ds	2
   346  0075                     display@wait:	
   347                           
   348                           ; 2 bytes @ 0x5
   349  0075                     	ds	2
   350  0077                     display@data:	
   351                           
   352                           ; 1 bytes @ 0x7
   353  0077                     	ds	1
   354  0078                     display@digit:	
   355                           
   356                           ; 1 bytes @ 0x8
   357  0078                     	ds	1
   358  0079                     ??_main:	
   359                           
   360                           ; 1 bytes @ 0x9
   361  0079                     	ds	4
   362                           
   363                           	psect	cstackBANK0
   364  0020                     __pcstackBANK0:	
   365  0020                     main@digit:	
   366                           
   367                           ; 12 bytes @ 0x0
   368  0020                     	ds	12
   369  002C                     main@ssd:	
   370                           
   371                           ; 4 bytes @ 0xC
   372  002C                     	ds	4
   373  0030                     main@prev_count:	
   374                           
   375                           ; 2 bytes @ 0x10
   376  0030                     	ds	2
   377                           
   378                           	psect	maintext
   379  0787                     __pmaintext:	
   380 ;;
   381 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   382 ;;
   383 ;; *************** function _main *****************
   384 ;; Defined at:
   385 ;;		line 16 in file "main.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;  digit          12    0[BANK0 ] unsigned char [12]
   390 ;;  ssd             4   12[BANK0 ] unsigned char [4]
   391 ;;  prev_count      2   16[BANK0 ] unsigned int 
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   396 ;; Tracked objects:
   397 ;;		On entry : B00/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   401 ;;      Params:         0       0       0       0       0
   402 ;;      Locals:         0      18       0       0       0
   403 ;;      Temps:          4       0       0       0       0
   404 ;;      Totals:         4      18       0       0       0
   405 ;;Total ram usage:       22 bytes
   406 ;; Hardware stack levels required when called:    2
   407 ;; This function calls:
   408 ;;		_display
   409 ;;		_init_config
   410 ;; This function is called by:
   411 ;;		Startup code after reset
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           
   416                           ;psect for function _main
   417  0787                     _main:	
   418  0787                     l713:	
   419                           ;incstack = 0
   420                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   421                           
   422                           
   423                           ;main.c: 17:         prev_count = count;;main.c: 18:         }
   424  0787  3020               	movlw	main@digit& (0+255)
   425  0788  0084               	movwf	4
   426  0789  3032               	movlw	low main@F857
   427  078A  00F9               	movwf	??_main
   428  078B  0804               	movf	4,w
   429  078C  00FA               	movwf	??_main+1
   430  078D  300C               	movlw	12
   431  078E  00FB               	movwf	??_main+2
   432  078F                     u100:	
   433  078F  0879               	movf	??_main,w
   434  0790  0084               	movwf	4
   435  0791  1383               	bcf	3,7	;select IRP bank0
   436  0792  0800               	movf	0,w
   437  0793  00FC               	movwf	??_main+3
   438  0794  0AF9               	incf	??_main,f
   439  0795  087A               	movf	??_main+1,w
   440  0796  0084               	movwf	4
   441  0797  087C               	movf	??_main+3,w
   442  0798  0080               	movwf	0
   443  0799  0AFA               	incf	??_main+1,f
   444  079A  0BFB               	decfsz	??_main+2,f
   445  079B  2F8F               	goto	u100
   446  079C                     l715:	
   447                           
   448                           ;main.c: 19:         display(ssd);
   449  079C  3001               	movlw	1
   450  079D  1283               	bcf	3,5	;RP0=0, select bank0
   451  079E  1303               	bcf	3,6	;RP1=0, select bank0
   452  079F  00B0               	movwf	main@prev_count
   453  07A0  3000               	movlw	0
   454  07A1  00B1               	movwf	main@prev_count+1
   455  07A2                     l717:	
   456                           
   457                           ;main.c: 20:         if(count == 10)
   458  07A2  120A  118A  26FF  120A  118A  	fcall	_init_config
   459  07A7                     l719:	
   460                           
   461                           ;main.c: 22:             count = 0;
   462  07A7  1283               	bcf	3,5	;RP0=0, select bank0
   463  07A8  1303               	bcf	3,6	;RP1=0, select bank0
   464  07A9  083F               	movf	_count+1,w
   465  07AA  0631               	xorwf	main@prev_count+1,w
   466  07AB  1D03               	skipz
   467  07AC  2FAF               	goto	u115
   468  07AD  083E               	movf	_count,w
   469  07AE  0630               	xorwf	main@prev_count,w
   470  07AF                     u115:	
   471  07AF  1903               	skipnz
   472  07B0  2FB2               	goto	u111
   473  07B1  2FB3               	goto	u110
   474  07B2                     u111:	
   475  07B2  2FD7               	goto	l725
   476  07B3                     u110:	
   477  07B3                     l721:	
   478                           
   479                           ;main.c: 23:         };main.c: 24: 
   480  07B3  083E               	movf	_count,w
   481  07B4  3E20               	addlw	(low (main@digit| 0))& (0+255)
   482  07B5  0084               	movwf	4
   483  07B6  1383               	bcf	3,7	;select IRP bank0
   484  07B7  0800               	movf	0,w
   485  07B8  00F9               	movwf	??_main
   486  07B9  0879               	movf	??_main,w
   487  07BA  00AC               	movwf	main@ssd
   488                           
   489                           ;main.c: 25: 
   490  07BB  083E               	movf	_count,w
   491  07BC  3E01               	addlw	1
   492  07BD  3E20               	addlw	(low (main@digit| 0))& (0+255)
   493  07BE  0084               	movwf	4
   494  07BF  0800               	movf	0,w
   495  07C0  00F9               	movwf	??_main
   496  07C1  0879               	movf	??_main,w
   497  07C2  00AD               	movwf	main@ssd+1
   498                           
   499                           ;main.c: 26:     }
   500  07C3  083E               	movf	_count,w
   501  07C4  3E02               	addlw	2
   502  07C5  3E20               	addlw	(low (main@digit| 0))& (0+255)
   503  07C6  0084               	movwf	4
   504  07C7  0800               	movf	0,w
   505  07C8  00F9               	movwf	??_main
   506  07C9  0879               	movf	??_main,w
   507  07CA  00AE               	movwf	main@ssd+2
   508                           
   509                           ;main.c: 27:     return;
   510  07CB  083E               	movf	_count,w
   511  07CC  3E03               	addlw	3
   512  07CD  3E20               	addlw	(low (main@digit| 0))& (0+255)
   513  07CE  0084               	movwf	4
   514  07CF  0800               	movf	0,w
   515  07D0  00F9               	movwf	??_main
   516  07D1  0879               	movf	??_main,w
   517  07D2  00AF               	movwf	main@ssd+3
   518  07D3                     l723:	
   519                           
   520                           ;main.c: 28: }
   521  07D3  083F               	movf	_count+1,w
   522  07D4  00B1               	movwf	main@prev_count+1
   523  07D5  083E               	movf	_count,w
   524  07D6  00B0               	movwf	main@prev_count
   525  07D7                     l725:	
   526  07D7  302C               	movlw	(low (main@ssd| 0))& (0+255)
   527  07D8  120A  118A  2730  120A  118A  	fcall	_display
   528  07DD                     l727:	
   529  07DD  300A               	movlw	10
   530  07DE  1283               	bcf	3,5	;RP0=0, select bank0
   531  07DF  1303               	bcf	3,6	;RP1=0, select bank0
   532  07E0  063E               	xorwf	_count,w
   533  07E1  043F               	iorwf	_count+1,w
   534  07E2  1D03               	btfss	3,2
   535  07E3  2FE5               	goto	u121
   536  07E4  2FE6               	goto	u120
   537  07E5                     u121:	
   538  07E5  2FA7               	goto	l719
   539  07E6                     u120:	
   540  07E6                     l729:	
   541  07E6  01BE               	clrf	_count
   542  07E7  01BF               	clrf	_count+1
   543  07E8  2FA7               	goto	l719
   544  07E9  120A  118A  2800   	ljmp	start
   545  07EC                     __end_of_main:	
   546                           
   547                           	psect	text1
   548  06FF                     __ptext1:	
   549 ;; *************** function _init_config *****************
   550 ;; Defined at:
   551 ;;		line 11 in file "main.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;		None
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg, status,2, status,0, pclath, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   565 ;;      Params:         0       0       0       0       0
   566 ;;      Locals:         0       0       0       0       0
   567 ;;      Temps:          0       0       0       0       0
   568 ;;      Totals:         0       0       0       0       0
   569 ;;Total ram usage:        0 bytes
   570 ;; Hardware stack levels used:    1
   571 ;; Hardware stack levels required when called:    1
   572 ;; This function calls:
   573 ;;		_init_ssd
   574 ;; This function is called by:
   575 ;;		_main
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           
   580                           ;psect for function _init_config
   581  06FF                     _init_config:	
   582  06FF                     l711:	
   583                           ;incstack = 0
   584                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   585                           
   586                           
   587                           ;main.c: 13:         ssd[0] = digit[count + 0];
   588  06FF  120A  118A  2705  120A  118A  	fcall	_init_ssd
   589  0704                     l31:	
   590  0704  0008               	return
   591  0705                     __end_of_init_config:	
   592                           
   593                           	psect	text2
   594  0705                     __ptext2:	
   595 ;; *************** function _init_ssd *****************
   596 ;; Defined at:
   597 ;;		line 4 in file "SSD.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;		None
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, status,2
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   611 ;;      Params:         0       0       0       0       0
   612 ;;      Locals:         0       0       0       0       0
   613 ;;      Temps:          0       0       0       0       0
   614 ;;      Totals:         0       0       0       0       0
   615 ;;Total ram usage:        0 bytes
   616 ;; Hardware stack levels used:    1
   617 ;; This function calls:
   618 ;;		Nothing
   619 ;; This function is called by:
   620 ;;		_init_config
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           
   625                           ;psect for function _init_ssd
   626  0705                     _init_ssd:	
   627  0705                     l683:	
   628                           ;incstack = 0
   629                           ; Regs used in _init_ssd: [wreg+status,2]
   630                           
   631                           
   632                           ;SSD.c: 7:     TRISD = 0x00;
   633  0705  1683               	bsf	3,5	;RP0=1, select bank1
   634  0706  1303               	bcf	3,6	;RP1=0, select bank1
   635  0707  0188               	clrf	8	;volatile
   636  0708                     l685:	
   637                           
   638                           ;SSD.c: 10:     TRISA = TRISA & 0xC3;
   639  0708  0805               	movf	5,w	;volatile
   640  0709  39C3               	andlw	195
   641  070A  0085               	movwf	5	;volatile
   642  070B                     l687:	
   643                           
   644                           ;SSD.c: 13:     PORTA = PORTA & 0xC3;
   645  070B  1283               	bcf	3,5	;RP0=0, select bank0
   646  070C  1303               	bcf	3,6	;RP1=0, select bank0
   647  070D  0805               	movf	5,w	;volatile
   648  070E  39C3               	andlw	195
   649  070F  0085               	movwf	5	;volatile
   650  0710                     l13:	
   651  0710  0008               	return
   652  0711                     __end_of_init_ssd:	
   653                           
   654                           	psect	text3
   655  0730                     __ptext3:	
   656 ;; *************** function _display *****************
   657 ;; Defined at:
   658 ;;		line 17 in file "SSD.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;  data            1    wreg     PTR unsigned char 
   661 ;;		 -> main@ssd(4), 
   662 ;; Auto vars:     Size  Location     Type
   663 ;;  data            1    7[COMMON] PTR unsigned char 
   664 ;;		 -> main@ssd(4), 
   665 ;;  i               2    3[COMMON] unsigned int 
   666 ;;  wait            2    5[COMMON] unsigned int 
   667 ;;  digit           1    8[COMMON] unsigned char 
   668 ;; Return value:  Size  Location     Type
   669 ;;                  1    wreg      void 
   670 ;; Registers used:
   671 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   677 ;;      Params:         0       0       0       0       0
   678 ;;      Locals:         6       0       0       0       0
   679 ;;      Temps:          3       0       0       0       0
   680 ;;      Totals:         9       0       0       0       0
   681 ;;Total ram usage:        9 bytes
   682 ;; Hardware stack levels used:    1
   683 ;; This function calls:
   684 ;;		Nothing
   685 ;; This function is called by:
   686 ;;		_main
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           
   691                           ;psect for function _display
   692  0730                     _display:	
   693                           
   694                           ;incstack = 0
   695                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0]
   696                           ;display@data stored from wreg
   697  0730  00F7               	movwf	display@data
   698  0731                     l689:	
   699                           
   700                           ;SSD.c: 17: void display(unsigned char data[]);SSD.c: 18: {;SSD.c: 19:     unsigned char
      +                           digit;;SSD.c: 20:     unsigned int wait= 0;
   701  0731  01F5               	clrf	display@wait
   702  0732  01F6               	clrf	display@wait+1
   703                           
   704                           ;SSD.c: 21:     for(digit = 0;digit < 4;digit++)
   705  0733  01F8               	clrf	display@digit
   706  0734                     l695:	
   707                           
   708                           ;SSD.c: 22:     {;SSD.c: 23:         if(!wait--)
   709  0734  3001               	movlw	1
   710  0735  02F5               	subwf	display@wait,f
   711  0736  3000               	movlw	0
   712  0737  1C03               	skipc
   713  0738  03F6               	decf	display@wait+1,f
   714  0739  02F6               	subwf	display@wait+1,f
   715  073A  0A75               	incf	display@wait,w
   716  073B  1D03               	skipz
   717  073C  2F41               	goto	u61
   718  073D  0A76               	incf	display@wait+1,w
   719  073E  1D03               	btfss	3,2
   720  073F  2F41               	goto	u61
   721  0740  2F42               	goto	u60
   722  0741                     u61:	
   723  0741  2F4E               	goto	l699
   724  0742                     u60:	
   725  0742                     l697:	
   726                           
   727                           ;SSD.c: 24:         {;SSD.c: 25:             wait = 250000;
   728  0742  3090               	movlw	144
   729  0743  00F5               	movwf	display@wait
   730  0744  30D0               	movlw	208
   731  0745  00F6               	movwf	display@wait+1
   732                           
   733                           ;SSD.c: 26:             count++;
   734  0746  3001               	movlw	1
   735  0747  1283               	bcf	3,5	;RP0=0, select bank0
   736  0748  1303               	bcf	3,6	;RP1=0, select bank0
   737  0749  07BE               	addwf	_count,f
   738  074A  1803               	skipnc
   739  074B  0ABF               	incf	_count+1,f
   740  074C  3000               	movlw	0
   741  074D  07BF               	addwf	_count+1,f
   742  074E                     l699:	
   743                           
   744                           ;SSD.c: 28:         PORTD =data[digit];
   745  074E  0878               	movf	display@digit,w
   746  074F  0777               	addwf	display@data,w
   747  0750  00F0               	movwf	??_display
   748  0751  0870               	movf	??_display,w
   749  0752  0084               	movwf	4
   750  0753  1383               	bcf	3,7	;select IRP bank0
   751  0754  0800               	movf	0,w
   752  0755  1283               	bcf	3,5	;RP0=0, select bank0
   753  0756  1303               	bcf	3,6	;RP1=0, select bank0
   754  0757  0088               	movwf	8	;volatile
   755  0758                     l701:	
   756                           
   757                           ;SSD.c: 29:         PORTA = (PORTA & 0xC3) | (0x20 >> digit);
   758  0758  0A78               	incf	display@digit,w
   759  0759  00F0               	movwf	??_display
   760  075A  3020               	movlw	32
   761  075B  00F1               	movwf	??_display+1
   762  075C  3000               	movlw	0
   763  075D  00F2               	movwf	??_display+2
   764  075E  2F62               	goto	u74
   765  075F                     u75:	
   766  075F  0D72               	rlf	??_display+2,w
   767  0760  0CF2               	rrf	??_display+2,f
   768  0761  0CF1               	rrf	??_display+1,f
   769  0762                     u74:	
   770  0762  0BF0               	decfsz	??_display,f
   771  0763  2F5F               	goto	u75
   772  0764  1283               	bcf	3,5	;RP0=0, select bank0
   773  0765  1303               	bcf	3,6	;RP1=0, select bank0
   774  0766  0805               	movf	5,w	;volatile
   775  0767  39C3               	andlw	195
   776  0768  0471               	iorwf	??_display+1,w
   777  0769  0085               	movwf	5	;volatile
   778  076A                     l703:	
   779                           
   780                           ;SSD.c: 30:         for(unsigned int i = 60000;i--;);
   781  076A  3060               	movlw	96
   782  076B  00F3               	movwf	display@i
   783  076C  30EA               	movlw	234
   784  076D  00F4               	movwf	display@i+1
   785  076E                     l705:	
   786  076E  3001               	movlw	1
   787  076F  02F3               	subwf	display@i,f
   788  0770  3000               	movlw	0
   789  0771  1C03               	skipc
   790  0772  03F4               	decf	display@i+1,f
   791  0773  02F4               	subwf	display@i+1,f
   792  0774  0A73               	incf	display@i,w
   793  0775  1D03               	skipz
   794  0776  2F7B               	goto	u81
   795  0777  0A74               	incf	display@i+1,w
   796  0778  1D03               	btfss	3,2
   797  0779  2F7B               	goto	u81
   798  077A  2F7C               	goto	u80
   799  077B                     u81:	
   800  077B  2F6E               	goto	l705
   801  077C                     u80:	
   802  077C                     l707:	
   803                           
   804                           ;SSD.c: 31:     }
   805  077C  3001               	movlw	1
   806  077D  00F0               	movwf	??_display
   807  077E  0870               	movf	??_display,w
   808  077F  07F8               	addwf	display@digit,f
   809  0780                     l709:	
   810  0780  3004               	movlw	4
   811  0781  0278               	subwf	display@digit,w
   812  0782  1C03               	skipc
   813  0783  2F85               	goto	u91
   814  0784  2F86               	goto	u90
   815  0785                     u91:	
   816  0785  2F34               	goto	l695
   817  0786                     u90:	
   818  0786                     l22:	
   819  0786  0008               	return
   820  0787                     __end_of_display:	
   821  007E                     btemp	set	126	;btemp
   822  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     18      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display@data	PTR unsigned char  size(1) Largest target is 4
		 -> main@ssd(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_display

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0     405
                                              9 COMMON     4     4      0
                                              0 BANK0     18    18      0
                            _display
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                           _init_ssd
 ---------------------------------------------------------------------------------
 (2) _init_ssd                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              9     9      0     192
                                              0 COMMON     9     9      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
   _init_config
     _init_ssd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      20       5       40.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2D      12        0.0%
ABS                  0      0      2D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jun  6 06:58:50 2020

                      pc 0002                       l13 0710                       l22 0786  
                     l31 0704                       u60 0742                       u61 0741  
                     u80 077C                       u81 077B                       u90 0786  
                     u74 0762                       u91 0785                       u75 075F  
                     fsr 0004                      l701 0758                      l703 076A  
                    l711 06FF                      l705 076E                      l721 07B3  
                    l713 0787                      l707 077C                      l723 07D3  
                    l715 079C                      l709 0780                      l725 07D7  
                    l717 07A2                      l727 07DD                      l719 07A7  
                    l729 07E6                      l683 0705                      l685 0708  
                    l695 0734                      l687 070B                      l697 0742  
                    l689 0731                      l699 074E                      u100 078F  
                    u110 07B3                      u111 07B2                      u120 07E6  
                    u121 07E5                      u115 07AF                      fsr0 0004  
                    indf 0000              display@data 0077              display@wait 0075  
                   _main 0787                     btemp 007E                     start 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000             ?_init_config 0070  
                  _PORTA 0005                    _PORTD 0008                    _TRISA 0085  
                  _TRISD 0088             display@digit 0078          __end_of_display 0787  
                  _count 003E                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EC             __end_of_main 07EC  
                 ??_main 0079         __end_of_init_ssd 0711                ??_display 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 0711  
   __size_of_init_config 0006               __pbssBANK0 003E               __pmaintext 0787  
              ?_init_ssd 0070                  __ptext1 06FF                  __ptext2 0705  
                __ptext3 0730                  _display 0730                  main@ssd 002C  
   end_of_initialization 07FC           main@prev_count 0030               ??_init_ssd 0070  
    start_initialization 07EC               init_fetch0 071D              __pdataBANK0 0032  
          ??_init_config 0070                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_init_ssd 000C                 ?_display 0070      __end_of_init_config 0705  
              main@digit 0020              _init_config 06FF         __size_of_display 0057  
          __size_of_main 0065                 _init_ssd 0705                 main@F857 0032  
               display@i 0073                 init_ram0 0721  
