

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Jun  7 14:34:25 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.10
    22                           ; Generated 31/07/2019 GMT
    23                           ; 
    24                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  000E                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001D                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  0087                     	;# 
   154  0088                     	;# 
   155  0089                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  0007                     	;# 
   183  0008                     	;# 
   184  0009                     	;# 
   185  000A                     	;# 
   186  000B                     	;# 
   187  000C                     	;# 
   188  000D                     	;# 
   189  000E                     	;# 
   190  000E                     	;# 
   191  000F                     	;# 
   192  0010                     	;# 
   193  0011                     	;# 
   194  0012                     	;# 
   195  0013                     	;# 
   196  0014                     	;# 
   197  0015                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001B                     	;# 
   205  001B                     	;# 
   206  001C                     	;# 
   207  001D                     	;# 
   208  001E                     	;# 
   209  001F                     	;# 
   210  0081                     	;# 
   211  0085                     	;# 
   212  0086                     	;# 
   213  0087                     	;# 
   214  0088                     	;# 
   215  0089                     	;# 
   216  008C                     	;# 
   217  008D                     	;# 
   218  008E                     	;# 
   219  0091                     	;# 
   220  0092                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  009F                     	;# 
   229  010C                     	;# 
   230  010D                     	;# 
   231  010E                     	;# 
   232  010F                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235  0000                     	;# 
   236  0001                     	;# 
   237  0002                     	;# 
   238  0003                     	;# 
   239  0004                     	;# 
   240  0005                     	;# 
   241  0006                     	;# 
   242  0007                     	;# 
   243  0008                     	;# 
   244  0009                     	;# 
   245  000A                     	;# 
   246  000B                     	;# 
   247  000C                     	;# 
   248  000D                     	;# 
   249  000E                     	;# 
   250  000E                     	;# 
   251  000F                     	;# 
   252  0010                     	;# 
   253  0011                     	;# 
   254  0012                     	;# 
   255  0013                     	;# 
   256  0014                     	;# 
   257  0015                     	;# 
   258  0015                     	;# 
   259  0016                     	;# 
   260  0017                     	;# 
   261  0018                     	;# 
   262  0019                     	;# 
   263  001A                     	;# 
   264  001B                     	;# 
   265  001B                     	;# 
   266  001C                     	;# 
   267  001D                     	;# 
   268  001E                     	;# 
   269  001F                     	;# 
   270  0081                     	;# 
   271  0085                     	;# 
   272  0086                     	;# 
   273  0087                     	;# 
   274  0088                     	;# 
   275  0089                     	;# 
   276  008C                     	;# 
   277  008D                     	;# 
   278  008E                     	;# 
   279  0091                     	;# 
   280  0092                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295                           
   296                           	psect	idataCOMMON
   297  0555                     __pidataCOMMON:	
   298                           
   299                           ;initializer for read_digital_keypad@once
   300  0555  3401               	retlw	1
   301                           
   302                           	psect	idataBANK0
   303  0586                     __pidataBANK0:	
   304                           
   305                           ;initializer for main@F870
   306  0586  343F               	retlw	63
   307  0587  3406               	retlw	6
   308  0588  345B               	retlw	91
   309  0589  344F               	retlw	79
   310  058A  3466               	retlw	102
   311  058B  346D               	retlw	109
   312  058C  347D               	retlw	125
   313  058D  3407               	retlw	7
   314  058E  347F               	retlw	127
   315  058F  346F               	retlw	111
   316  0590  3400               	retlw	0
   317  0591  3400               	retlw	0
   318                           
   319                           ;initializer for _l
   320  0592  3403               	retlw	3
   321  0593  3400               	retlw	0
   322                           
   323                           ;initializer for _k
   324  0594  3402               	retlw	2
   325  0595  3400               	retlw	0
   326                           
   327                           ;initializer for _j
   328  0596  3401               	retlw	1
   329  0597  3400               	retlw	0
   330                           
   331                           ;initializer for _START
   332  0598  3401               	retlw	1
   333  0599  3400               	retlw	0
   334                           
   335                           ;initializer for _LEFT
   336  059A  3401               	retlw	1
   337  059B  3400               	retlw	0
   338  0006                     _PORTB	set	6
   339  0008                     _PORTD	set	8
   340  0005                     _PORTA	set	5
   341  0086                     _TRISB	set	134
   342  0085                     _TRISA	set	133
   343  0088                     _TRISD	set	136
   344                           
   345                           ; #config settings
   346  0000                     
   347                           	psect	cinit
   348  07DE                     start_initialization:	
   349  07DE                     __initialization:	
   350                           
   351                           ; Initialize objects allocated to BANK0
   352  07DE  1383               	bcf	3,7	;select IRP bank0
   353  07DF  304D               	movlw	low (__pdataBANK0+22)
   354  07E0  00FD               	movwf	btemp+-1
   355  07E1  3005               	movlw	high __pidataBANK0
   356  07E2  00FE               	movwf	btemp
   357  07E3  3086               	movlw	low __pidataBANK0
   358  07E4  00FF               	movwf	btemp+1
   359  07E5  3037               	movlw	low __pdataBANK0
   360  07E6  0084               	movwf	4
   361  07E7  120A  118A  2577  120A  118A  	fcall	init_ram0
   362                           
   363                           ; Initialize objects allocated to COMMON
   364  07EC  120A  118A  2555  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   365  07F1  00FD               	movwf	__pdataCOMMON& (0+127)
   366                           
   367                           ; Clear objects allocated to BANK0
   368  07F2  01CD               	clrf	__pbssBANK0& (0+127)
   369  07F3  01CE               	clrf	(__pbssBANK0+1)& (0+127)
   370  07F4  01CF               	clrf	(__pbssBANK0+2)& (0+127)
   371  07F5  01D0               	clrf	(__pbssBANK0+3)& (0+127)
   372  07F6  01D1               	clrf	(__pbssBANK0+4)& (0+127)
   373  07F7  01D2               	clrf	(__pbssBANK0+5)& (0+127)
   374  07F8  01D3               	clrf	(__pbssBANK0+6)& (0+127)
   375  07F9  01D4               	clrf	(__pbssBANK0+7)& (0+127)
   376  07FA  01D5               	clrf	(__pbssBANK0+8)& (0+127)
   377  07FB  01D6               	clrf	(__pbssBANK0+9)& (0+127)
   378  07FC                     end_of_initialization:	
   379                           ;End of C runtime variable initialization code
   380                           
   381  07FC                     __end_of__initialization:	
   382  07FC  0183               	clrf	3
   383  07FD  120A  118A  2DC6   	ljmp	_main	;jump to C main() function
   384                           
   385                           	psect	dataCOMMON
   386  007D                     __pdataCOMMON:	
   387  007D                     read_digital_keypad@once:	
   388  007D                     	ds	1
   389                           
   390                           	psect	bssBANK0
   391  004D                     __pbssBANK0:	
   392  004D                     display@wait:	
   393  004D                     	ds	2
   394  004F                     _count:	
   395  004F                     	ds	2
   396  0051                     _RIGHT:	
   397  0051                     	ds	2
   398  0053                     _i:	
   399  0053                     	ds	2
   400  0055                     _STOP:	
   401  0055                     	ds	2
   402                           
   403                           	psect	dataBANK0
   404  0037                     __pdataBANK0:	
   405  0037                     main@F870:	
   406  0037                     	ds	12
   407  0043                     _l:	
   408  0043                     	ds	2
   409  0045                     _k:	
   410  0045                     	ds	2
   411  0047                     _j:	
   412  0047                     	ds	2
   413  0049                     _START:	
   414  0049                     	ds	2
   415  004B                     _LEFT:	
   416  004B                     	ds	2
   417                           
   418                           	psect	inittext
   419  0573                     init_fetch0:	
   420                           ;	Called with low address in FSR and high address in W
   421                           
   422  0573  087E               	movf	btemp,w
   423  0574  008A               	movwf	10
   424  0575  087F               	movf	btemp+1,w
   425  0576  0082               	movwf	2
   426  0577                     init_ram0:	
   427                           ;Called with:
   428                           ;	high address of idata address in btemp 
   429                           ;	low address of idata address in btemp+1 
   430                           ;	low address of data in FSR
   431                           ;	high address + 1 of data in btemp-1
   432                           
   433  0577  120A  118A  2573  120A  118A  	fcall	init_fetch0
   434  057C  0080               	movwf	0
   435  057D  0A84               	incf	4,f
   436  057E  0804               	movf	4,w
   437  057F  067D               	xorwf	btemp+-1,w
   438  0580  1903               	btfsc	3,2
   439  0581  3400               	retlw	0
   440  0582  0AFF               	incf	btemp+1,f
   441  0583  1903               	btfsc	3,2
   442  0584  0AFE               	incf	btemp,f
   443  0585  2D77               	goto	init_ram0
   444                           
   445                           	psect	cstackCOMMON
   446  0070                     __pcstackCOMMON:	
   447  0070                     ?_init_digital_keypad:	
   448  0070                     ??_init_digital_keypad:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_read_digital_keypad:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ??_read_digital_keypad:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ?_init_ssd:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ??_init_ssd:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_display:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ??_display:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ?_init_config:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ??_init_config:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?_main:	
   476                           ; 1 bytes @ 0x0
   477                           
   478                           
   479                           ; 1 bytes @ 0x0
   480  0070                     	ds	1
   481  0071                     read_digital_keypad@mode:	
   482                           
   483                           ; 1 bytes @ 0x1
   484  0071                     	ds	2
   485  0073                     display@i:	
   486                           
   487                           ; 2 bytes @ 0x3
   488  0073                     	ds	2
   489  0075                     display@i_41:	
   490                           
   491                           ; 2 bytes @ 0x5
   492  0075                     	ds	2
   493  0077                     display@data:	
   494                           
   495                           ; 1 bytes @ 0x7
   496  0077                     	ds	1
   497  0078                     display@digit:	
   498                           
   499                           ; 1 bytes @ 0x8
   500  0078                     	ds	1
   501  0079                     ??_main:	
   502                           
   503                           ; 1 bytes @ 0x9
   504  0079                     	ds	4
   505                           
   506                           	psect	cstackBANK0
   507  0020                     __pcstackBANK0:	
   508  0020                     main@digit:	
   509                           
   510                           ; 12 bytes @ 0x0
   511  0020                     	ds	14
   512  002E                     main@ssd:	
   513                           
   514                           ; 4 bytes @ 0xE
   515  002E                     	ds	4
   516  0032                     main@prev_count:	
   517                           
   518                           ; 2 bytes @ 0x12
   519  0032                     	ds	2
   520  0034                     main@count1:	
   521                           
   522                           ; 2 bytes @ 0x14
   523  0034                     	ds	2
   524  0036                     main@key:	
   525                           
   526                           ; 1 bytes @ 0x16
   527  0036                     	ds	1
   528                           
   529                           	psect	maintext
   530  05C6                     __pmaintext:	
   531 ;;
   532 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   533 ;;
   534 ;; *************** function _main *****************
   535 ;; Defined at:
   536 ;;		line 24 in file "main.c"
   537 ;; Parameters:    Size  Location     Type
   538 ;;		None
   539 ;; Auto vars:     Size  Location     Type
   540 ;;  digit          12    0[BANK0 ] unsigned char [12]
   541 ;;  ssd             4   14[BANK0 ] unsigned char [4]
   542 ;;  count1          2   20[BANK0 ] int 
   543 ;;  prev_count      2   18[BANK0 ] unsigned int 
   544 ;;  wait            2    0        unsigned int 
   545 ;;  key             1   22[BANK0 ] unsigned char 
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   550 ;; Tracked objects:
   551 ;;		On entry : B00/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   555 ;;      Params:         0       0       0       0       0
   556 ;;      Locals:         0      23       0       0       0
   557 ;;      Temps:          4       0       0       0       0
   558 ;;      Totals:         4      23       0       0       0
   559 ;;Total ram usage:       27 bytes
   560 ;; Hardware stack levels required when called:    2
   561 ;; This function calls:
   562 ;;		_display
   563 ;;		_init_config
   564 ;;		_read_digital_keypad
   565 ;; This function is called by:
   566 ;;		Startup code after reset
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           
   571                           ;psect for function _main
   572  05C6                     _main:	
   573  05C6                     l1030:	
   574                           ;incstack = 0
   575                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   576                           
   577                           
   578                           ;main.c: 25:             LEFT = 1;
   579  05C6  1283               	bcf	3,5	;RP0=0, select bank0
   580  05C7  1303               	bcf	3,6	;RP1=0, select bank0
   581  05C8  01B4               	clrf	main@count1
   582  05C9  01B5               	clrf	main@count1+1
   583  05CA                     l1032:	
   584                           
   585                           ;main.c: 26:             RIGHT = 0;;main.c: 27:             STOP = 0;;main.c: 28:       
      +                                START = 1;
   586  05CA  3020               	movlw	main@digit& (0+255)
   587  05CB  0084               	movwf	4
   588  05CC  3037               	movlw	low main@F870
   589  05CD  00F9               	movwf	??_main
   590  05CE  0804               	movf	4,w
   591  05CF  00FA               	movwf	??_main+1
   592  05D0  300C               	movlw	12
   593  05D1  00FB               	movwf	??_main+2
   594  05D2                     u480:	
   595  05D2  0879               	movf	??_main,w
   596  05D3  0084               	movwf	4
   597  05D4  1383               	bcf	3,7	;select IRP bank0
   598  05D5  0800               	movf	0,w
   599  05D6  00FC               	movwf	??_main+3
   600  05D7  0AF9               	incf	??_main,f
   601  05D8  087A               	movf	??_main+1,w
   602  05D9  0084               	movwf	4
   603  05DA  087C               	movf	??_main+3,w
   604  05DB  0080               	movwf	0
   605  05DC  0AFA               	incf	??_main+1,f
   606  05DD  0BFB               	decfsz	??_main+2,f
   607  05DE  2DD2               	goto	u480
   608  05DF                     l1034:	
   609                           
   610                           ;main.c: 29:             count1= 0;
   611  05DF  3001               	movlw	1
   612  05E0  00B2               	movwf	main@prev_count
   613  05E1  3000               	movlw	0
   614  05E2  00B3               	movwf	main@prev_count+1
   615  05E3                     l1036:	
   616  05E3                     l1038:	
   617                           
   618                           ;main.c: 31:         else if(key == 0x3D)
   619  05E3  120A  118A  255C  120A  118A  	fcall	_init_config
   620  05E8                     l1040:	
   621                           
   622                           ;main.c: 34:             RIGHT = 1;
   623  05E8  3001               	movlw	1
   624  05E9  120A  118A  259C  120A  118A  	fcall	_read_digital_keypad
   625  05EE  00F9               	movwf	??_main
   626  05EF  0879               	movf	??_main,w
   627  05F0  1283               	bcf	3,5	;RP0=0, select bank0
   628  05F1  1303               	bcf	3,6	;RP1=0, select bank0
   629  05F2  00B6               	movwf	main@key
   630  05F3                     l1042:	
   631                           
   632                           ;main.c: 35:             STOP = 0;
   633  05F3  303E               	movlw	62
   634  05F4  0636               	xorwf	main@key,w
   635  05F5  1D03               	btfss	3,2
   636  05F6  2DF8               	goto	u491
   637  05F7  2DF9               	goto	u490
   638  05F8                     u491:	
   639  05F8  2E08               	goto	l1052
   640  05F9                     u490:	
   641  05F9                     l1044:	
   642                           
   643                           ;main.c: 36:             START = 0;;main.c: 37:             count1=0;
   644  05F9  3001               	movlw	1
   645  05FA  00CB               	movwf	_LEFT
   646  05FB  3000               	movlw	0
   647  05FC  00CC               	movwf	_LEFT+1
   648  05FD                     l1046:	
   649                           
   650                           ;main.c: 38:         }
   651  05FD  01D1               	clrf	_RIGHT
   652  05FE  01D2               	clrf	_RIGHT+1
   653  05FF                     l1048:	
   654                           
   655                           ;main.c: 39:         else if(key == 0x3B)
   656  05FF  01D5               	clrf	_STOP
   657  0600  01D6               	clrf	_STOP+1
   658                           
   659                           ;main.c: 40:         {
   660  0601  3001               	movlw	1
   661  0602  00C9               	movwf	_START
   662  0603  3000               	movlw	0
   663  0604  00CA               	movwf	_START+1
   664  0605                     l1050:	
   665                           
   666                           ;main.c: 41:             count1++;
   667  0605  01B4               	clrf	main@count1
   668  0606  01B5               	clrf	main@count1+1
   669                           
   670                           ;main.c: 42:             STOP = 1;
   671  0607  2E4A               	goto	l109
   672  0608                     l1052:	
   673  0608  303D               	movlw	61
   674  0609  0636               	xorwf	main@key,w
   675  060A  1D03               	btfss	3,2
   676  060B  2E0D               	goto	u501
   677  060C  2E0E               	goto	u500
   678  060D                     u501:	
   679  060D  2E19               	goto	l1064
   680  060E                     u500:	
   681  060E                     l1054:	
   682                           
   683                           ;main.c: 44:             if(count1 == 2);main.c: 45:             {
   684  060E  01CB               	clrf	_LEFT
   685  060F  01CC               	clrf	_LEFT+1
   686  0610                     l1056:	
   687                           
   688                           ;main.c: 46:                 if(LEFT == 1)
   689  0610  3001               	movlw	1
   690  0611  00D1               	movwf	_RIGHT
   691  0612  3000               	movlw	0
   692  0613  00D2               	movwf	_RIGHT+1
   693  0614                     l1058:	
   694                           
   695                           ;main.c: 47:                 {
   696  0614  01D5               	clrf	_STOP
   697  0615  01D6               	clrf	_STOP+1
   698  0616                     l1060:	
   699                           
   700                           ;main.c: 48:                   START = 0;
   701  0616  01C9               	clrf	_START
   702  0617  01CA               	clrf	_START+1
   703  0618  2E05               	goto	l1050
   704  0619                     l1064:	
   705  0619  303B               	movlw	59
   706  061A  0636               	xorwf	main@key,w
   707  061B  1D03               	btfss	3,2
   708  061C  2E1E               	goto	u511
   709  061D  2E1F               	goto	u510
   710  061E                     u511:	
   711  061E  2E4A               	goto	l109
   712  061F                     u510:	
   713  061F                     l1066:	
   714                           
   715                           ;main.c: 52:                 {;main.c: 53:                     START = 2;
   716  061F  3001               	movlw	1
   717  0620  07B4               	addwf	main@count1,f
   718  0621  1803               	skipnc
   719  0622  0AB5               	incf	main@count1+1,f
   720  0623  3000               	movlw	0
   721  0624  07B5               	addwf	main@count1+1,f
   722                           
   723                           ;main.c: 54:                     STOP = 0;
   724  0625  3001               	movlw	1
   725  0626  00D5               	movwf	_STOP
   726  0627  3000               	movlw	0
   727  0628  00D6               	movwf	_STOP+1
   728  0629                     l1068:	
   729                           
   730                           ;main.c: 55:                 }
   731  0629  01C9               	clrf	_START
   732  062A  01CA               	clrf	_START+1
   733  062B                     l1070:	
   734                           
   735                           ;main.c: 56:             count1 = 0;
   736  062B  3002               	movlw	2
   737  062C  0634               	xorwf	main@count1,w
   738  062D  0435               	iorwf	main@count1+1,w
   739  062E  1D03               	btfss	3,2
   740  062F  2E31               	goto	u521
   741  0630  2E32               	goto	u520
   742  0631                     u521:	
   743  0631  2E4A               	goto	l109
   744  0632                     u520:	
   745  0632                     l1072:	
   746                           
   747                           ;main.c: 57:             };main.c: 58:         }
   748  0632  034B               	decf	_LEFT,w
   749  0633  044C               	iorwf	_LEFT+1,w
   750  0634  1D03               	btfss	3,2
   751  0635  2E37               	goto	u531
   752  0636  2E38               	goto	u530
   753  0637                     u531:	
   754  0637  2E3D               	goto	l1076
   755  0638                     u530:	
   756  0638                     l1074:	
   757                           
   758                           ;main.c: 59:         if(prev_count != count);main.c: 60:         {
   759  0638  01C9               	clrf	_START
   760  0639  01CA               	clrf	_START+1
   761                           
   762                           ;main.c: 61:         ssd[0] = digit[i];
   763  063A  01D5               	clrf	_STOP
   764  063B  01D6               	clrf	_STOP+1
   765                           
   766                           ;main.c: 62:         ssd[1] = digit[j];
   767  063C  2E05               	goto	l1050
   768  063D                     l1076:	
   769  063D  0351               	decf	_RIGHT,w
   770  063E  0452               	iorwf	_RIGHT+1,w
   771  063F  1D03               	btfss	3,2
   772  0640  2E42               	goto	u541
   773  0641  2E43               	goto	u540
   774  0642                     u541:	
   775  0642  2E05               	goto	l1050
   776  0643                     u540:	
   777  0643                     l1078:	
   778                           
   779                           ;main.c: 64:         ssd[3] = digit[l];;main.c: 65:         prev_count = count;
   780  0643  3002               	movlw	2
   781  0644  00C9               	movwf	_START
   782  0645  3000               	movlw	0
   783  0646  00CA               	movwf	_START+1
   784  0647                     l1080:	
   785                           
   786                           ;main.c: 66:         }
   787  0647  01D5               	clrf	_STOP
   788  0648  01D6               	clrf	_STOP+1
   789  0649  2E05               	goto	l1050
   790  064A                     l109:	
   791                           
   792                           ;main.c: 71:             count = 0;
   793  064A  0850               	movf	_count+1,w
   794  064B  0633               	xorwf	main@prev_count+1,w
   795  064C  1D03               	skipz
   796  064D  2E50               	goto	u555
   797  064E  084F               	movf	_count,w
   798  064F  0632               	xorwf	main@prev_count,w
   799  0650                     u555:	
   800  0650  1903               	skipnz
   801  0651  2E53               	goto	u551
   802  0652  2E54               	goto	u550
   803  0653                     u551:	
   804  0653  2E75               	goto	l1088
   805  0654                     u550:	
   806  0654                     l1084:	
   807                           
   808                           ;main.c: 72:         };main.c: 73: 
   809  0654  0853               	movf	_i,w
   810  0655  3E20               	addlw	(low (main@digit| 0))& (0+255)
   811  0656  0084               	movwf	4
   812  0657  1383               	bcf	3,7	;select IRP bank0
   813  0658  0800               	movf	0,w
   814  0659  00F9               	movwf	??_main
   815  065A  0879               	movf	??_main,w
   816  065B  00AE               	movwf	main@ssd
   817                           
   818                           ;main.c: 74:     }
   819  065C  0847               	movf	_j,w
   820  065D  3E20               	addlw	(low (main@digit| 0))& (0+255)
   821  065E  0084               	movwf	4
   822  065F  0800               	movf	0,w
   823  0660  00F9               	movwf	??_main
   824  0661  0879               	movf	??_main,w
   825  0662  00AF               	movwf	main@ssd+1
   826                           
   827                           ;main.c: 75:     return;
   828  0663  0845               	movf	_k,w
   829  0664  3E20               	addlw	(low (main@digit| 0))& (0+255)
   830  0665  0084               	movwf	4
   831  0666  0800               	movf	0,w
   832  0667  00F9               	movwf	??_main
   833  0668  0879               	movf	??_main,w
   834  0669  00B0               	movwf	main@ssd+2
   835                           
   836                           ;main.c: 76: }
   837  066A  0843               	movf	_l,w
   838  066B  3E20               	addlw	(low (main@digit| 0))& (0+255)
   839  066C  0084               	movwf	4
   840  066D  0800               	movf	0,w
   841  066E  00F9               	movwf	??_main
   842  066F  0879               	movf	??_main,w
   843  0670  00B1               	movwf	main@ssd+3
   844  0671                     l1086:	
   845  0671  0850               	movf	_count+1,w
   846  0672  00B3               	movwf	main@prev_count+1
   847  0673  084F               	movf	_count,w
   848  0674  00B2               	movwf	main@prev_count
   849  0675                     l1088:	
   850  0675  302E               	movlw	(low (main@ssd| 0))& (0+255)
   851  0676  120A  118A  268A  120A  118A  	fcall	_display
   852  067B                     l1090:	
   853  067B  300A               	movlw	10
   854  067C  1283               	bcf	3,5	;RP0=0, select bank0
   855  067D  1303               	bcf	3,6	;RP1=0, select bank0
   856  067E  064F               	xorwf	_count,w
   857  067F  0450               	iorwf	_count+1,w
   858  0680  1D03               	btfss	3,2
   859  0681  2E83               	goto	u561
   860  0682  2E84               	goto	u560
   861  0683                     u561:	
   862  0683  2DE8               	goto	l1040
   863  0684                     u560:	
   864  0684                     l1092:	
   865  0684  01CF               	clrf	_count
   866  0685  01D0               	clrf	_count+1
   867  0686  2DE8               	goto	l1040
   868  0687  120A  118A  2800   	ljmp	start
   869  068A                     __end_of_main:	
   870                           
   871                           	psect	text1
   872  059C                     __ptext1:	
   873 ;; *************** function _read_digital_keypad *****************
   874 ;; Defined at:
   875 ;;		line 11 in file "Digital_keypad.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  mode            1    wreg     unsigned char 
   878 ;; Auto vars:     Size  Location     Type
   879 ;;  mode            1    1[COMMON] unsigned char 
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      unsigned char 
   882 ;; Registers used:
   883 ;;		wreg, status,2, status,0
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   889 ;;      Params:         0       0       0       0       0
   890 ;;      Locals:         1       0       0       0       0
   891 ;;      Temps:          1       0       0       0       0
   892 ;;      Totals:         2       0       0       0       0
   893 ;;Total ram usage:        2 bytes
   894 ;; Hardware stack levels used:    1
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_main
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           
   903                           ;psect for function _read_digital_keypad
   904  059C                     _read_digital_keypad:	
   905                           
   906                           ;incstack = 0
   907                           ; Regs used in _read_digital_keypad: [wreg+status,2+status,0]
   908                           ;read_digital_keypad@mode stored from wreg
   909  059C  00F1               	movwf	read_digital_keypad@mode
   910  059D                     l1002:	
   911                           
   912                           ;Digital_keypad.c: 11: unsigned char read_digital_keypad(unsigned char mode);Digital_key
      +                          pad.c: 12: {;Digital_keypad.c: 13:     static unsigned char once = 1;;Digital_keypad.c: 
      +                          14:     if(mode == 0)
   913  059D  0871               	movf	read_digital_keypad@mode,w
   914  059E  1D03               	btfss	3,2
   915  059F  2DA1               	goto	u441
   916  05A0  2DA2               	goto	u440
   917  05A1                     u441:	
   918  05A1  2DA7               	goto	l1010
   919  05A2                     u440:	
   920  05A2                     l1004:	
   921                           
   922                           ;Digital_keypad.c: 15:     {;Digital_keypad.c: 16:         return PORTB & 0x3F;
   923  05A2  1283               	bcf	3,5	;RP0=0, select bank0
   924  05A3  1303               	bcf	3,6	;RP1=0, select bank0
   925  05A4  0806               	movf	6,w	;volatile
   926  05A5  393F               	andlw	63
   927  05A6  2DC5               	goto	l134
   928  05A7                     l1010:	
   929                           
   930                           ;Digital_keypad.c: 19:     {;Digital_keypad.c: 20:         if(((PORTB & 0x3F) != 0x3F) &
      +                          & once)
   931  05A7  303F               	movlw	63
   932  05A8  1283               	bcf	3,5	;RP0=0, select bank0
   933  05A9  1303               	bcf	3,6	;RP1=0, select bank0
   934  05AA  0506               	andwf	6,w	;volatile
   935  05AB  00F0               	movwf	??_read_digital_keypad
   936  05AC  303F               	movlw	63
   937  05AD  0670               	xorwf	??_read_digital_keypad,w
   938  05AE  1903               	btfsc	3,2
   939  05AF  2DB1               	goto	u451
   940  05B0  2DB2               	goto	u450
   941  05B1                     u451:	
   942  05B1  2DB9               	goto	l1022
   943  05B2                     u450:	
   944  05B2                     l1012:	
   945  05B2  087D               	movf	read_digital_keypad@once,w
   946  05B3  1903               	btfsc	3,2
   947  05B4  2DB6               	goto	u461
   948  05B5  2DB7               	goto	u460
   949  05B6                     u461:	
   950  05B6  2DB9               	goto	l1022
   951  05B7                     u460:	
   952  05B7                     l1014:	
   953                           
   954                           ;Digital_keypad.c: 21:         {;Digital_keypad.c: 22:             once = 0;
   955  05B7  01FD               	clrf	read_digital_keypad@once
   956  05B8  2DA2               	goto	l1004
   957  05B9                     l1022:	
   958  05B9  303F               	movlw	63
   959  05BA  0506               	andwf	6,w	;volatile
   960  05BB  00F0               	movwf	??_read_digital_keypad
   961  05BC  303F               	movlw	63
   962  05BD  0670               	xorwf	??_read_digital_keypad,w
   963  05BE  1D03               	btfss	3,2
   964  05BF  2DC1               	goto	u471
   965  05C0  2DC2               	goto	u470
   966  05C1                     u471:	
   967  05C1  2DC4               	goto	l1026
   968  05C2                     u470:	
   969  05C2                     l1024:	
   970                           
   971                           ;Digital_keypad.c: 27:         {;Digital_keypad.c: 28:             once = 1;
   972  05C2  01FD               	clrf	read_digital_keypad@once
   973  05C3  0AFD               	incf	read_digital_keypad@once,f
   974  05C4                     l1026:	
   975                           
   976                           ;Digital_keypad.c: 33:     return 0x3F;
   977  05C4  303F               	movlw	63
   978  05C5                     l134:	
   979  05C5  0008               	return
   980  05C6                     __end_of_read_digital_keypad:	
   981                           
   982                           	psect	text2
   983  055C                     __ptext2:	
   984 ;; *************** function _init_config *****************
   985 ;; Defined at:
   986 ;;		line 17 in file "main.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, status,2, status,0, pclath, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1000 ;;      Params:         0       0       0       0       0
  1001 ;;      Locals:         0       0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0
  1003 ;;      Totals:         0       0       0       0       0
  1004 ;;Total ram usage:        0 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; Hardware stack levels required when called:    1
  1007 ;; This function calls:
  1008 ;;		_init_digital_keypad
  1009 ;;		_init_ssd
  1010 ;; This function is called by:
  1011 ;;		_main
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           
  1016                           ;psect for function _init_config
  1017  055C                     _init_config:	
  1018  055C                     l1000:	
  1019                           ;incstack = 0
  1020                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  1021                           
  1022                           
  1023                           ;main.c: 19:     init_config();
  1024  055C  120A  118A  2567  120A  118A  	fcall	_init_ssd
  1025                           
  1026                           ;main.c: 21:     while (1) {
  1027  0561  120A  118A  2556  120A  118A  	fcall	_init_digital_keypad
  1028  0566                     l100:	
  1029  0566  0008               	return
  1030  0567                     __end_of_init_config:	
  1031                           
  1032                           	psect	text3
  1033  0567                     __ptext3:	
  1034 ;; *************** function _init_ssd *****************
  1035 ;; Defined at:
  1036 ;;		line 4 in file "SSD.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  1    wreg      void 
  1043 ;; Registers used:
  1044 ;;		wreg, status,2
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1050 ;;      Params:         0       0       0       0       0
  1051 ;;      Locals:         0       0       0       0       0
  1052 ;;      Temps:          0       0       0       0       0
  1053 ;;      Totals:         0       0       0       0       0
  1054 ;;Total ram usage:        0 bytes
  1055 ;; Hardware stack levels used:    1
  1056 ;; This function calls:
  1057 ;;		Nothing
  1058 ;; This function is called by:
  1059 ;;		_init_config
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           
  1064                           ;psect for function _init_ssd
  1065  0567                     _init_ssd:	
  1066  0567                     l894:	
  1067                           ;incstack = 0
  1068                           ; Regs used in _init_ssd: [wreg+status,2]
  1069                           
  1070                           
  1071                           ;SSD.c: 7:     TRISD = 0x00;
  1072  0567  1683               	bsf	3,5	;RP0=1, select bank1
  1073  0568  1303               	bcf	3,6	;RP1=0, select bank1
  1074  0569  0188               	clrf	8	;volatile
  1075  056A                     l896:	
  1076                           
  1077                           ;SSD.c: 10:     TRISA = TRISA & 0xC3;
  1078  056A  0805               	movf	5,w	;volatile
  1079  056B  39C3               	andlw	195
  1080  056C  0085               	movwf	5	;volatile
  1081  056D                     l898:	
  1082                           
  1083                           ;SSD.c: 13:     PORTA = PORTA & 0xC3;
  1084  056D  1283               	bcf	3,5	;RP0=0, select bank0
  1085  056E  1303               	bcf	3,6	;RP1=0, select bank0
  1086  056F  0805               	movf	5,w	;volatile
  1087  0570  39C3               	andlw	195
  1088  0571  0085               	movwf	5	;volatile
  1089  0572                     l29:	
  1090  0572  0008               	return
  1091  0573                     __end_of_init_ssd:	
  1092                           
  1093                           	psect	text4
  1094  0556                     __ptext4:	
  1095 ;; *************** function _init_digital_keypad *****************
  1096 ;; Defined at:
  1097 ;;		line 5 in file "Digital_keypad.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;		None
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;		None
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  1    wreg      void 
  1104 ;; Registers used:
  1105 ;;		wreg, status,2
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1111 ;;      Params:         0       0       0       0       0
  1112 ;;      Locals:         0       0       0       0       0
  1113 ;;      Temps:          0       0       0       0       0
  1114 ;;      Totals:         0       0       0       0       0
  1115 ;;Total ram usage:        0 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; This function calls:
  1118 ;;		Nothing
  1119 ;; This function is called by:
  1120 ;;		_init_config
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           
  1125                           ;psect for function _init_digital_keypad
  1126  0556                     _init_digital_keypad:	
  1127  0556                     l900:	
  1128                           ;incstack = 0
  1129                           ; Regs used in _init_digital_keypad: [wreg+status,2]
  1130                           
  1131                           
  1132                           ;Digital_keypad.c: 8:     TRISB = TRISB | 0x3F;
  1133  0556  1683               	bsf	3,5	;RP0=1, select bank1
  1134  0557  1303               	bcf	3,6	;RP1=0, select bank1
  1135  0558  0806               	movf	6,w	;volatile
  1136  0559  383F               	iorlw	63
  1137  055A  0086               	movwf	6	;volatile
  1138  055B                     l128:	
  1139  055B  0008               	return
  1140  055C                     __end_of_init_digital_keypad:	
  1141                           
  1142                           	psect	text5
  1143  068A                     __ptext5:	
  1144 ;; *************** function _display *****************
  1145 ;; Defined at:
  1146 ;;		line 17 in file "SSD.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;  data            1    wreg     PTR unsigned char 
  1149 ;;		 -> main@ssd(4), 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  data            1    7[COMMON] PTR unsigned char 
  1152 ;;		 -> main@ssd(4), 
  1153 ;;  i               2    5[COMMON] unsigned int 
  1154 ;;  i               2    3[COMMON] unsigned int 
  1155 ;;  digit           1    8[COMMON] unsigned char 
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1165 ;;      Params:         0       0       0       0       0
  1166 ;;      Locals:         6       0       0       0       0
  1167 ;;      Temps:          3       0       0       0       0
  1168 ;;      Totals:         9       0       0       0       0
  1169 ;;Total ram usage:        9 bytes
  1170 ;; Hardware stack levels used:    1
  1171 ;; This function calls:
  1172 ;;		Nothing
  1173 ;; This function is called by:
  1174 ;;		_main
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           
  1179                           ;psect for function _display
  1180  068A                     _display:	
  1181                           
  1182                           ;incstack = 0
  1183                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0]
  1184                           ;display@data stored from wreg
  1185  068A  00F7               	movwf	display@data
  1186  068B                     l902:	
  1187                           
  1188                           ;SSD.c: 17: void display(unsigned char data[]);SSD.c: 18: {;SSD.c: 19:     unsigned char
      +                           digit;;SSD.c: 20:     static unsigned int wait= 0;;SSD.c: 21:        if(wait == 300)
  1189  068B  302C               	movlw	44
  1190  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1191  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1192  068E  064D               	xorwf	display@wait,w
  1193  068F  1D03               	skipz
  1194  0690  2E95               	goto	u171
  1195  0691  034E               	decf	display@wait+1,w
  1196  0692  1D03               	btfss	3,2
  1197  0693  2E95               	goto	u171
  1198  0694  2E96               	goto	u170
  1199  0695                     u171:	
  1200  0695  2F40               	goto	l34
  1201  0696                     u170:	
  1202  0696                     l904:	
  1203                           
  1204                           ;SSD.c: 22:         {;SSD.c: 23:            wait = 0;
  1205  0696  01CD               	clrf	display@wait
  1206  0697  01CE               	clrf	display@wait+1
  1207  0698                     l906:	
  1208                           
  1209                           ;SSD.c: 24:            if((LEFT == 1 && STOP == 0)|| START == 1)
  1210  0698  034B               	decf	_LEFT,w
  1211  0699  044C               	iorwf	_LEFT+1,w
  1212  069A  1D03               	btfss	3,2
  1213  069B  2E9D               	goto	u181
  1214  069C  2E9E               	goto	u180
  1215  069D                     u181:	
  1216  069D  2EA4               	goto	l910
  1217  069E                     u180:	
  1218  069E                     l908:	
  1219  069E  0855               	movf	_STOP,w
  1220  069F  0456               	iorwf	_STOP+1,w
  1221  06A0  1903               	btfsc	3,2
  1222  06A1  2EA3               	goto	u191
  1223  06A2  2EA4               	goto	u190
  1224  06A3                     u191:	
  1225  06A3  2EAA               	goto	l912
  1226  06A4                     u190:	
  1227  06A4                     l910:	
  1228  06A4  0349               	decf	_START,w
  1229  06A5  044A               	iorwf	_START+1,w
  1230  06A6  1D03               	btfss	3,2
  1231  06A7  2EA9               	goto	u201
  1232  06A8  2EAA               	goto	u200
  1233  06A9                     u201:	
  1234  06A9  2EE7               	goto	l930
  1235  06AA                     u200:	
  1236  06AA                     l912:	
  1237                           
  1238                           ;SSD.c: 25:            {;SSD.c: 26:            i++;
  1239  06AA  3001               	movlw	1
  1240  06AB  07D3               	addwf	_i,f
  1241  06AC  1803               	skipnc
  1242  06AD  0AD4               	incf	_i+1,f
  1243  06AE  3000               	movlw	0
  1244  06AF  07D4               	addwf	_i+1,f
  1245                           
  1246                           ;SSD.c: 27:            j++;
  1247  06B0  3001               	movlw	1
  1248  06B1  07C7               	addwf	_j,f
  1249  06B2  1803               	skipnc
  1250  06B3  0AC8               	incf	_j+1,f
  1251  06B4  3000               	movlw	0
  1252  06B5  07C8               	addwf	_j+1,f
  1253                           
  1254                           ;SSD.c: 28:            k++;
  1255  06B6  3001               	movlw	1
  1256  06B7  07C5               	addwf	_k,f
  1257  06B8  1803               	skipnc
  1258  06B9  0AC6               	incf	_k+1,f
  1259  06BA  3000               	movlw	0
  1260  06BB  07C6               	addwf	_k+1,f
  1261                           
  1262                           ;SSD.c: 29:            l++;
  1263  06BC  3001               	movlw	1
  1264  06BD  07C3               	addwf	_l,f
  1265  06BE  1803               	skipnc
  1266  06BF  0AC4               	incf	_l+1,f
  1267  06C0  3000               	movlw	0
  1268  06C1  07C4               	addwf	_l+1,f
  1269  06C2                     l914:	
  1270                           
  1271                           ;SSD.c: 30:           if(i == 12)
  1272  06C2  300C               	movlw	12
  1273  06C3  0653               	xorwf	_i,w
  1274  06C4  0454               	iorwf	_i+1,w
  1275  06C5  1D03               	btfss	3,2
  1276  06C6  2EC8               	goto	u211
  1277  06C7  2EC9               	goto	u210
  1278  06C8                     u211:	
  1279  06C8  2ECB               	goto	l918
  1280  06C9                     u210:	
  1281  06C9                     l916:	
  1282                           
  1283                           ;SSD.c: 31:            {;SSD.c: 32:                i = 0;
  1284  06C9  01D3               	clrf	_i
  1285  06CA  01D4               	clrf	_i+1
  1286  06CB                     l918:	
  1287                           
  1288                           ;SSD.c: 34:            if(j == 12)
  1289  06CB  300C               	movlw	12
  1290  06CC  0647               	xorwf	_j,w
  1291  06CD  0448               	iorwf	_j+1,w
  1292  06CE  1D03               	btfss	3,2
  1293  06CF  2ED1               	goto	u221
  1294  06D0  2ED2               	goto	u220
  1295  06D1                     u221:	
  1296  06D1  2ED4               	goto	l922
  1297  06D2                     u220:	
  1298  06D2                     l920:	
  1299                           
  1300                           ;SSD.c: 35:            {;SSD.c: 36:                j = 0;
  1301  06D2  01C7               	clrf	_j
  1302  06D3  01C8               	clrf	_j+1
  1303  06D4                     l922:	
  1304                           
  1305                           ;SSD.c: 38:            if(k == 12)
  1306  06D4  300C               	movlw	12
  1307  06D5  0645               	xorwf	_k,w
  1308  06D6  0446               	iorwf	_k+1,w
  1309  06D7  1D03               	btfss	3,2
  1310  06D8  2EDA               	goto	u231
  1311  06D9  2EDB               	goto	u230
  1312  06DA                     u231:	
  1313  06DA  2EDD               	goto	l926
  1314  06DB                     u230:	
  1315  06DB                     l924:	
  1316                           
  1317                           ;SSD.c: 39:            {;SSD.c: 40:                k = 0;
  1318  06DB  01C5               	clrf	_k
  1319  06DC  01C6               	clrf	_k+1
  1320  06DD                     l926:	
  1321                           
  1322                           ;SSD.c: 42:            if(l == 12)
  1323  06DD  300C               	movlw	12
  1324  06DE  0643               	xorwf	_l,w
  1325  06DF  0444               	iorwf	_l+1,w
  1326  06E0  1D03               	btfss	3,2
  1327  06E1  2EE3               	goto	u241
  1328  06E2  2EE4               	goto	u240
  1329  06E3                     u241:	
  1330  06E3  2F3A               	goto	l44
  1331  06E4                     u240:	
  1332  06E4                     l928:	
  1333                           
  1334                           ;SSD.c: 43:            {;SSD.c: 44:                l = 0;
  1335  06E4  01C3               	clrf	_l
  1336  06E5  01C4               	clrf	_l+1
  1337  06E6  2F3A               	goto	l44
  1338  06E7                     l930:	
  1339  06E7  0351               	decf	_RIGHT,w
  1340  06E8  0452               	iorwf	_RIGHT+1,w
  1341  06E9  1D03               	btfss	3,2
  1342  06EA  2EEC               	goto	u251
  1343  06EB  2EED               	goto	u250
  1344  06EC                     u251:	
  1345  06EC  2EF3               	goto	l934
  1346  06ED                     u250:	
  1347  06ED                     l932:	
  1348  06ED  0855               	movf	_STOP,w
  1349  06EE  0456               	iorwf	_STOP+1,w
  1350  06EF  1903               	btfsc	3,2
  1351  06F0  2EF2               	goto	u261
  1352  06F1  2EF3               	goto	u260
  1353  06F2                     u261:	
  1354  06F2  2EFA               	goto	l936
  1355  06F3                     u260:	
  1356  06F3                     l934:	
  1357  06F3  3002               	movlw	2
  1358  06F4  0649               	xorwf	_START,w
  1359  06F5  044A               	iorwf	_START+1,w
  1360  06F6  1D03               	btfss	3,2
  1361  06F7  2EF9               	goto	u271
  1362  06F8  2EFA               	goto	u270
  1363  06F9                     u271:	
  1364  06F9  2F3A               	goto	l44
  1365  06FA                     u270:	
  1366  06FA                     l936:	
  1367                           
  1368                           ;SSD.c: 48:            {;SSD.c: 49:            if(i == 0)
  1369  06FA  0853               	movf	_i,w
  1370  06FB  0454               	iorwf	_i+1,w
  1371  06FC  1D03               	btfss	3,2
  1372  06FD  2EFF               	goto	u281
  1373  06FE  2F00               	goto	u280
  1374  06FF                     u281:	
  1375  06FF  2F04               	goto	l940
  1376  0700                     u280:	
  1377  0700                     l938:	
  1378                           
  1379                           ;SSD.c: 50:            {;SSD.c: 51:                i = 12;
  1380  0700  300C               	movlw	12
  1381  0701  00D3               	movwf	_i
  1382  0702  3000               	movlw	0
  1383  0703  00D4               	movwf	_i+1
  1384  0704                     l940:	
  1385                           
  1386                           ;SSD.c: 53:            if(j == 0)
  1387  0704  0847               	movf	_j,w
  1388  0705  0448               	iorwf	_j+1,w
  1389  0706  1D03               	btfss	3,2
  1390  0707  2F09               	goto	u291
  1391  0708  2F0A               	goto	u290
  1392  0709                     u291:	
  1393  0709  2F0E               	goto	l944
  1394  070A                     u290:	
  1395  070A                     l942:	
  1396                           
  1397                           ;SSD.c: 54:            {;SSD.c: 55:                j = 12;
  1398  070A  300C               	movlw	12
  1399  070B  00C7               	movwf	_j
  1400  070C  3000               	movlw	0
  1401  070D  00C8               	movwf	_j+1
  1402  070E                     l944:	
  1403                           
  1404                           ;SSD.c: 57:            if(k == 0)
  1405  070E  0845               	movf	_k,w
  1406  070F  0446               	iorwf	_k+1,w
  1407  0710  1D03               	btfss	3,2
  1408  0711  2F13               	goto	u301
  1409  0712  2F14               	goto	u300
  1410  0713                     u301:	
  1411  0713  2F18               	goto	l948
  1412  0714                     u300:	
  1413  0714                     l946:	
  1414                           
  1415                           ;SSD.c: 58:            {;SSD.c: 59:                k = 12;
  1416  0714  300C               	movlw	12
  1417  0715  00C5               	movwf	_k
  1418  0716  3000               	movlw	0
  1419  0717  00C6               	movwf	_k+1
  1420  0718                     l948:	
  1421                           
  1422                           ;SSD.c: 61:            if(l == 0)
  1423  0718  0843               	movf	_l,w
  1424  0719  0444               	iorwf	_l+1,w
  1425  071A  1D03               	btfss	3,2
  1426  071B  2F1D               	goto	u311
  1427  071C  2F1E               	goto	u310
  1428  071D                     u311:	
  1429  071D  2F22               	goto	l53
  1430  071E                     u310:	
  1431  071E                     l950:	
  1432                           
  1433                           ;SSD.c: 62:            {;SSD.c: 63:                l = 12;
  1434  071E  300C               	movlw	12
  1435  071F  00C3               	movwf	_l
  1436  0720  3000               	movlw	0
  1437  0721  00C4               	movwf	_l+1
  1438  0722                     l53:	
  1439                           ;SSD.c: 64:            }
  1440                           
  1441                           
  1442                           ;SSD.c: 65:                i--;
  1443  0722  3001               	movlw	1
  1444  0723  02D3               	subwf	_i,f
  1445  0724  3000               	movlw	0
  1446  0725  1C03               	skipc
  1447  0726  03D4               	decf	_i+1,f
  1448  0727  02D4               	subwf	_i+1,f
  1449                           
  1450                           ;SSD.c: 66:                j--;
  1451  0728  3001               	movlw	1
  1452  0729  02C7               	subwf	_j,f
  1453  072A  3000               	movlw	0
  1454  072B  1C03               	skipc
  1455  072C  03C8               	decf	_j+1,f
  1456  072D  02C8               	subwf	_j+1,f
  1457                           
  1458                           ;SSD.c: 67:                k--;
  1459  072E  3001               	movlw	1
  1460  072F  02C5               	subwf	_k,f
  1461  0730  3000               	movlw	0
  1462  0731  1C03               	skipc
  1463  0732  03C6               	decf	_k+1,f
  1464  0733  02C6               	subwf	_k+1,f
  1465                           
  1466                           ;SSD.c: 68:                l--;
  1467  0734  3001               	movlw	1
  1468  0735  02C3               	subwf	_l,f
  1469  0736  3000               	movlw	0
  1470  0737  1C03               	skipc
  1471  0738  03C4               	decf	_l+1,f
  1472  0739  02C4               	subwf	_l+1,f
  1473  073A                     l44:	
  1474                           
  1475                           ;SSD.c: 71:           count++;
  1476  073A  3001               	movlw	1
  1477  073B  07CF               	addwf	_count,f
  1478  073C  1803               	skipnc
  1479  073D  0AD0               	incf	_count+1,f
  1480  073E  3000               	movlw	0
  1481  073F  07D0               	addwf	_count+1,f
  1482  0740                     l34:	
  1483                           ;SSD.c: 72:         }
  1484                           
  1485                           
  1486                           ;SSD.c: 73:          wait++;
  1487  0740  3001               	movlw	1
  1488  0741  07CD               	addwf	display@wait,f
  1489  0742  1803               	skipnc
  1490  0743  0ACE               	incf	display@wait+1,f
  1491  0744  3000               	movlw	0
  1492  0745  07CE               	addwf	display@wait+1,f
  1493  0746                     l952:	
  1494                           
  1495                           ;SSD.c: 74:          if(LEFT == 1 || STOP == 1 || START == 1)
  1496  0746  034B               	decf	_LEFT,w
  1497  0747  044C               	iorwf	_LEFT+1,w
  1498  0748  1903               	btfsc	3,2
  1499  0749  2F4B               	goto	u321
  1500  074A  2F4C               	goto	u320
  1501  074B                     u321:	
  1502  074B  2F58               	goto	l958
  1503  074C                     u320:	
  1504  074C                     l954:	
  1505  074C  0355               	decf	_STOP,w
  1506  074D  0456               	iorwf	_STOP+1,w
  1507  074E  1903               	btfsc	3,2
  1508  074F  2F51               	goto	u331
  1509  0750  2F52               	goto	u330
  1510  0751                     u331:	
  1511  0751  2F58               	goto	l958
  1512  0752                     u330:	
  1513  0752                     l956:	
  1514  0752  0349               	decf	_START,w
  1515  0753  044A               	iorwf	_START+1,w
  1516  0754  1D03               	btfss	3,2
  1517  0755  2F57               	goto	u341
  1518  0756  2F58               	goto	u340
  1519  0757                     u341:	
  1520  0757  2F92               	goto	l976
  1521  0758                     u340:	
  1522  0758                     l958:	
  1523                           
  1524                           ;SSD.c: 75:          {;SSD.c: 76:             for(digit = 0;digit < 4;digit++)
  1525  0758  01F8               	clrf	display@digit
  1526  0759                     l964:	
  1527                           
  1528                           ;SSD.c: 77:             {;SSD.c: 78:                 PORTD =data[digit];
  1529  0759  0878               	movf	display@digit,w
  1530  075A  0777               	addwf	display@data,w
  1531  075B  00F0               	movwf	??_display
  1532  075C  0870               	movf	??_display,w
  1533  075D  0084               	movwf	4
  1534  075E  1383               	bcf	3,7	;select IRP bank0
  1535  075F  0800               	movf	0,w
  1536  0760  1283               	bcf	3,5	;RP0=0, select bank0
  1537  0761  1303               	bcf	3,6	;RP1=0, select bank0
  1538  0762  0088               	movwf	8	;volatile
  1539  0763                     l966:	
  1540                           
  1541                           ;SSD.c: 79:                 PORTA = (PORTA & 0xC3) | (0x20 >> digit);
  1542  0763  0A78               	incf	display@digit,w
  1543  0764  00F0               	movwf	??_display
  1544  0765  3020               	movlw	32
  1545  0766  00F1               	movwf	??_display+1
  1546  0767  3000               	movlw	0
  1547  0768  00F2               	movwf	??_display+2
  1548  0769  2F6D               	goto	u354
  1549  076A                     u355:	
  1550  076A  0D72               	rlf	??_display+2,w
  1551  076B  0CF2               	rrf	??_display+2,f
  1552  076C  0CF1               	rrf	??_display+1,f
  1553  076D                     u354:	
  1554  076D  0BF0               	decfsz	??_display,f
  1555  076E  2F6A               	goto	u355
  1556  076F  1283               	bcf	3,5	;RP0=0, select bank0
  1557  0770  1303               	bcf	3,6	;RP1=0, select bank0
  1558  0771  0805               	movf	5,w	;volatile
  1559  0772  39C3               	andlw	195
  1560  0773  0471               	iorwf	??_display+1,w
  1561  0774  0085               	movwf	5	;volatile
  1562  0775                     l968:	
  1563                           
  1564                           ;SSD.c: 80:                 for(unsigned int i = 400;i--;);
  1565  0775  3090               	movlw	144
  1566  0776  00F3               	movwf	display@i
  1567  0777  3001               	movlw	1
  1568  0778  00F4               	movwf	display@i+1
  1569  0779                     l970:	
  1570  0779  3001               	movlw	1
  1571  077A  02F3               	subwf	display@i,f
  1572  077B  3000               	movlw	0
  1573  077C  1C03               	skipc
  1574  077D  03F4               	decf	display@i+1,f
  1575  077E  02F4               	subwf	display@i+1,f
  1576  077F  0A73               	incf	display@i,w
  1577  0780  1D03               	skipz
  1578  0781  2F86               	goto	u361
  1579  0782  0A74               	incf	display@i+1,w
  1580  0783  1D03               	btfss	3,2
  1581  0784  2F86               	goto	u361
  1582  0785  2F87               	goto	u360
  1583  0786                     u361:	
  1584  0786  2F79               	goto	l970
  1585  0787                     u360:	
  1586  0787                     l972:	
  1587                           
  1588                           ;SSD.c: 81:             }
  1589  0787  3001               	movlw	1
  1590  0788  00F0               	movwf	??_display
  1591  0789  0870               	movf	??_display,w
  1592  078A  07F8               	addwf	display@digit,f
  1593  078B                     l974:	
  1594  078B  3004               	movlw	4
  1595  078C  0278               	subwf	display@digit,w
  1596  078D  1C03               	skipc
  1597  078E  2F90               	goto	u371
  1598  078F  2F91               	goto	u370
  1599  0790                     u371:	
  1600  0790  2F59               	goto	l964
  1601  0791                     u370:	
  1602  0791  2FDD               	goto	l71
  1603  0792                     l976:	
  1604  0792  0351               	decf	_RIGHT,w
  1605  0793  0452               	iorwf	_RIGHT+1,w
  1606  0794  1903               	btfsc	3,2
  1607  0795  2F97               	goto	u381
  1608  0796  2F98               	goto	u380
  1609  0797                     u381:	
  1610  0797  2FA4               	goto	l982
  1611  0798                     u380:	
  1612  0798                     l978:	
  1613  0798  0355               	decf	_STOP,w
  1614  0799  0456               	iorwf	_STOP+1,w
  1615  079A  1903               	btfsc	3,2
  1616  079B  2F9D               	goto	u391
  1617  079C  2F9E               	goto	u390
  1618  079D                     u391:	
  1619  079D  2FA4               	goto	l982
  1620  079E                     u390:	
  1621  079E                     l980:	
  1622  079E  0849               	movf	_START,w
  1623  079F  044A               	iorwf	_START+1,w
  1624  07A0  1D03               	btfss	3,2
  1625  07A1  2FA3               	goto	u401
  1626  07A2  2FA4               	goto	u400
  1627  07A3                     u401:	
  1628  07A3  2FDD               	goto	l71
  1629  07A4                     u400:	
  1630  07A4                     l982:	
  1631                           
  1632                           ;SSD.c: 84:          {;SSD.c: 85:             for(digit = 0;digit < 4;digit++)
  1633  07A4  01F8               	clrf	display@digit
  1634  07A5                     l988:	
  1635                           
  1636                           ;SSD.c: 86:             {;SSD.c: 87:                 PORTD =data[digit];
  1637  07A5  0878               	movf	display@digit,w
  1638  07A6  0777               	addwf	display@data,w
  1639  07A7  00F0               	movwf	??_display
  1640  07A8  0870               	movf	??_display,w
  1641  07A9  0084               	movwf	4
  1642  07AA  1383               	bcf	3,7	;select IRP bank0
  1643  07AB  0800               	movf	0,w
  1644  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  1645  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  1646  07AE  0088               	movwf	8	;volatile
  1647  07AF                     l990:	
  1648                           
  1649                           ;SSD.c: 88:                 PORTA = (PORTA & 0xC3) | (0x20 >> digit);
  1650  07AF  0A78               	incf	display@digit,w
  1651  07B0  00F0               	movwf	??_display
  1652  07B1  3020               	movlw	32
  1653  07B2  00F1               	movwf	??_display+1
  1654  07B3  3000               	movlw	0
  1655  07B4  00F2               	movwf	??_display+2
  1656  07B5  2FB9               	goto	u414
  1657  07B6                     u415:	
  1658  07B6  0D72               	rlf	??_display+2,w
  1659  07B7  0CF2               	rrf	??_display+2,f
  1660  07B8  0CF1               	rrf	??_display+1,f
  1661  07B9                     u414:	
  1662  07B9  0BF0               	decfsz	??_display,f
  1663  07BA  2FB6               	goto	u415
  1664  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  1665  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  1666  07BD  0805               	movf	5,w	;volatile
  1667  07BE  39C3               	andlw	195
  1668  07BF  0471               	iorwf	??_display+1,w
  1669  07C0  0085               	movwf	5	;volatile
  1670  07C1                     l992:	
  1671                           
  1672                           ;SSD.c: 89:                 for(unsigned int i = 400;i--;);
  1673  07C1  3090               	movlw	144
  1674  07C2  00F5               	movwf	display@i_41
  1675  07C3  3001               	movlw	1
  1676  07C4  00F6               	movwf	display@i_41+1
  1677  07C5                     l994:	
  1678  07C5  3001               	movlw	1
  1679  07C6  02F5               	subwf	display@i_41,f
  1680  07C7  3000               	movlw	0
  1681  07C8  1C03               	skipc
  1682  07C9  03F6               	decf	display@i_41+1,f
  1683  07CA  02F6               	subwf	display@i_41+1,f
  1684  07CB  0A75               	incf	display@i_41,w
  1685  07CC  1D03               	skipz
  1686  07CD  2FD2               	goto	u421
  1687  07CE  0A76               	incf	display@i_41+1,w
  1688  07CF  1D03               	btfss	3,2
  1689  07D0  2FD2               	goto	u421
  1690  07D1  2FD3               	goto	u420
  1691  07D2                     u421:	
  1692  07D2  2FC5               	goto	l994
  1693  07D3                     u420:	
  1694  07D3                     l996:	
  1695                           
  1696                           ;SSD.c: 91:             }
  1697  07D3  3001               	movlw	1
  1698  07D4  00F0               	movwf	??_display
  1699  07D5  0870               	movf	??_display,w
  1700  07D6  07F8               	addwf	display@digit,f
  1701  07D7                     l998:	
  1702  07D7  3004               	movlw	4
  1703  07D8  0278               	subwf	display@digit,w
  1704  07D9  1C03               	skipc
  1705  07DA  2FDC               	goto	u431
  1706  07DB  2FDD               	goto	u430
  1707  07DC                     u431:	
  1708  07DC  2FA5               	goto	l988
  1709  07DD                     u430:	
  1710  07DD                     l71:	
  1711  07DD  0008               	return
  1712  07DE                     __end_of_display:	
  1713  007E                     btemp	set	126	;btemp
  1714  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        23
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     23      55
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display@data	PTR unsigned char  size(1) Largest target is 4
		 -> main@ssd(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_display

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0     634
                                              9 COMMON     4     4      0
                                              0 BANK0     23    23      0
                            _display
                        _init_config
                _read_digital_keypad
 ---------------------------------------------------------------------------------
 (1) _read_digital_keypad                                  2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                _init_digital_keypad
                           _init_ssd
 ---------------------------------------------------------------------------------
 (2) _init_ssd                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              9     9      0     303
                                              0 COMMON     9     9      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
   _init_config
     _init_digital_keypad
     _init_ssd
   _read_digital_keypad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     17      37       5       68.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      45      12        0.0%
ABS                  0      0      45       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Jun  7 14:34:25 2020

                           _i 0053                             _j 0047                             _k 0045  
                           _l 0043                             pc 0002                            l34 0740  
                          l44 073A                            l53 0722                            l29 0572  
                          l71 07DD                            fsr 0004                           l100 0566  
                         l109 064A                           l134 05C5                           l128 055B  
                         l900 0556                           l910 06A4                           l902 068B  
                         l920 06D2                           l912 06AA                           l904 0696  
                         l922 06D4                           l914 06C2                           l930 06E7  
                         l906 0698                           l940 0704                           l932 06ED  
                         l924 06DB                           l916 06C9                           l908 069E  
                         l950 071E                           l942 070A                           l934 06F3  
                         l926 06DD                           l918 06CB                           l952 0746  
                         l944 070E                           l936 06FA                           l928 06E4  
                         l970 0779                           l954 074C                           l946 0714  
                         l938 0700                           l980 079E                           l972 0787  
                         l964 0759                           l956 0752                           l948 0718  
                         l990 07AF                           l982 07A4                           l974 078B  
                         l966 0763                           l958 0758                           l894 0567  
                         l992 07C1                           l968 0775                           l976 0792  
                         l896 056A                           l994 07C5                           l978 0798  
                         l898 056D                           l996 07D3                           l988 07A5  
                         l998 07D7                           u200 06AA                           u201 06A9  
                         u210 06C9                           u211 06C8                           u300 0714  
                         u220 06D2                           u301 0713                           u221 06D1  
                         u310 071E                           u230 06DB                           u311 071D  
                         u231 06DA                           u400 07A4                           u320 074C  
                         u240 06E4                           u401 07A3                           u321 074B  
                         u241 06E3                           u330 0752                           u250 06ED  
                         u170 0696                           u331 0751                           u251 06EC  
                         u171 0695                           u420 07D3                           u340 0758  
                         u260 06F3                           u180 069E                           u500 060E  
                         u421 07D2                           u341 0757                           u261 06F2  
                         u181 069D                           u501 060D                           u430 07DD  
                         u414 07B9                           u270 06FA                           u190 06A4  
                         u510 061F                           u431 07DC                           u415 07B6  
                         u271 06F9                           u191 06A3                           u511 061E  
                         u360 0787                           u280 0700                           u440 05A2  
                         u520 0632                           u361 0786                           u281 06FF  
                         u441 05A1                           u521 0631                           u370 0791  
                         u354 076D                           u290 070A                           u450 05B2  
                         u530 0638                           u371 0790                           u355 076A  
                         u291 0709                           u451 05B1                           u531 0637  
                         u380 0798                           u460 05B7                           u540 0643  
                         u381 0797                           u461 05B6                           u541 0642  
                         u390 079E                           u470 05C2                           u550 0654  
                         u391 079D                           u471 05C1                           u551 0653  
                         u560 0684                           u480 05D2                           u561 0683  
                         u490 05F9                           u555 0650                           u491 05F8  
                         fsr0 0004                           indf 0000                          l1000 055C  
                        l1010 05A7                          l1002 059D                          l1012 05B2  
                        l1004 05A2                          l1014 05B7                          l1022 05B9  
                        l1030 05C6                          l1024 05C2                          l1040 05E8  
                        l1032 05CA                          l1026 05C4                          l1050 0605  
                        l1042 05F3                          l1034 05DF                          l1060 0616  
                        l1044 05F9                          l1052 0608                          l1036 05E3  
                        l1070 062B                          l1054 060E                          l1046 05FD  
                        l1038 05E3                          l1080 0647                          l1072 0632  
                        l1056 0610                          l1064 0619                          l1048 05FF  
                        l1090 067B                          l1074 0638                          l1066 061F  
                        l1058 0614                          l1092 0684                          l1084 0654  
                        l1076 063D                          l1068 0629                          l1086 0671  
                        l1078 0643                          l1088 0675         ??_read_digital_keypad 0070  
                        _LEFT 004B                   display@i_41 0075                          _STOP 0055  
                 display@data 0077                   display@wait 004D                          _main 05C6  
                        btemp 007E                          start 0000                         ?_main 0070  
               __CFG_WDTE$OFF 0000                  ?_init_config 0070                         _RIGHT 0051  
                       _PORTA 0005                         _PORTB 0006                         _PORTD 0008  
                       _START 0049                         _TRISA 0085                         _TRISB 0086  
                       _TRISD 0088                  display@digit 0078               __end_of_display 07DE  
                       _count 004F                         pclath 000A                         status 0003  
                       wtemp0 007E               __initialization 07DE                  __end_of_main 068A  
                      ??_main 0079   __end_of_init_digital_keypad 055C              __end_of_init_ssd 0573  
                   ??_display 0070                  __pdataCOMMON 007D       __end_of__initialization 07FC  
              __pcstackCOMMON 0070                  __pidataBANK0 0586          __size_of_init_config 000B  
                  __pbssBANK0 004D                    __pmaintext 05C6   __end_of_read_digital_keypad 05C6  
                   ?_init_ssd 0070                       __ptext1 059C                       __ptext2 055C  
                     __ptext3 0567                       __ptext4 0556                       __ptext5 068A  
                     _display 068A                       main@key 0036                       main@ssd 002E  
        end_of_initialization 07FC                main@prev_count 0032                    ??_init_ssd 0070  
                  main@count1 0034  __size_of_init_digital_keypad 0006                 __pidataCOMMON 0555  
         start_initialization 07DE                    init_fetch0 0573                   __pdataBANK0 0037  
               ??_init_config 0070                     ___latbits 0002                 __pcstackBANK0 0020  
           __size_of_init_ssd 000C                      ?_display 0070           __end_of_init_config 0567  
__size_of_read_digital_keypad 002A                     main@digit 0020           _init_digital_keypad 0556  
        ?_init_digital_keypad 0070                   _init_config 055C              __size_of_display 0154  
               __size_of_main 00C4                      _init_ssd 0567       read_digital_keypad@mode 0071  
     read_digital_keypad@once 007D                      main@F870 0037         ??_init_digital_keypad 0070  
                    display@i 0073                      init_ram0 0577           _read_digital_keypad 059C  
        ?_read_digital_keypad 0070  
