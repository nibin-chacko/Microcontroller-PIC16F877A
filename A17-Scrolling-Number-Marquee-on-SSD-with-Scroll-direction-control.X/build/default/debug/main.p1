Version 4.0 HI-TECH Software Intermediate Code
"32 ./ssd.h
[; ;./ssd.h: 32: void init_ssd(void);
[v _init_ssd `(v ~T0 @X0 0 ef ]
"36 ./digital_keypad.h
[; ;./digital_keypad.h: 36: void init_digital_keypad(void);
[v _init_digital_keypad `(v ~T0 @X0 0 ef ]
[p mainexit ]
"37
[; ;./digital_keypad.h: 37: unsigned char read_digital_keypad(unsigned char mode);
[v _read_digital_keypad `(uc ~T0 @X0 0 ef1`uc ]
"33 ./ssd.h
[; ;./ssd.h: 33: void display(unsigned char data[]);
[v _display `(v ~T0 @X0 0 ef1`*uc ]
"54 /opt/microchip/xc8/v2.10/pic/include/pic16f877a.h
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"10 main.c
[; ;main.c: 10: }
[p x WDTE = OFF ]
"11
[; ;main.c: 11: 
[v _count `ui ~T0 @X0 1 e ]
[i _count
-> -> 0 `i `ui
]
"12
[; ;main.c: 12: void main(void) {
[v _i `ui ~T0 @X0 1 e ]
[i _i
-> -> 0 `i `ui
]
"13
[; ;main.c: 13:     int count1 = 0;
[v _j `ui ~T0 @X0 1 e ]
[i _j
-> -> 1 `i `ui
]
"14
[; ;main.c: 14:     unsigned char key;
[v _k `ui ~T0 @X0 1 e ]
[i _k
-> -> 2 `i `ui
]
"15
[; ;main.c: 15:     unsigned char ssd[4];
[v _l `ui ~T0 @X0 1 e ]
[i _l
-> -> 3 `i `ui
]
"16
[; ;main.c: 16:     unsigned char digit[12]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x00,0x00};
[v _LEFT `i ~T0 @X0 1 e ]
[i _LEFT
-> 1 `i
]
[v _RIGHT `i ~T0 @X0 1 e ]
[i _RIGHT
-> 0 `i
]
[v _STOP `i ~T0 @X0 1 e ]
[i _STOP
-> 0 `i
]
[v _START `i ~T0 @X0 1 e ]
[i _START
-> 1 `i
]
"17
[; ;main.c: 17:     unsigned int prev_count = 1;
[v _init_config `(v ~T0 @X0 1 sf ]
{
[e :U _init_config ]
[f ]
"19
[; ;main.c: 19:     init_config();
[e ( _init_ssd ..  ]
"21
[; ;main.c: 21:     while (1) {
[e ( _init_digital_keypad ..  ]
"22
[; ;main.c: 22:         key = read_digital_keypad(1);
[e :UE 95 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"24
[; ;main.c: 24:         {
[v _main `(v ~T0 @X0 1 ef ]
{
[e :U _main ]
[f ]
"25
[; ;main.c: 25:             LEFT = 1;
[v _count1 `i ~T0 @X0 1 a ]
[e = _count1 -> 0 `i ]
"26
[; ;main.c: 26:             RIGHT = 0;
[v _key `uc ~T0 @X0 1 a ]
"27
[; ;main.c: 27:             STOP = 0;
[v _ssd `uc ~T0 @X0 -> 4 `i a ]
[v F870 `uc ~T0 @X0 -> 12 `i s ]
[i F870
:U ..
"28
[; ;main.c: 28:             START = 1;
-> -> 63 `i `uc
-> -> 6 `i `uc
-> -> 91 `i `uc
-> -> 79 `i `uc
-> -> 102 `i `uc
-> -> 109 `i `uc
-> -> 125 `i `uc
-> -> 7 `i `uc
-> -> 127 `i `uc
-> -> 111 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
]
[v _digit `uc ~T0 @X0 -> 12 `i a ]
[e = _digit F870 ]
"29
[; ;main.c: 29:             count1= 0;
[v _prev_count `ui ~T0 @X0 1 a ]
[e = _prev_count -> -> 1 `i `ui ]
"30
[; ;main.c: 30:         }
[v _wait `ui ~T0 @X0 1 a ]
[e = _wait -> -> 0 `i `ui ]
"31
[; ;main.c: 31:         else if(key == 0x3D)
[e ( _init_config ..  ]
"33
[; ;main.c: 33:             LEFT = 0;
[e :U 98 ]
{
"34
[; ;main.c: 34:             RIGHT = 1;
[e = _key ( _read_digital_keypad (1 -> -> 1 `i `uc ]
"35
[; ;main.c: 35:             STOP = 0;
[e $ ! == -> _key `i -> 62 `i 100  ]
"36
[; ;main.c: 36:             START = 0;
{
"37
[; ;main.c: 37:             count1=0;
[e = _LEFT -> 1 `i ]
"38
[; ;main.c: 38:         }
[e = _RIGHT -> 0 `i ]
"39
[; ;main.c: 39:         else if(key == 0x3B)
[e = _STOP -> 0 `i ]
"40
[; ;main.c: 40:         {
[e = _START -> 1 `i ]
"41
[; ;main.c: 41:             count1++;
[e = _count1 -> 0 `i ]
"42
[; ;main.c: 42:             STOP = 1;
}
[e $U 101  ]
"43
[; ;main.c: 43:             START = 0;
[e :U 100 ]
[e $ ! == -> _key `i -> 61 `i 102  ]
"44
[; ;main.c: 44:             if(count1 == 2)
{
"45
[; ;main.c: 45:             {
[e = _LEFT -> 0 `i ]
"46
[; ;main.c: 46:                 if(LEFT == 1)
[e = _RIGHT -> 1 `i ]
"47
[; ;main.c: 47:                 {
[e = _STOP -> 0 `i ]
"48
[; ;main.c: 48:                   START = 0;
[e = _START -> 0 `i ]
"49
[; ;main.c: 49:                   STOP = 0;
[e = _count1 -> 0 `i ]
"50
[; ;main.c: 50:                 }
}
[e $U 103  ]
"51
[; ;main.c: 51:                 else if(RIGHT == 1)
[e :U 102 ]
[e $ ! == -> _key `i -> 59 `i 104  ]
"52
[; ;main.c: 52:                 {
{
"53
[; ;main.c: 53:                     START = 2;
[e ++ _count1 -> 1 `i ]
"54
[; ;main.c: 54:                     STOP = 0;
[e = _STOP -> 1 `i ]
"55
[; ;main.c: 55:                 }
[e = _START -> 0 `i ]
"56
[; ;main.c: 56:             count1 = 0;
[e $ ! == _count1 -> 2 `i 105  ]
"57
[; ;main.c: 57:             }
{
"58
[; ;main.c: 58:         }
[e $ ! == _LEFT -> 1 `i 106  ]
"59
[; ;main.c: 59:         if(prev_count != count)
{
"60
[; ;main.c: 60:         {
[e = _START -> 0 `i ]
"61
[; ;main.c: 61:         ssd[0] = digit[i];
[e = _STOP -> 0 `i ]
"62
[; ;main.c: 62:         ssd[1] = digit[j];
}
[e $U 107  ]
"63
[; ;main.c: 63:         ssd[2] = digit[k];
[e :U 106 ]
[e $ ! == _RIGHT -> 1 `i 108  ]
"64
[; ;main.c: 64:         ssd[3] = digit[l];
{
"65
[; ;main.c: 65:         prev_count = count;
[e = _START -> 2 `i ]
"66
[; ;main.c: 66:         }
[e = _STOP -> 0 `i ]
"67
[; ;main.c: 67: 
}
[e :U 108 ]
[e :U 107 ]
"68
[; ;main.c: 68:         display(ssd);
[e = _count1 -> 0 `i ]
"69
[; ;main.c: 69:         if(count == 10)
}
[e :U 105 ]
"70
[; ;main.c: 70:         {
}
[e :U 104 ]
[e :U 103 ]
[e :U 101 ]
"71
[; ;main.c: 71:             count = 0;
[e $ ! != _prev_count _count 109  ]
"72
[; ;main.c: 72:         }
{
"73
[; ;main.c: 73: 
[e = *U + &U _ssd * -> -> -> 0 `i `ui `ux -> -> # *U &U _ssd `ui `ux *U + &U _digit * -> _i `ux -> -> # *U &U _digit `ui `ux ]
"74
[; ;main.c: 74:     }
[e = *U + &U _ssd * -> -> -> 1 `i `ui `ux -> -> # *U &U _ssd `ui `ux *U + &U _digit * -> _j `ux -> -> # *U &U _digit `ui `ux ]
"75
[; ;main.c: 75:     return;
[e = *U + &U _ssd * -> -> -> 2 `i `ui `ux -> -> # *U &U _ssd `ui `ux *U + &U _digit * -> _k `ux -> -> # *U &U _digit `ui `ux ]
"76
[; ;main.c: 76: }
[e = *U + &U _ssd * -> -> -> 3 `i `ui `ux -> -> # *U &U _ssd `ui `ux *U + &U _digit * -> _l `ux -> -> # *U &U _digit `ui `ux ]
"77
[e = _prev_count _count ]
"78
}
[e :U 109 ]
"80
[e ( _display (1 &U _ssd ]
"81
[e $ ! == _count -> -> 10 `i `ui 110  ]
"82
{
"83
[e = _count -> -> 0 `i `ui ]
"84
}
[e :U 110 ]
"86
}
[e :U 97 ]
[e $U 98  ]
[e :U 99 ]
"87
[e $UE 96  ]
"88
[e :UE 96 ]
}
