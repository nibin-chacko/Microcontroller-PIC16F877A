

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri May 15 15:58:11 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0011                     	;# 
   131  0012                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001B                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  0086                     	;# 
   150  0087                     	;# 
   151  0088                     	;# 
   152  0089                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  0091                     	;# 
   157  0092                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  009F                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  0000                     	;# 
   173  0001                     	;# 
   174  0002                     	;# 
   175  0003                     	;# 
   176  0004                     	;# 
   177  0005                     	;# 
   178  0006                     	;# 
   179  0007                     	;# 
   180  0008                     	;# 
   181  0009                     	;# 
   182  000A                     	;# 
   183  000B                     	;# 
   184  000C                     	;# 
   185  000D                     	;# 
   186  000E                     	;# 
   187  000E                     	;# 
   188  000F                     	;# 
   189  0010                     	;# 
   190  0011                     	;# 
   191  0012                     	;# 
   192  0013                     	;# 
   193  0014                     	;# 
   194  0015                     	;# 
   195  0015                     	;# 
   196  0016                     	;# 
   197  0017                     	;# 
   198  0018                     	;# 
   199  0019                     	;# 
   200  001A                     	;# 
   201  001B                     	;# 
   202  001B                     	;# 
   203  001C                     	;# 
   204  001D                     	;# 
   205  001E                     	;# 
   206  001F                     	;# 
   207  0081                     	;# 
   208  0085                     	;# 
   209  0086                     	;# 
   210  0087                     	;# 
   211  0088                     	;# 
   212  0089                     	;# 
   213  008C                     	;# 
   214  008D                     	;# 
   215  008E                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0094                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  009F                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  018C                     	;# 
   231  018D                     	;# 
   232  0000                     	;# 
   233  0001                     	;# 
   234  0002                     	;# 
   235  0003                     	;# 
   236  0004                     	;# 
   237  0005                     	;# 
   238  0006                     	;# 
   239  0007                     	;# 
   240  0008                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  000E                     	;# 
   247  000E                     	;# 
   248  000F                     	;# 
   249  0010                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0014                     	;# 
   254  0015                     	;# 
   255  0015                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001B                     	;# 
   263  001C                     	;# 
   264  001D                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  0081                     	;# 
   268  0085                     	;# 
   269  0086                     	;# 
   270  0087                     	;# 
   271  0088                     	;# 
   272  0089                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292                           
   293                           	psect	idataCOMMON
   294  06A1                     __pidataCOMMON:	
   295                           
   296                           ;initializer for pattern@flag
   297  06A1  3401               	retlw	1
   298                           
   299                           ;initializer for read_digital_keypad@once
   300  06A2  3401               	retlw	1
   301                           
   302                           	psect	idataBANK0
   303  06A3                     __pidataBANK0:	
   304                           
   305                           ;initializer for pattern@input1
   306  06A3  34F0               	retlw	240
   307  06A4  3400               	retlw	0
   308                           
   309                           ;initializer for pattern@input
   310  06A5  3455               	retlw	85
   311  06A6  3400               	retlw	0
   312  0008                     _PORTD	set	8
   313  0006                     _PORTB	set	6
   314  0088                     _TRISD	set	136
   315  0086                     _TRISB	set	134
   316                           
   317                           ; #config settings
   318  0000                     
   319                           	psect	cinit
   320  07D7                     start_initialization:	
   321  07D7                     __initialization:	
   322                           
   323                           ; Initialize objects allocated to BANK0
   324  07D7  120A  118A  26A3  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   325  07DC  00A0               	movwf	__pdataBANK0& (0+127)
   326  07DD  120A  118A  26A4  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   327  07E2  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   328  07E3  120A  118A  26A5  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   329  07E8  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   330  07E9  120A  118A  26A6  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   331  07EE  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   332                           
   333                           ; Initialize objects allocated to COMMON
   334  07EF  120A  118A  26A1  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   335  07F4  00FA               	movwf	__pdataCOMMON& (0+127)
   336  07F5  120A  118A  26A2  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   337  07FA  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   338                           
   339                           ; Clear objects allocated to COMMON
   340  07FB  01FC               	clrf	__pbssCOMMON& (0+127)
   341  07FC                     end_of_initialization:	
   342                           ;End of C runtime variable initialization code
   343                           
   344  07FC                     __end_of__initialization:	
   345  07FC  0183               	clrf	3
   346  07FD  120A  118A  2EE3   	ljmp	_main	;jump to C main() function
   347                           
   348                           	psect	bssCOMMON
   349  007C                     __pbssCOMMON:	
   350  007C                     pattern@i:	
   351  007C                     	ds	1
   352                           
   353                           	psect	dataCOMMON
   354  007A                     __pdataCOMMON:	
   355  007A                     pattern@flag:	
   356  007A                     	ds	1
   357  007B                     read_digital_keypad@once:	
   358  007B                     	ds	1
   359                           
   360                           	psect	dataBANK0
   361  0020                     __pdataBANK0:	
   362  0020                     pattern@input1:	
   363  0020                     	ds	2
   364  0022                     pattern@input:	
   365  0022                     	ds	2
   366                           
   367                           	psect	cstackCOMMON
   368  0070                     __pcstackCOMMON:	
   369  0070                     ?_pattern:	
   370  0070                     ??_pattern:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_init_digital_keypad:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ??_init_digital_keypad:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?_read_digital_keypad:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ??_read_digital_keypad:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_init_config:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ??_init_config:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_main:	
   392                           ; 1 bytes @ 0x0
   393                           
   394                           
   395                           ; 1 bytes @ 0x0
   396  0070                     	ds	1
   397  0071                     read_digital_keypad@mode:	
   398                           
   399                           ; 1 bytes @ 0x1
   400  0071                     	ds	3
   401  0074                     pattern@key:	
   402                           
   403                           ; 1 bytes @ 0x4
   404  0074                     	ds	1
   405  0075                     ??_main:	
   406                           
   407                           ; 1 bytes @ 0x5
   408  0075                     	ds	1
   409  0076                     main@wait:	
   410                           
   411                           ; 2 bytes @ 0x6
   412  0076                     	ds	2
   413  0078                     main@key_copy:	
   414                           
   415                           ; 1 bytes @ 0x8
   416  0078                     	ds	1
   417  0079                     main@key:	
   418                           
   419                           ; 1 bytes @ 0x9
   420  0079                     	ds	1
   421                           
   422                           	psect	maintext
   423  06E3                     __pmaintext:	
   424 ;;
   425 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   426 ;;
   427 ;; *************** function _main *****************
   428 ;; Defined at:
   429 ;;		line 20 in file "main.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;		None
   432 ;; Auto vars:     Size  Location     Type
   433 ;;  wait            2    6[COMMON] unsigned short 
   434 ;;  key             1    9[COMMON] unsigned char 
   435 ;;  key_copy        1    8[COMMON] unsigned char 
   436 ;; Return value:  Size  Location     Type
   437 ;;                  1    wreg      void 
   438 ;; Registers used:
   439 ;;		wreg, status,2, status,0, pclath, cstack
   440 ;; Tracked objects:
   441 ;;		On entry : B00/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   445 ;;      Params:         0       0       0       0       0
   446 ;;      Locals:         4       0       0       0       0
   447 ;;      Temps:          1       0       0       0       0
   448 ;;      Totals:         5       0       0       0       0
   449 ;;Total ram usage:        5 bytes
   450 ;; Hardware stack levels required when called:    2
   451 ;; This function calls:
   452 ;;		_init_config
   453 ;;		_pattern
   454 ;;		_read_digital_keypad
   455 ;; This function is called by:
   456 ;;		Startup code after reset
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460                           
   461                           ;psect for function _main
   462  06E3                     _main:	
   463  06E3                     l806:	
   464                           ;incstack = 0
   465                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   466                           
   467                           
   468                           ;main.c: 21: ;main.c: 22:             pattern(key_copy);;main.c: 23:         };main.c: 2
      +                          4: 
   469  06E3  120A  118A  26AD  120A  118A  	fcall	_init_config
   470  06E8                     l35:	
   471                           ;main.c: 25:     }
   472                           
   473                           
   474                           ;main.c: 26:     return;
   475  06E8  3001               	movlw	1
   476  06E9  120A  118A  26B9  120A  118A  	fcall	_read_digital_keypad
   477  06EE  00F5               	movwf	??_main
   478  06EF  0875               	movf	??_main,w
   479  06F0  00F9               	movwf	main@key
   480  06F1                     l808:	
   481                           
   482                           ;main.c: 27: }
   483  06F1  303F               	movlw	63
   484  06F2  0679               	xorwf	main@key,w
   485  06F3  1903               	btfsc	3,2
   486  06F4  2EF6               	goto	u411
   487  06F5  2EF7               	goto	u410
   488  06F6                     u411:	
   489  06F6  2EFE               	goto	l814
   490  06F7                     u410:	
   491  06F7                     l810:	
   492  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   493  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   494  06F9  0188               	clrf	8	;volatile
   495  06FA                     l812:	
   496  06FA  0879               	movf	main@key,w
   497  06FB  00F5               	movwf	??_main
   498  06FC  0875               	movf	??_main,w
   499  06FD  00F8               	movwf	main@key_copy
   500  06FE                     l814:	
   501  06FE  3001               	movlw	1
   502  06FF  02F6               	subwf	main@wait,f
   503  0700  3000               	movlw	0
   504  0701  1C03               	skipc
   505  0702  03F7               	decf	main@wait+1,f
   506  0703  02F7               	subwf	main@wait+1,f
   507  0704  0A76               	incf	main@wait,w
   508  0705  1D03               	skipz
   509  0706  2F0B               	goto	u421
   510  0707  0A77               	incf	main@wait+1,w
   511  0708  1D03               	btfss	3,2
   512  0709  2F0B               	goto	u421
   513  070A  2F0C               	goto	u420
   514  070B                     u421:	
   515  070B  2EE8               	goto	l35
   516  070C                     u420:	
   517  070C                     l816:	
   518  070C  30B8               	movlw	184
   519  070D  00F6               	movwf	main@wait
   520  070E  300B               	movlw	11
   521  070F  00F7               	movwf	main@wait+1
   522  0710                     l818:	
   523  0710  0878               	movf	main@key_copy,w
   524  0711  120A  118A  271A  120A  118A  	fcall	_pattern
   525  0716  2EE8               	goto	l35
   526  0717  120A  118A  2800   	ljmp	start
   527  071A                     __end_of_main:	
   528                           
   529                           	psect	text1
   530  06B9                     __ptext1:	
   531 ;; *************** function _read_digital_keypad *****************
   532 ;; Defined at:
   533 ;;		line 11 in file "Digital_keypad.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;  mode            1    wreg     unsigned char 
   536 ;; Auto vars:     Size  Location     Type
   537 ;;  mode            1    1[COMMON] unsigned char 
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      unsigned char 
   540 ;; Registers used:
   541 ;;		wreg, status,2, status,0
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   547 ;;      Params:         0       0       0       0       0
   548 ;;      Locals:         1       0       0       0       0
   549 ;;      Temps:          1       0       0       0       0
   550 ;;      Totals:         2       0       0       0       0
   551 ;;Total ram usage:        2 bytes
   552 ;; Hardware stack levels used:    1
   553 ;; This function calls:
   554 ;;		Nothing
   555 ;; This function is called by:
   556 ;;		_main
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           
   561                           ;psect for function _read_digital_keypad
   562  06B9                     _read_digital_keypad:	
   563                           
   564                           ;incstack = 0
   565                           ; Regs used in _read_digital_keypad: [wreg+status,2+status,0]
   566                           ;read_digital_keypad@mode stored from wreg
   567  06B9  00F1               	movwf	read_digital_keypad@mode
   568  06BA                     l664:	
   569                           
   570                           ;Digital_keypad.c: 11: unsigned char read_digital_keypad(unsigned char mode);Digital_key
      +                          pad.c: 12: {;Digital_keypad.c: 13:     static unsigned char once = 1;;Digital_keypad.c: 
      +                          14:     if(mode == 0)
   571  06BA  0871               	movf	read_digital_keypad@mode,w
   572  06BB  1D03               	btfss	3,2
   573  06BC  2EBE               	goto	u11
   574  06BD  2EBF               	goto	u10
   575  06BE                     u11:	
   576  06BE  2EC4               	goto	l672
   577  06BF                     u10:	
   578  06BF                     l666:	
   579                           
   580                           ;Digital_keypad.c: 15:     {;Digital_keypad.c: 16:         return PORTB & 0x3F;
   581  06BF  1283               	bcf	3,5	;RP0=0, select bank0
   582  06C0  1303               	bcf	3,6	;RP1=0, select bank0
   583  06C1  0806               	movf	6,w	;volatile
   584  06C2  393F               	andlw	63
   585  06C3  2EE2               	goto	l13
   586  06C4                     l672:	
   587                           
   588                           ;Digital_keypad.c: 19:     {;Digital_keypad.c: 20:         if(((PORTB & 0x3F) != 0x3F) &
      +                          & once)
   589  06C4  303F               	movlw	63
   590  06C5  1283               	bcf	3,5	;RP0=0, select bank0
   591  06C6  1303               	bcf	3,6	;RP1=0, select bank0
   592  06C7  0506               	andwf	6,w	;volatile
   593  06C8  00F0               	movwf	??_read_digital_keypad
   594  06C9  303F               	movlw	63
   595  06CA  0670               	xorwf	??_read_digital_keypad,w
   596  06CB  1903               	btfsc	3,2
   597  06CC  2ECE               	goto	u21
   598  06CD  2ECF               	goto	u20
   599  06CE                     u21:	
   600  06CE  2ED6               	goto	l684
   601  06CF                     u20:	
   602  06CF                     l674:	
   603  06CF  087B               	movf	read_digital_keypad@once,w
   604  06D0  1903               	btfsc	3,2
   605  06D1  2ED3               	goto	u31
   606  06D2  2ED4               	goto	u30
   607  06D3                     u31:	
   608  06D3  2ED6               	goto	l684
   609  06D4                     u30:	
   610  06D4                     l676:	
   611                           
   612                           ;Digital_keypad.c: 21:         {;Digital_keypad.c: 22:             once = 0;
   613  06D4  01FB               	clrf	read_digital_keypad@once
   614  06D5  2EBF               	goto	l666
   615  06D6                     l684:	
   616  06D6  303F               	movlw	63
   617  06D7  0506               	andwf	6,w	;volatile
   618  06D8  00F0               	movwf	??_read_digital_keypad
   619  06D9  303F               	movlw	63
   620  06DA  0670               	xorwf	??_read_digital_keypad,w
   621  06DB  1D03               	btfss	3,2
   622  06DC  2EDE               	goto	u41
   623  06DD  2EDF               	goto	u40
   624  06DE                     u41:	
   625  06DE  2EE1               	goto	l688
   626  06DF                     u40:	
   627  06DF                     l686:	
   628                           
   629                           ;Digital_keypad.c: 27:         {;Digital_keypad.c: 28:             once = 1;
   630  06DF  01FB               	clrf	read_digital_keypad@once
   631  06E0  0AFB               	incf	read_digital_keypad@once,f
   632  06E1                     l688:	
   633                           
   634                           ;Digital_keypad.c: 33:     return 0x3F;
   635  06E1  303F               	movlw	63
   636  06E2                     l13:	
   637  06E2  0008               	return
   638  06E3                     __end_of_read_digital_keypad:	
   639                           
   640                           	psect	text2
   641  071A                     __ptext2:	
   642 ;; *************** function _pattern *****************
   643 ;; Defined at:
   644 ;;		line 4 in file "pattern.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  key             1    wreg     unsigned char 
   647 ;; Auto vars:     Size  Location     Type
   648 ;;  key             1    4[COMMON] unsigned char 
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, status,2, status,0
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   658 ;;      Params:         0       0       0       0       0
   659 ;;      Locals:         1       0       0       0       0
   660 ;;      Temps:          4       0       0       0       0
   661 ;;      Totals:         5       0       0       0       0
   662 ;;Total ram usage:        5 bytes
   663 ;; Hardware stack levels used:    1
   664 ;; This function calls:
   665 ;;		Nothing
   666 ;; This function is called by:
   667 ;;		_main
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           
   672                           ;psect for function _pattern
   673  071A                     _pattern:	
   674                           
   675                           ;incstack = 0
   676                           ; Regs used in _pattern: [wreg+status,2+status,0]
   677                           ;pattern@key stored from wreg
   678  071A  00F4               	movwf	pattern@key
   679  071B                     l758:	
   680                           
   681                           ;pattern.c: 4: void pattern(unsigned char key);pattern.c: 5: {;pattern.c: 6:     static 
      +                          unsigned char flag = 1,i;;pattern.c: 7:     static unsigned input = 0x55;;pattern.c: 8: 
      +                              static unsigned input1 = 0xF0;;pattern.c: 10:     if(key == 0x3E)
   682  071B  303E               	movlw	62
   683  071C  0674               	xorwf	pattern@key,w
   684  071D  1D03               	btfss	3,2
   685  071E  2F20               	goto	u241
   686  071F  2F21               	goto	u240
   687  0720                     u241:	
   688  0720  2F7D               	goto	l778
   689  0721                     u240:	
   690  0721                     l760:	
   691                           
   692                           ;pattern.c: 11:     {;pattern.c: 12:         if(flag == 1)
   693  0721  037A               	decf	pattern@flag,w
   694  0722  1D03               	btfss	3,2
   695  0723  2F25               	goto	u251
   696  0724  2F26               	goto	u250
   697  0725                     u251:	
   698  0725  2F34               	goto	l54
   699  0726                     u250:	
   700  0726                     l762:	
   701                           
   702                           ;pattern.c: 13:         {;pattern.c: 14:             PORTD = PORTD | (1<<i);
   703  0726  3001               	movlw	1
   704  0727  00F0               	movwf	??_pattern
   705  0728  0A7C               	incf	pattern@i,w
   706  0729  2F2C               	goto	u264
   707  072A                     u265:	
   708  072A  1003               	clrc
   709  072B  0DF0               	rlf	??_pattern,f
   710  072C                     u264:	
   711  072C  3EFF               	addlw	-1
   712  072D  1D03               	skipz
   713  072E  2F2A               	goto	u265
   714  072F  0870               	movf	??_pattern,w
   715  0730  1283               	bcf	3,5	;RP0=0, select bank0
   716  0731  1303               	bcf	3,6	;RP1=0, select bank0
   717  0732  0408               	iorwf	8,w	;volatile
   718  0733  0088               	movwf	8	;volatile
   719  0734                     l54:	
   720                           ;pattern.c: 15:         }
   721                           
   722                           
   723                           ;pattern.c: 16:         if(flag == 2)
   724  0734  3002               	movlw	2
   725  0735  067A               	xorwf	pattern@flag,w
   726  0736  1D03               	btfss	3,2
   727  0737  2F39               	goto	u271
   728  0738  2F3A               	goto	u270
   729  0739                     u271:	
   730  0739  2F40               	goto	l55
   731  073A                     u270:	
   732  073A                     l764:	
   733                           
   734                           ;pattern.c: 17:         {;pattern.c: 18:             PORTD = PORTD << 1;
   735  073A  1283               	bcf	3,5	;RP0=0, select bank0
   736  073B  1303               	bcf	3,6	;RP1=0, select bank0
   737  073C  0808               	movf	8,w	;volatile
   738  073D  00F0               	movwf	??_pattern
   739  073E  0770               	addwf	??_pattern,w
   740  073F  0088               	movwf	8	;volatile
   741  0740                     l55:	
   742                           ;pattern.c: 19:         }
   743                           
   744                           
   745                           ;pattern.c: 20:         if(flag == 3)
   746  0740  3003               	movlw	3
   747  0741  067A               	xorwf	pattern@flag,w
   748  0742  1D03               	btfss	3,2
   749  0743  2F45               	goto	u281
   750  0744  2F46               	goto	u280
   751  0745                     u281:	
   752  0745  2F58               	goto	l56
   753  0746                     u280:	
   754  0746                     l766:	
   755                           
   756                           ;pattern.c: 21:         {;pattern.c: 22:             PORTD |= 0x80 >> i;
   757  0746  0A7C               	incf	pattern@i,w
   758  0747  00F0               	movwf	??_pattern
   759  0748  3080               	movlw	128
   760  0749  00F1               	movwf	??_pattern+1
   761  074A  3000               	movlw	0
   762  074B  00F2               	movwf	??_pattern+2
   763  074C  2F50               	goto	u294
   764  074D                     u295:	
   765  074D  0D72               	rlf	??_pattern+2,w
   766  074E  0CF2               	rrf	??_pattern+2,f
   767  074F  0CF1               	rrf	??_pattern+1,f
   768  0750                     u294:	
   769  0750  0BF0               	decfsz	??_pattern,f
   770  0751  2F4D               	goto	u295
   771  0752  0871               	movf	??_pattern+1,w
   772  0753  00F3               	movwf	??_pattern+3
   773  0754  0873               	movf	??_pattern+3,w
   774  0755  1283               	bcf	3,5	;RP0=0, select bank0
   775  0756  1303               	bcf	3,6	;RP1=0, select bank0
   776  0757  0488               	iorwf	8,f	;volatile
   777  0758                     l56:	
   778                           ;pattern.c: 23:         }
   779                           
   780                           
   781                           ;pattern.c: 24:         if(flag == 4)
   782  0758  3004               	movlw	4
   783  0759  067A               	xorwf	pattern@flag,w
   784  075A  1D03               	btfss	3,2
   785  075B  2F5D               	goto	u301
   786  075C  2F5E               	goto	u300
   787  075D                     u301:	
   788  075D  2F65               	goto	l57
   789  075E                     u300:	
   790  075E                     l768:	
   791                           
   792                           ;pattern.c: 25:         {;pattern.c: 26:             PORTD = PORTD >> 1;
   793  075E  1283               	bcf	3,5	;RP0=0, select bank0
   794  075F  1303               	bcf	3,6	;RP1=0, select bank0
   795  0760  0808               	movf	8,w	;volatile
   796  0761  00F0               	movwf	??_pattern
   797  0762  1003               	clrc
   798  0763  0C70               	rrf	??_pattern,w
   799  0764  0088               	movwf	8	;volatile
   800  0765                     l57:	
   801                           ;pattern.c: 27:         }
   802                           
   803                           
   804                           ;pattern.c: 28:         i++;
   805  0765  3001               	movlw	1
   806  0766  00F0               	movwf	??_pattern
   807  0767  0870               	movf	??_pattern,w
   808  0768  07FC               	addwf	pattern@i,f
   809                           
   810                           ;pattern.c: 29:         if(i == 8)
   811  0769  3008               	movlw	8
   812  076A  067C               	xorwf	pattern@i,w
   813  076B  1D03               	btfss	3,2
   814  076C  2F6E               	goto	u311
   815  076D  2F6F               	goto	u310
   816  076E                     u311:	
   817  076E  2FD6               	goto	l70
   818  076F                     u310:	
   819  076F                     l770:	
   820                           
   821                           ;pattern.c: 30:         {;pattern.c: 32:             i = 0;
   822  076F  01FC               	clrf	pattern@i
   823  0770                     l772:	
   824                           
   825                           ;pattern.c: 33:             flag++;
   826  0770  3001               	movlw	1
   827  0771  00F0               	movwf	??_pattern
   828  0772  0870               	movf	??_pattern,w
   829  0773  07FA               	addwf	pattern@flag,f
   830  0774                     l774:	
   831                           
   832                           ;pattern.c: 34:             if(flag > 4)
   833  0774  3005               	movlw	5
   834  0775  027A               	subwf	pattern@flag,w
   835  0776  1C03               	skipc
   836  0777  2F79               	goto	u321
   837  0778  2F7A               	goto	u320
   838  0779                     u321:	
   839  0779  2FD6               	goto	l70
   840  077A                     u320:	
   841  077A                     l776:	
   842                           
   843                           ;pattern.c: 35:             {;pattern.c: 36:                 flag = 1;
   844  077A  01FA               	clrf	pattern@flag
   845  077B  0AFA               	incf	pattern@flag,f
   846  077C  2FD6               	goto	l70
   847  077D                     l778:	
   848  077D  303D               	movlw	61
   849  077E  0674               	xorwf	pattern@key,w
   850  077F  1D03               	btfss	3,2
   851  0780  2F82               	goto	u331
   852  0781  2F83               	goto	u330
   853  0782                     u331:	
   854  0782  2FBD               	goto	l794
   855  0783                     u330:	
   856  0783                     l780:	
   857                           
   858                           ;pattern.c: 41:     {;pattern.c: 42:         if(flag == 1)
   859  0783  037A               	decf	pattern@flag,w
   860  0784  1D03               	btfss	3,2
   861  0785  2F87               	goto	u341
   862  0786  2F88               	goto	u340
   863  0787                     u341:	
   864  0787  2F9A               	goto	l62
   865  0788                     u340:	
   866  0788                     l782:	
   867                           
   868                           ;pattern.c: 43:         {;pattern.c: 44:         PORTD |=0x80 >> i;
   869  0788  0A7C               	incf	pattern@i,w
   870  0789  00F0               	movwf	??_pattern
   871  078A  3080               	movlw	128
   872  078B  00F1               	movwf	??_pattern+1
   873  078C  3000               	movlw	0
   874  078D  00F2               	movwf	??_pattern+2
   875  078E  2F92               	goto	u354
   876  078F                     u355:	
   877  078F  0D72               	rlf	??_pattern+2,w
   878  0790  0CF2               	rrf	??_pattern+2,f
   879  0791  0CF1               	rrf	??_pattern+1,f
   880  0792                     u354:	
   881  0792  0BF0               	decfsz	??_pattern,f
   882  0793  2F8F               	goto	u355
   883  0794  0871               	movf	??_pattern+1,w
   884  0795  00F3               	movwf	??_pattern+3
   885  0796  0873               	movf	??_pattern+3,w
   886  0797  1283               	bcf	3,5	;RP0=0, select bank0
   887  0798  1303               	bcf	3,6	;RP1=0, select bank0
   888  0799  0488               	iorwf	8,f	;volatile
   889  079A                     l62:	
   890                           ;pattern.c: 45:         }
   891                           
   892                           
   893                           ;pattern.c: 46:         if(flag == 2)
   894  079A  3002               	movlw	2
   895  079B  067A               	xorwf	pattern@flag,w
   896  079C  1D03               	btfss	3,2
   897  079D  2F9F               	goto	u361
   898  079E  2FA0               	goto	u360
   899  079F                     u361:	
   900  079F  2FA7               	goto	l63
   901  07A0                     u360:	
   902  07A0                     l784:	
   903                           
   904                           ;pattern.c: 47:         {;pattern.c: 48:             PORTD = PORTD>>1;
   905  07A0  1283               	bcf	3,5	;RP0=0, select bank0
   906  07A1  1303               	bcf	3,6	;RP1=0, select bank0
   907  07A2  0808               	movf	8,w	;volatile
   908  07A3  00F0               	movwf	??_pattern
   909  07A4  1003               	clrc
   910  07A5  0C70               	rrf	??_pattern,w
   911  07A6  0088               	movwf	8	;volatile
   912  07A7                     l63:	
   913                           ;pattern.c: 49:         }
   914                           
   915                           
   916                           ;pattern.c: 50:         i++;
   917  07A7  3001               	movlw	1
   918  07A8  00F0               	movwf	??_pattern
   919  07A9  0870               	movf	??_pattern,w
   920  07AA  07FC               	addwf	pattern@i,f
   921                           
   922                           ;pattern.c: 51:         if(i == 8)
   923  07AB  3008               	movlw	8
   924  07AC  067C               	xorwf	pattern@i,w
   925  07AD  1D03               	btfss	3,2
   926  07AE  2FB0               	goto	u371
   927  07AF  2FB1               	goto	u370
   928  07B0                     u371:	
   929  07B0  2FD6               	goto	l70
   930  07B1                     u370:	
   931  07B1                     l786:	
   932                           
   933                           ;pattern.c: 52:         {;pattern.c: 53:             i = 0;
   934  07B1  01FC               	clrf	pattern@i
   935  07B2                     l788:	
   936                           
   937                           ;pattern.c: 54:             flag++;
   938  07B2  3001               	movlw	1
   939  07B3  00F0               	movwf	??_pattern
   940  07B4  0870               	movf	??_pattern,w
   941  07B5  07FA               	addwf	pattern@flag,f
   942  07B6                     l790:	
   943                           
   944                           ;pattern.c: 55:             if(flag > 2)
   945  07B6  3003               	movlw	3
   946  07B7  027A               	subwf	pattern@flag,w
   947  07B8  1C03               	skipc
   948  07B9  2FBB               	goto	u381
   949  07BA  2FBC               	goto	u380
   950  07BB                     u381:	
   951  07BB  2FD6               	goto	l70
   952  07BC                     u380:	
   953  07BC  2F7A               	goto	l776
   954  07BD                     l794:	
   955  07BD  303B               	movlw	59
   956  07BE  0674               	xorwf	pattern@key,w
   957  07BF  1D03               	btfss	3,2
   958  07C0  2FC2               	goto	u391
   959  07C1  2FC3               	goto	u390
   960  07C2                     u391:	
   961  07C2  2FCA               	goto	l800
   962  07C3                     u390:	
   963  07C3                     l796:	
   964                           
   965                           ;pattern.c: 63:     {;pattern.c: 64:         input = ~input;
   966  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   967  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   968  07C5  09A2               	comf	pattern@input,f
   969  07C6  09A3               	comf	pattern@input+1,f
   970  07C7                     l798:	
   971                           
   972                           ;pattern.c: 65:         PORTD = input;
   973  07C7  0822               	movf	pattern@input,w
   974  07C8  0088               	movwf	8	;volatile
   975                           
   976                           ;pattern.c: 66:     }
   977  07C9  2FD6               	goto	l70
   978  07CA                     l800:	
   979  07CA  3037               	movlw	55
   980  07CB  0674               	xorwf	pattern@key,w
   981  07CC  1D03               	btfss	3,2
   982  07CD  2FCF               	goto	u401
   983  07CE  2FD0               	goto	u400
   984  07CF                     u401:	
   985  07CF  2FD6               	goto	l70
   986  07D0                     u400:	
   987  07D0                     l802:	
   988                           
   989                           ;pattern.c: 68:     {;pattern.c: 69:         input1 = ~input1;
   990  07D0  1283               	bcf	3,5	;RP0=0, select bank0
   991  07D1  1303               	bcf	3,6	;RP1=0, select bank0
   992  07D2  09A0               	comf	pattern@input1,f
   993  07D3  09A1               	comf	pattern@input1+1,f
   994  07D4                     l804:	
   995                           
   996                           ;pattern.c: 70:         PORTD = input1;
   997  07D4  0820               	movf	pattern@input1,w
   998  07D5  0088               	movwf	8	;volatile
   999  07D6                     l70:	
  1000  07D6  0008               	return
  1001  07D7                     __end_of_pattern:	
  1002                           
  1003                           	psect	text3
  1004  06AD                     __ptext3:	
  1005 ;; *************** function _init_config *****************
  1006 ;; Defined at:
  1007 ;;		line 14 in file "main.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;		None
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;		None
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  1    wreg      void 
  1014 ;; Registers used:
  1015 ;;		wreg, status,2, status,0, pclath, cstack
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1021 ;;      Params:         0       0       0       0       0
  1022 ;;      Locals:         0       0       0       0       0
  1023 ;;      Temps:          0       0       0       0       0
  1024 ;;      Totals:         0       0       0       0       0
  1025 ;;Total ram usage:        0 bytes
  1026 ;; Hardware stack levels used:    1
  1027 ;; Hardware stack levels required when called:    1
  1028 ;; This function calls:
  1029 ;;		_init_digital_keypad
  1030 ;; This function is called by:
  1031 ;;		_main
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           
  1036                           ;psect for function _init_config
  1037  06AD                     _init_config:	
  1038  06AD                     l692:	
  1039                           ;incstack = 0
  1040                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  1041                           
  1042                           
  1043                           ;main.c: 15:            PORTD = 0x00;
  1044  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1045  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1046  06AF  0188               	clrf	8	;volatile
  1047                           
  1048                           ;main.c: 16:             key_copy = key;
  1049  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  1050  06B1  1303               	bcf	3,6	;RP1=0, select bank1
  1051  06B2  0188               	clrf	8	;volatile
  1052  06B3                     l694:	
  1053                           
  1054                           ;main.c: 17:         }
  1055  06B3  120A  118A  26A7  120A  118A  	fcall	_init_digital_keypad
  1056  06B8                     l30:	
  1057  06B8  0008               	return
  1058  06B9                     __end_of_init_config:	
  1059                           
  1060                           	psect	text4
  1061  06A7                     __ptext4:	
  1062 ;; *************** function _init_digital_keypad *****************
  1063 ;; Defined at:
  1064 ;;		line 5 in file "Digital_keypad.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1078 ;;      Params:         0       0       0       0       0
  1079 ;;      Locals:         0       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0
  1081 ;;      Totals:         0       0       0       0       0
  1082 ;;Total ram usage:        0 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_init_config
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           
  1092                           ;psect for function _init_digital_keypad
  1093  06A7                     _init_digital_keypad:	
  1094  06A7                     l662:	
  1095                           ;incstack = 0
  1096                           ; Regs used in _init_digital_keypad: [wreg+status,2]
  1097                           
  1098                           
  1099                           ;Digital_keypad.c: 8:     TRISB = TRISB | 0x3F;
  1100  06A7  1683               	bsf	3,5	;RP0=1, select bank1
  1101  06A8  1303               	bcf	3,6	;RP1=0, select bank1
  1102  06A9  0806               	movf	6,w	;volatile
  1103  06AA  383F               	iorlw	63
  1104  06AB  0086               	movwf	6	;volatile
  1105  06AC                     l7:	
  1106  06AC  0008               	return
  1107  06AD                     __end_of_init_digital_keypad:	
  1108  007E                     btemp	set	126	;btemp
  1109  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      13
    BANK0            80      0       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_pattern

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     194
                                              5 COMMON     5     5      0
                        _init_config
                            _pattern
                _read_digital_keypad
 ---------------------------------------------------------------------------------
 (1) _read_digital_keypad                                  2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _pattern                                              5     5      0      88
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                _init_digital_keypad
 ---------------------------------------------------------------------------------
 (2) _init_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
     _init_digital_keypad
   _pattern
   _read_digital_keypad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       4       5        5.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      11      12        0.0%
ABS                  0      0      11       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri May 15 15:58:11 2020

                           l7 06AC                            l13 06E2                            l30 06B8  
                          l35 06E8                            l62 079A                            l70 07D6  
                          l54 0734                            l63 07A7                            l55 0740  
                          l56 0758                            l57 0765                            u10 06BF  
                          u11 06BE                            u20 06CF                            u21 06CE  
                          u30 06D4                            u31 06D3                            u40 06DF  
                          u41 06DE                           l800 07CA                           l802 07D0  
                         l810 06F7                           l804 07D4                           l812 06FA  
                         l662 06A7                           l814 06FE                           l806 06E3  
                         l760 0721                           l672 06C4                           l664 06BA  
                         l816 070C                           l808 06F1                           l770 076F  
                         l762 0726                           l674 06CF                           l666 06BF  
                         l818 0710                           l692 06AD                           l780 0783  
                         l772 0770                           l764 073A                           l676 06D4  
                         l684 06D6                           l694 06B3                           l790 07B6  
                         l782 0788                           l774 0774                           l766 0746  
                         l758 071B                           l686 06DF                           l784 07A0  
                         l776 077A                           l768 075E                           l688 06E1  
                         l786 07B1                           l794 07BD                           l778 077D  
                         l796 07C3                           l788 07B2                           l798 07C7  
                         u300 075E                           u301 075D                           u310 076F  
                         u311 076E                           u400 07D0                           u320 077A  
                         u240 0721                           u401 07CF                           u321 0779  
                         u241 0720                           u330 0783                           u250 0726  
                         u410 06F7                           u331 0782                           u251 0725  
                         u411 06F6                           u340 0788                           u420 070C  
                         u341 0787                           u421 070B                           u270 073A  
                         u271 0739                           u360 07A0                           u280 0746  
                         u264 072C                           u361 079F                           u281 0745  
                         u265 072A                           u370 07B1                           u354 0792  
                         u371 07B0                           u355 078F                           u380 07BC  
                         u381 07BB                           u390 07C3                           u294 0750  
                         u391 07C2                           u295 074D         ??_read_digital_keypad 0070  
                        _main 06E3                          btemp 007E                          start 0000  
                       ?_main 0070                 __CFG_WDTE$OFF 0000                  ?_init_config 0070  
                       _PORTB 0006                         _PORTD 0008                         _TRISB 0086  
                       _TRISD 0088                  main@key_copy 0078               __end_of_pattern 07D7  
                       status 0003                         wtemp0 007E               __initialization 07D7  
                __end_of_main 071A                        ??_main 0075   __end_of_init_digital_keypad 06AD  
                __pdataCOMMON 007A                     ??_pattern 0070       __end_of__initialization 07FC  
              __pcstackCOMMON 0070                  __pidataBANK0 06A3          __size_of_init_config 000C  
                  __pmaintext 06E3                   pattern@flag 007A   __end_of_read_digital_keypad 06E3  
               pattern@input1 0020                       __ptext1 06B9                       __ptext2 071A  
                     __ptext3 06AD                       __ptext4 06A7                       _pattern 071A  
                     main@key 0079          end_of_initialization 07FC  __size_of_init_digital_keypad 0006  
               __pidataCOMMON 06A1           start_initialization 07D7                   __pdataBANK0 0020  
               ??_init_config 0070                   __pbssCOMMON 007C                     ___latbits 0002  
                  pattern@key 0074                  pattern@input 0022                      ?_pattern 0070  
         __end_of_init_config 06B9  __size_of_read_digital_keypad 002A           _init_digital_keypad 06A7  
        ?_init_digital_keypad 0070                   _init_config 06AD              __size_of_pattern 00BD  
               __size_of_main 0037       read_digital_keypad@mode 0071       read_digital_keypad@once 007B  
       ??_init_digital_keypad 0070                      main@wait 0076                      pattern@i 007C  
         _read_digital_keypad 06B9          ?_read_digital_keypad 0070  
