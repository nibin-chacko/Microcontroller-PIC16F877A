

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jun 13 04:53:03 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0014                     	;# 
   135  0015                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  001B                     	;# 
   143  001B                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  0081                     	;# 
   149  0085                     	;# 
   150  0086                     	;# 
   151  0087                     	;# 
   152  0088                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009E                     	;# 
   166  009F                     	;# 
   167  010C                     	;# 
   168  010D                     	;# 
   169  010E                     	;# 
   170  010F                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  0007                     	;# 
   181  0008                     	;# 
   182  0009                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  000D                     	;# 
   187  000E                     	;# 
   188  000E                     	;# 
   189  000F                     	;# 
   190  0010                     	;# 
   191  0011                     	;# 
   192  0012                     	;# 
   193  0013                     	;# 
   194  0014                     	;# 
   195  0015                     	;# 
   196  0015                     	;# 
   197  0016                     	;# 
   198  0017                     	;# 
   199  0018                     	;# 
   200  0019                     	;# 
   201  001A                     	;# 
   202  001B                     	;# 
   203  001B                     	;# 
   204  001C                     	;# 
   205  001D                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  0081                     	;# 
   209  0085                     	;# 
   210  0086                     	;# 
   211  0087                     	;# 
   212  0088                     	;# 
   213  0089                     	;# 
   214  008C                     	;# 
   215  008D                     	;# 
   216  008E                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0094                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233                           
   234                           	psect	idataBANK0
   235  0677                     __pidataBANK0:	
   236                           
   237                           ;initializer for main@F944
   238  0677  3453               	retlw	83
   239  0678  3463               	retlw	99
   240  0679  3472               	retlw	114
   241  067A  346F               	retlw	111
   242  067B  346C               	retlw	108
   243  067C  346C               	retlw	108
   244  067D  3469               	retlw	105
   245  067E  346E               	retlw	110
   246  067F  3467               	retlw	103
   247  0680  3420               	retlw	32
   248  0681  3444               	retlw	68
   249  0682  3465               	retlw	101
   250  0683  346D               	retlw	109
   251  0684  346F               	retlw	111
   252  0685  3420               	retlw	32
   253  0686  3420               	retlw	32
   254  0687  3400               	retlw	0
   255  0008                     _PORTD	set	8
   256  0049                     _RE1	set	73
   257  004A                     _RE2	set	74
   258  0088                     _TRISD	set	136
   259  0449                     _TRISE1	set	1097
   260  044A                     _TRISE2	set	1098
   261                           
   262                           ; #config settings
   263  0000                     
   264                           	psect	cinit
   265  07EE                     start_initialization:	
   266  07EE                     __initialization:	
   267                           
   268                           ; Initialize objects allocated to BANK0
   269  07EE  1383               	bcf	3,7	;select IRP bank0
   270  07EF  304B               	movlw	low (__pdataBANK0+17)
   271  07F0  00FD               	movwf	btemp+-1
   272  07F1  3006               	movlw	high __pidataBANK0
   273  07F2  00FE               	movwf	btemp
   274  07F3  3077               	movlw	low __pidataBANK0
   275  07F4  00FF               	movwf	btemp+1
   276  07F5  303A               	movlw	low __pdataBANK0
   277  07F6  0084               	movwf	4
   278  07F7  120A  118A  268C  120A  118A  	fcall	init_ram0
   279  07FC                     end_of_initialization:	
   280                           ;End of C runtime variable initialization code
   281                           
   282  07FC                     __end_of__initialization:	
   283  07FC  0183               	clrf	3
   284  07FD  120A  118A  2F4B   	ljmp	_main	;jump to C main() function
   285                           
   286                           	psect	dataBANK0
   287  003A                     __pdataBANK0:	
   288  003A                     main@F944:	
   289  003A                     	ds	17
   290                           
   291                           	psect	inittext
   292  0688                     init_fetch0:	
   293                           ;	Called with low address in FSR and high address in W
   294                           
   295  0688  087E               	movf	btemp,w
   296  0689  008A               	movwf	10
   297  068A  087F               	movf	btemp+1,w
   298  068B  0082               	movwf	2
   299  068C                     init_ram0:	
   300                           ;Called with:
   301                           ;	high address of idata address in btemp 
   302                           ;	low address of idata address in btemp+1 
   303                           ;	low address of data in FSR
   304                           ;	high address + 1 of data in btemp-1
   305                           
   306  068C  120A  118A  2688  120A  118A  	fcall	init_fetch0
   307  0691  0080               	movwf	0
   308  0692  0A84               	incf	4,f
   309  0693  0804               	movf	4,w
   310  0694  067D               	xorwf	btemp+-1,w
   311  0695  1903               	btfsc	3,2
   312  0696  3400               	retlw	0
   313  0697  0AFF               	incf	btemp+1,f
   314  0698  1903               	btfsc	3,2
   315  0699  0AFE               	incf	btemp,f
   316  069A  2E8C               	goto	init_ram0
   317                           
   318                           	psect	cstackCOMMON
   319  0070                     __pcstackCOMMON:	
   320  0070                     ?_clcd_write:	
   321  0070                     ?_init_display_controller:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ?_init_clcd:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ?_init_config:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_main:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_strlen:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     clcd_write@mode:	
   337                           ; 2 bytes @ 0x0
   338                           
   339                           
   340                           ; 1 bytes @ 0x0
   341  0070                     	ds	1
   342  0071                     ??_clcd_write:	
   343                           
   344                           ; 1 bytes @ 0x1
   345  0071                     	ds	1
   346  0072                     ??_strlen:	
   347                           
   348                           ; 1 bytes @ 0x2
   349  0072                     	ds	1
   350  0073                     clcd_write@byte:	
   351  0073                     strlen@s:	
   352                           ; 1 bytes @ 0x3
   353                           
   354                           
   355                           ; 1 bytes @ 0x3
   356  0073                     	ds	1
   357  0074                     ??_init_display_controller:	
   358  0074                     ?_clcd_print:	
   359                           ; 1 bytes @ 0x4
   360                           
   361  0074                     clcd_print@addr:	
   362                           ; 1 bytes @ 0x4
   363                           
   364  0074                     strlen@cp:	
   365                           ; 1 bytes @ 0x4
   366                           
   367                           
   368                           ; 1 bytes @ 0x4
   369  0074                     	ds	1
   370  0075                     ??_clcd_print:	
   371                           
   372                           ; 1 bytes @ 0x5
   373  0075                     	ds	1
   374  0076                     ??_init_clcd:	
   375  0076                     ??_init_config:	
   376                           ; 1 bytes @ 0x6
   377                           
   378  0076                     clcd_print@str:	
   379                           ; 1 bytes @ 0x6
   380                           
   381                           
   382                           ; 1 bytes @ 0x6
   383  0076                     	ds	1
   384  0077                     ??_main:	
   385                           
   386                           ; 1 bytes @ 0x7
   387  0077                     	ds	4
   388                           
   389                           	psect	cstackBANK0
   390  0020                     __pcstackBANK0:	
   391  0020                     main@data:	
   392                           
   393                           ; 17 bytes @ 0x0
   394  0020                     	ds	17
   395  0031                     main@wait:	
   396                           
   397                           ; 4 bytes @ 0x11
   398  0031                     	ds	4
   399  0035                     main@c:	
   400                           
   401                           ; 1 bytes @ 0x15
   402  0035                     	ds	1
   403  0036                     main@len:	
   404                           
   405                           ; 2 bytes @ 0x16
   406  0036                     	ds	2
   407  0038                     main@i:	
   408                           
   409                           ; 2 bytes @ 0x18
   410  0038                     	ds	2
   411                           
   412                           	psect	maintext
   413  074B                     __pmaintext:	
   414 ;;
   415 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   416 ;;
   417 ;; *************** function _main *****************
   418 ;; Defined at:
   419 ;;		line 17 in file "main.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;		None
   422 ;; Auto vars:     Size  Location     Type
   423 ;;  wait            4   17[BANK0 ] unsigned long 
   424 ;;  data           17    0[BANK0 ] unsigned char [17]
   425 ;;  i               2   24[BANK0 ] int 
   426 ;;  len             2   22[BANK0 ] int 
   427 ;;  c               1   21[BANK0 ] unsigned char 
   428 ;; Return value:  Size  Location     Type
   429 ;;                  1    wreg      void 
   430 ;; Registers used:
   431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   432 ;; Tracked objects:
   433 ;;		On entry : B00/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   437 ;;      Params:         0       0       0       0       0
   438 ;;      Locals:         0      26       0       0       0
   439 ;;      Temps:          4       0       0       0       0
   440 ;;      Totals:         4      26       0       0       0
   441 ;;Total ram usage:       30 bytes
   442 ;; Hardware stack levels required when called:    4
   443 ;; This function calls:
   444 ;;		_clcd_print
   445 ;;		_init_config
   446 ;;		_strlen
   447 ;; This function is called by:
   448 ;;		Startup code after reset
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           
   453                           ;psect for function _main
   454  074B                     _main:	
   455  074B                     l800:	
   456                           ;incstack = 0
   457                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   458                           
   459                           
   460                           ;main.c: 18:         data[16] = 0;
   461  074B  120A  118A  2666  120A  118A  	fcall	_init_config
   462  0750                     l802:	
   463                           
   464                           ;main.c: 19:         clcd_print(data,(0x80 + 0));
   465  0750  3020               	movlw	main@data& (0+255)
   466  0751  0084               	movwf	4
   467  0752  303A               	movlw	low main@F944
   468  0753  00F7               	movwf	??_main
   469  0754  0804               	movf	4,w
   470  0755  00F8               	movwf	??_main+1
   471  0756  3011               	movlw	17
   472  0757  00F9               	movwf	??_main+2
   473  0758                     u130:	
   474  0758  0877               	movf	??_main,w
   475  0759  0084               	movwf	4
   476  075A  1383               	bcf	3,7	;select IRP bank0
   477  075B  0800               	movf	0,w
   478  075C  00FA               	movwf	??_main+3
   479  075D  0AF7               	incf	??_main,f
   480  075E  0878               	movf	??_main+1,w
   481  075F  0084               	movwf	4
   482  0760  087A               	movf	??_main+3,w
   483  0761  0080               	movwf	0
   484  0762  0AF8               	incf	??_main+1,f
   485  0763  0BF9               	decfsz	??_main+2,f
   486  0764  2F58               	goto	u130
   487  0765                     l804:	
   488                           
   489                           ;main.c: 20:         for(unsigned long int wait = 100000;wait--;);;main.c: 21:         }
   490  0765  3020               	movlw	(low (main@data| 0))& (0+255)
   491  0766  120A  118A  269B  120A  118A  	fcall	_strlen
   492  076B  0871               	movf	?_strlen+1,w
   493  076C  1283               	bcf	3,5	;RP0=0, select bank0
   494  076D  1303               	bcf	3,6	;RP1=0, select bank0
   495  076E  00B7               	movwf	main@len+1
   496  076F  0870               	movf	?_strlen,w
   497  0770  00B6               	movwf	main@len
   498  0771                     l806:	
   499  0771  0836               	movf	main@len,w
   500  0772  3EFF               	addlw	255
   501  0773  3E20               	addlw	(low (main@data| 0))& (0+255)
   502  0774  0084               	movwf	4
   503  0775  1383               	bcf	3,7	;select IRP bank0
   504  0776  0800               	movf	0,w
   505  0777  00F7               	movwf	??_main
   506  0778  0877               	movf	??_main,w
   507  0779  00B5               	movwf	main@c
   508  077A                     l808:	
   509  077A  0836               	movf	main@len,w
   510  077B  3EFF               	addlw	255
   511  077C  00B8               	movwf	main@i
   512  077D  0837               	movf	main@len+1,w
   513  077E  1803               	skipnc
   514  077F  3E01               	addlw	1
   515  0780  3EFF               	addlw	255
   516  0781  00B9               	movwf	main@i+1
   517  0782                     l810:	
   518  0782  0839               	movf	main@i+1,w
   519  0783  3A80               	xorlw	128
   520  0784  00FF               	movwf	btemp+1
   521  0785  3080               	movlw	128
   522  0786  027F               	subwf	btemp+1,w
   523  0787  1D03               	skipz
   524  0788  2F8B               	goto	u145
   525  0789  3001               	movlw	1
   526  078A  0238               	subwf	main@i,w
   527  078B                     u145:	
   528  078B  1803               	skipnc
   529  078C  2F8E               	goto	u141
   530  078D  2F8F               	goto	u140
   531  078E                     u141:	
   532  078E  2F90               	goto	l814
   533  078F                     u140:	
   534  078F  2FA5               	goto	l820
   535  0790                     l814:	
   536  0790  1283               	bcf	3,5	;RP0=0, select bank0
   537  0791  1303               	bcf	3,6	;RP1=0, select bank0
   538  0792  0838               	movf	main@i,w
   539  0793  3EFF               	addlw	255
   540  0794  3E20               	addlw	(low (main@data| 0))& (0+255)
   541  0795  0084               	movwf	4
   542  0796  1383               	bcf	3,7	;select IRP bank0
   543  0797  0800               	movf	0,w
   544  0798  00F7               	movwf	??_main
   545  0799  0838               	movf	main@i,w
   546  079A  3E20               	addlw	(low (main@data| 0))& (0+255)
   547  079B  0084               	movwf	4
   548  079C  0877               	movf	??_main,w
   549  079D  0080               	movwf	0
   550  079E                     l816:	
   551  079E  30FF               	movlw	255
   552  079F  07B8               	addwf	main@i,f
   553  07A0  1803               	skipnc
   554  07A1  0AB9               	incf	main@i+1,f
   555  07A2  30FF               	movlw	255
   556  07A3  07B9               	addwf	main@i+1,f
   557  07A4  2F82               	goto	l810
   558  07A5                     l820:	
   559  07A5  1283               	bcf	3,5	;RP0=0, select bank0
   560  07A6  1303               	bcf	3,6	;RP1=0, select bank0
   561  07A7  0835               	movf	main@c,w
   562  07A8  00F7               	movwf	??_main
   563  07A9  0877               	movf	??_main,w
   564  07AA  00A0               	movwf	main@data
   565  07AB                     l822:	
   566  07AB  01B0               	clrf	main@data+16
   567  07AC                     l824:	
   568  07AC  3080               	movlw	128
   569  07AD  00F7               	movwf	??_main
   570  07AE  0877               	movf	??_main,w
   571  07AF  00F4               	movwf	clcd_print@addr
   572  07B0  3020               	movlw	(low (main@data| 0))& (0+255)
   573  07B1  120A  118A  26D4  120A  118A  	fcall	_clcd_print
   574  07B6                     l826:	
   575  07B6  3000               	movlw	0
   576  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   577  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   578  07B9  00B4               	movwf	main@wait+3
   579  07BA  3001               	movlw	1
   580  07BB  00B3               	movwf	main@wait+2
   581  07BC  3086               	movlw	134
   582  07BD  00B2               	movwf	main@wait+1
   583  07BE  30A0               	movlw	160
   584  07BF  00B1               	movwf	main@wait
   585  07C0                     l828:	
   586  07C0  3001               	movlw	1
   587  07C1  00F7               	movwf	??_main
   588  07C2  3000               	movlw	0
   589  07C3  00F8               	movwf	??_main+1
   590  07C4  3000               	movlw	0
   591  07C5  00F9               	movwf	??_main+2
   592  07C6  3000               	movlw	0
   593  07C7  00FA               	movwf	??_main+3
   594  07C8  0877               	movf	??_main,w
   595  07C9  02B1               	subwf	main@wait,f
   596  07CA  0878               	movf	??_main+1,w
   597  07CB  1C03               	skipc
   598  07CC  0F78               	incfsz	??_main+1,w
   599  07CD  2FCF               	goto	u155
   600  07CE  2FD0               	goto	u156
   601  07CF                     u155:	
   602  07CF  02B2               	subwf	main@wait+1,f
   603  07D0                     u156:	
   604  07D0  0879               	movf	??_main+2,w
   605  07D1  1C03               	skipc
   606  07D2  0F79               	incfsz	??_main+2,w
   607  07D3  2FD5               	goto	u157
   608  07D4  2FD6               	goto	u158
   609  07D5                     u157:	
   610  07D5  02B3               	subwf	main@wait+2,f
   611  07D6                     u158:	
   612  07D6  087A               	movf	??_main+3,w
   613  07D7  1C03               	skipc
   614  07D8  0F7A               	incfsz	??_main+3,w
   615  07D9  2FDB               	goto	u159
   616  07DA  2FDC               	goto	u150
   617  07DB                     u159:	
   618  07DB  02B4               	subwf	main@wait+3,f
   619  07DC                     u150:	
   620  07DC  0A31               	incf	main@wait,w
   621  07DD  1D03               	skipz
   622  07DE  2FE9               	goto	u161
   623  07DF  0A32               	incf	main@wait+1,w
   624  07E0  1D03               	skipz
   625  07E1  2FE9               	goto	u161
   626  07E2  0A33               	incf	main@wait+2,w
   627  07E3  1D03               	skipz
   628  07E4  2FE9               	goto	u161
   629  07E5  0A34               	incf	main@wait+3,w
   630  07E6  1D03               	btfss	3,2
   631  07E7  2FE9               	goto	u161
   632  07E8  2FEA               	goto	u160
   633  07E9                     u161:	
   634  07E9  2FC0               	goto	l828
   635  07EA                     u160:	
   636  07EA  2F71               	goto	l806
   637  07EB  120A  118A  2800   	ljmp	start
   638  07EE                     __end_of_main:	
   639                           
   640                           	psect	text1
   641  069B                     __ptext1:	
   642 ;; *************** function _strlen *****************
   643 ;; Defined at:
   644 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strlen.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  s               1    wreg     PTR const unsigned char 
   647 ;;		 -> main@data(17), 
   648 ;; Auto vars:     Size  Location     Type
   649 ;;  s               1    3[COMMON] PTR const unsigned char 
   650 ;;		 -> main@data(17), 
   651 ;;  cp              1    4[COMMON] PTR const unsigned char 
   652 ;;		 -> main@data(17), 
   653 ;; Return value:  Size  Location     Type
   654 ;;                  2    0[COMMON] unsigned int 
   655 ;; Registers used:
   656 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   662 ;;      Params:         2       0       0       0       0
   663 ;;      Locals:         2       0       0       0       0
   664 ;;      Temps:          1       0       0       0       0
   665 ;;      Totals:         5       0       0       0       0
   666 ;;Total ram usage:        5 bytes
   667 ;; Hardware stack levels used:    1
   668 ;; This function calls:
   669 ;;		Nothing
   670 ;; This function is called by:
   671 ;;		_main
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           
   676                           ;psect for function _strlen
   677  069B                     _strlen:	
   678                           
   679                           ;incstack = 0
   680                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
   681                           ;strlen@s stored from wreg
   682  069B  00F3               	movwf	strlen@s
   683  069C                     l788:	
   684  069C  0873               	movf	strlen@s,w
   685  069D  00F2               	movwf	??_strlen
   686  069E  0872               	movf	??_strlen,w
   687  069F  00F4               	movwf	strlen@cp
   688  06A0  2EA5               	goto	l792
   689  06A1                     l790:	
   690  06A1  3001               	movlw	1
   691  06A2  00F2               	movwf	??_strlen
   692  06A3  0872               	movf	??_strlen,w
   693  06A4  07F4               	addwf	strlen@cp,f
   694  06A5                     l792:	
   695  06A5  0874               	movf	strlen@cp,w
   696  06A6  0084               	movwf	4
   697  06A7  1383               	bcf	3,7	;select IRP bank0
   698  06A8  0800               	movf	0,w
   699  06A9  1D03               	btfss	3,2
   700  06AA  2EAC               	goto	u121
   701  06AB  2EAD               	goto	u120
   702  06AC                     u121:	
   703  06AC  2EA1               	goto	l790
   704  06AD                     u120:	
   705  06AD                     l794:	
   706  06AD  0873               	movf	strlen@s,w
   707  06AE  0274               	subwf	strlen@cp,w
   708  06AF  00F0               	movwf	?_strlen
   709  06B0  01F1               	clrf	?_strlen+1
   710  06B1  1BF0               	btfsc	?_strlen,7
   711  06B2  03F1               	decf	?_strlen+1,f
   712  06B3                     l590:	
   713  06B3  0008               	return
   714  06B4                     __end_of_strlen:	
   715                           
   716                           	psect	text2
   717  0666                     __ptext2:	
   718 ;; *************** function _init_config *****************
   719 ;; Defined at:
   720 ;;		line 13 in file "main.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;		None
   723 ;; Auto vars:     Size  Location     Type
   724 ;;		None
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, status,2, status,0, pclath, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         0       0       0       0       0
   735 ;;      Locals:         0       0       0       0       0
   736 ;;      Temps:          0       0       0       0       0
   737 ;;      Totals:         0       0       0       0       0
   738 ;;Total ram usage:        0 bytes
   739 ;; Hardware stack levels used:    1
   740 ;; Hardware stack levels required when called:    3
   741 ;; This function calls:
   742 ;;		_init_clcd
   743 ;; This function is called by:
   744 ;;		_main
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           
   749                           ;psect for function _init_config
   750  0666                     _init_config:	
   751  0666                     l786:	
   752                           ;incstack = 0
   753                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   754                           
   755                           
   756                           ;main.c: 14:         {
   757  0666  120A  118A  266C  120A  118A  	fcall	_init_clcd
   758  066B                     l41:	
   759  066B  0008               	return
   760  066C                     __end_of_init_config:	
   761                           
   762                           	psect	text3
   763  066C                     __ptext3:	
   764 ;; *************** function _init_clcd *****************
   765 ;; Defined at:
   766 ;;		line 37 in file "clcd.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;		None
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, status,2, status,0, pclath, cstack
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   780 ;;      Params:         0       0       0       0       0
   781 ;;      Locals:         0       0       0       0       0
   782 ;;      Temps:          0       0       0       0       0
   783 ;;      Totals:         0       0       0       0       0
   784 ;;Total ram usage:        0 bytes
   785 ;; Hardware stack levels used:    1
   786 ;; Hardware stack levels required when called:    2
   787 ;; This function calls:
   788 ;;		_init_display_controller
   789 ;; This function is called by:
   790 ;;		_init_config
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           
   795                           ;psect for function _init_clcd
   796  066C                     _init_clcd:	
   797  066C                     l770:	
   798                           ;incstack = 0
   799                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
   800                           
   801                           
   802                           ;clcd.c: 40:     TRISD = 0x00;
   803  066C  1683               	bsf	3,5	;RP0=1, select bank1
   804  066D  1303               	bcf	3,6	;RP1=0, select bank1
   805  066E  0188               	clrf	8	;volatile
   806  066F                     l772:	
   807                           
   808                           ;clcd.c: 43:     TRISE2 = 0;
   809  066F  1109               	bcf	9,2	;volatile
   810  0670                     l774:	
   811                           
   812                           ;clcd.c: 44:     TRISE1 = 0;
   813  0670  1089               	bcf	9,1	;volatile
   814  0671                     l776:	
   815                           
   816                           ;clcd.c: 46:     init_display_controller();
   817  0671  120A  118A  26F4  120A  118A  	fcall	_init_display_controller
   818  0676                     l23:	
   819  0676  0008               	return
   820  0677                     __end_of_init_clcd:	
   821                           
   822                           	psect	text4
   823  06F4                     __ptext4:	
   824 ;; *************** function _init_display_controller *****************
   825 ;; Defined at:
   826 ;;		line 16 in file "clcd.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;		None
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      void 
   833 ;; Registers used:
   834 ;;		wreg, status,2, status,0, pclath, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   840 ;;      Params:         0       0       0       0       0
   841 ;;      Locals:         0       0       0       0       0
   842 ;;      Temps:          2       0       0       0       0
   843 ;;      Totals:         2       0       0       0       0
   844 ;;Total ram usage:        2 bytes
   845 ;; Hardware stack levels used:    1
   846 ;; Hardware stack levels required when called:    1
   847 ;; This function calls:
   848 ;;		_clcd_write
   849 ;; This function is called by:
   850 ;;		_init_clcd
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           
   855                           ;psect for function _init_display_controller
   856  06F4                     _init_display_controller:	
   857  06F4                     l750:	
   858                           ;incstack = 0
   859                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
   860                           
   861                           
   862                           ;clcd.c: 19:     _delay((unsigned long)((30)*(20000000/4000.0)));
   863  06F4  30C3               	movlw	195
   864  06F5  00F5               	movwf	??_init_display_controller+1
   865  06F6  30CD               	movlw	205
   866  06F7  00F4               	movwf	??_init_display_controller
   867  06F8                     u177:	
   868  06F8  0BF4               	decfsz	??_init_display_controller,f
   869  06F9  2EF8               	goto	u177
   870  06FA  0BF5               	decfsz	??_init_display_controller+1,f
   871  06FB  2EF8               	goto	u177
   872  06FC                     l752:	
   873                           
   874                           ;clcd.c: 22:     clcd_write(0x33, 0);
   875  06FC  01F0               	clrf	clcd_write@mode
   876  06FD  3033               	movlw	51
   877  06FE  120A  118A  26B4  120A  118A  	fcall	_clcd_write
   878  0703                     l754:	
   879                           
   880                           ;clcd.c: 23:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   881  0703  301B               	movlw	27
   882  0704  00F5               	movwf	??_init_display_controller+1
   883  0705  309E               	movlw	158
   884  0706  00F4               	movwf	??_init_display_controller
   885  0707                     u187:	
   886  0707  0BF4               	decfsz	??_init_display_controller,f
   887  0708  2F07               	goto	u187
   888  0709  0BF5               	decfsz	??_init_display_controller+1,f
   889  070A  2F07               	goto	u187
   890  070B  0000               	nop
   891                           
   892                           ;clcd.c: 24:     clcd_write(0x33, 0);
   893  070C  01F0               	clrf	clcd_write@mode
   894  070D  3033               	movlw	51
   895  070E  120A  118A  26B4  120A  118A  	fcall	_clcd_write
   896  0713                     l756:	
   897                           
   898                           ;clcd.c: 25:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   899  0713  30A6               	movlw	166
   900  0714  00F4               	movwf	??_init_display_controller
   901  0715                     u197:	
   902  0715  0BF4               	decfsz	??_init_display_controller,f
   903  0716  2F15               	goto	u197
   904  0717  0000               	nop
   905  0718                     l758:	
   906                           
   907                           ;clcd.c: 26:     clcd_write(0x33, 0);
   908  0718  01F0               	clrf	clcd_write@mode
   909  0719  3033               	movlw	51
   910  071A  120A  118A  26B4  120A  118A  	fcall	_clcd_write
   911  071F                     l760:	
   912                           
   913                           ;clcd.c: 27:     _delay((unsigned long)((1)*(20000000/4000000.0)));
   914  071F  2F20               	nop2	;2 cycle nop
   915  0720  2F21               	nop2	;2 cycle nop
   916  0721  0000               	nop
   917  0722                     l762:	
   918                           
   919                           ;clcd.c: 29:     clcd_write(0x38, 0);
   920  0722  01F0               	clrf	clcd_write@mode
   921  0723  3038               	movlw	56
   922  0724  120A  118A  26B4  120A  118A  	fcall	_clcd_write
   923  0729                     l764:	
   924                           
   925                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   926  0729  30A6               	movlw	166
   927  072A  00F4               	movwf	??_init_display_controller
   928  072B                     u207:	
   929  072B  0BF4               	decfsz	??_init_display_controller,f
   930  072C  2F2B               	goto	u207
   931  072D  0000               	nop
   932                           
   933                           ;clcd.c: 31:     clcd_write(0x01, 0);
   934  072E  01F0               	clrf	clcd_write@mode
   935  072F  3001               	movlw	1
   936  0730  120A  118A  26B4  120A  118A  	fcall	_clcd_write
   937  0735                     l766:	
   938                           
   939                           ;clcd.c: 32:     _delay((unsigned long)((500)*(20000000/4000000.0)));
   940  0735  3004               	movlw	4
   941  0736  00F5               	movwf	??_init_display_controller+1
   942  0737  303D               	movlw	61
   943  0738  00F4               	movwf	??_init_display_controller
   944  0739                     u217:	
   945  0739  0BF4               	decfsz	??_init_display_controller,f
   946  073A  2F39               	goto	u217
   947  073B  0BF5               	decfsz	??_init_display_controller+1,f
   948  073C  2F39               	goto	u217
   949  073D  2F3E               	nop2
   950  073E                     l768:	
   951                           
   952                           ;clcd.c: 33:     clcd_write(0x0C, 0);
   953  073E  01F0               	clrf	clcd_write@mode
   954  073F  300C               	movlw	12
   955  0740  120A  118A  26B4  120A  118A  	fcall	_clcd_write
   956                           
   957                           ;clcd.c: 34:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   958  0745  30A6               	movlw	166
   959  0746  00F4               	movwf	??_init_display_controller
   960  0747                     u227:	
   961  0747  0BF4               	decfsz	??_init_display_controller,f
   962  0748  2F47               	goto	u227
   963  0749  0000               	nop
   964  074A                     l20:	
   965  074A  0008               	return
   966  074B                     __end_of_init_display_controller:	
   967                           
   968                           	psect	text5
   969  06D4                     __ptext5:	
   970 ;; *************** function _clcd_print *****************
   971 ;; Defined at:
   972 ;;		line 55 in file "clcd.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;  str             1    wreg     PTR const unsigned char 
   975 ;;		 -> main@data(17), 
   976 ;;  addr            1    4[COMMON] unsigned char 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  str             1    6[COMMON] PTR const unsigned char 
   979 ;;		 -> main@data(17), 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   989 ;;      Params:         1       0       0       0       0
   990 ;;      Locals:         1       0       0       0       0
   991 ;;      Temps:          1       0       0       0       0
   992 ;;      Totals:         3       0       0       0       0
   993 ;;Total ram usage:        3 bytes
   994 ;; Hardware stack levels used:    1
   995 ;; Hardware stack levels required when called:    1
   996 ;; This function calls:
   997 ;;		_clcd_write
   998 ;; This function is called by:
   999 ;;		_main
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           
  1004                           ;psect for function _clcd_print
  1005  06D4                     _clcd_print:	
  1006                           
  1007                           ;incstack = 0
  1008                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1009                           ;clcd_print@str stored from wreg
  1010  06D4  00F6               	movwf	clcd_print@str
  1011  06D5                     l778:	
  1012                           
  1013                           ;clcd.c: 55: void clcd_print(const char *str, unsigned char addr);clcd.c: 56: {;clcd.c: 
      +                          57:     clcd_write(addr, 0);
  1014  06D5  01F0               	clrf	clcd_write@mode
  1015  06D6  0874               	movf	clcd_print@addr,w
  1016  06D7  120A  118A  26B4  120A  118A  	fcall	_clcd_write
  1017                           
  1018                           ;clcd.c: 59:     while (*str != '\0')
  1019  06DC  2EEB               	goto	l784
  1020  06DD                     l780:	
  1021                           
  1022                           ;clcd.c: 60:     {;clcd.c: 61:         clcd_write(*str, 1);
  1023  06DD  01F0               	clrf	clcd_write@mode
  1024  06DE  0AF0               	incf	clcd_write@mode,f
  1025  06DF  0876               	movf	clcd_print@str,w
  1026  06E0  0084               	movwf	4
  1027  06E1  0800               	movf	0,w
  1028  06E2  120A  118A  26B4  120A  118A  	fcall	_clcd_write
  1029  06E7                     l782:	
  1030                           
  1031                           ;clcd.c: 62:         str++;
  1032  06E7  3001               	movlw	1
  1033  06E8  00F5               	movwf	??_clcd_print
  1034  06E9  0875               	movf	??_clcd_print,w
  1035  06EA  07F6               	addwf	clcd_print@str,f
  1036  06EB                     l784:	
  1037                           
  1038                           ;clcd.c: 59:     while (*str != '\0')
  1039  06EB  0876               	movf	clcd_print@str,w
  1040  06EC  0084               	movwf	4
  1041  06ED  1383               	bcf	3,7	;select IRP bank0
  1042  06EE  0800               	movf	0,w
  1043  06EF  1D03               	btfss	3,2
  1044  06F0  2EF2               	goto	u111
  1045  06F1  2EF3               	goto	u110
  1046  06F2                     u111:	
  1047  06F2  2EDD               	goto	l780
  1048  06F3                     u110:	
  1049  06F3                     l32:	
  1050  06F3  0008               	return
  1051  06F4                     __end_of_clcd_print:	
  1052                           
  1053                           	psect	text6
  1054  06B4                     __ptext6:	
  1055 ;; *************** function _clcd_write *****************
  1056 ;; Defined at:
  1057 ;;		line 4 in file "clcd.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;  byte            1    wreg     unsigned char 
  1060 ;;  mode            1    0[COMMON] unsigned char 
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  byte            1    3[COMMON] unsigned char 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1072 ;;      Params:         1       0       0       0       0
  1073 ;;      Locals:         1       0       0       0       0
  1074 ;;      Temps:          2       0       0       0       0
  1075 ;;      Totals:         4       0       0       0       0
  1076 ;;Total ram usage:        4 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; This function calls:
  1079 ;;		Nothing
  1080 ;; This function is called by:
  1081 ;;		_init_display_controller
  1082 ;;		_clcd_print
  1083 ;;		_clcd_putch
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           
  1088                           ;psect for function _clcd_write
  1089  06B4                     _clcd_write:	
  1090                           
  1091                           ;incstack = 0
  1092                           ; Regs used in _clcd_write: [wreg]
  1093                           ;clcd_write@byte stored from wreg
  1094  06B4  00F3               	movwf	clcd_write@byte
  1095  06B5                     l742:	
  1096                           
  1097                           ;clcd.c: 4: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;
      +                          clcd.c: 6:     RE2 = mode;
  1098  06B5  1870               	btfsc	clcd_write@mode,0
  1099  06B6  2EB8               	goto	u91
  1100  06B7  2EBC               	goto	u90
  1101  06B8                     u91:	
  1102  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  1103  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  1104  06BA  1509               	bsf	9,2	;volatile
  1105  06BB  2EBF               	goto	u104
  1106  06BC                     u90:	
  1107  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  1108  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  1109  06BE  1109               	bcf	9,2	;volatile
  1110  06BF                     u104:	
  1111  06BF                     l744:	
  1112                           
  1113                           ;clcd.c: 7:     PORTD = byte;
  1114  06BF  0873               	movf	clcd_write@byte,w
  1115  06C0  0088               	movwf	8	;volatile
  1116  06C1                     l746:	
  1117                           
  1118                           ;clcd.c: 9:     RE1 = 1;
  1119  06C1  1489               	bsf	9,1	;volatile
  1120                           
  1121                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1122  06C2  30A6               	movlw	166
  1123  06C3  00F1               	movwf	??_clcd_write
  1124  06C4                     u237:	
  1125  06C4  0BF1               	decfsz	??_clcd_write,f
  1126  06C5  2EC4               	goto	u237
  1127  06C6  0000               	nop
  1128  06C7                     l748:	
  1129                           
  1130                           ;clcd.c: 11:     RE1 = 0;
  1131  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1132  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1133  06C9  1089               	bcf	9,1	;volatile
  1134                           
  1135                           ;clcd.c: 13:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1136  06CA  301B               	movlw	27
  1137  06CB  00F2               	movwf	??_clcd_write+1
  1138  06CC  309E               	movlw	158
  1139  06CD  00F1               	movwf	??_clcd_write
  1140  06CE                     u247:	
  1141  06CE  0BF1               	decfsz	??_clcd_write,f
  1142  06CF  2ECE               	goto	u247
  1143  06D0  0BF2               	decfsz	??_clcd_write+1,f
  1144  06D1  2ECE               	goto	u247
  1145  06D2  0000               	nop
  1146  06D3                     l17:	
  1147  06D3  0008               	return
  1148  06D4                     __end_of_clcd_write:	
  1149  007E                     btemp	set	126	;btemp
  1150  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     26      43
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 17
		 -> main@data(BANK0[17]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 17
		 -> main@data(BANK0[17]), 

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> main@data(BANK0[17]), 


Critical Paths under _main in COMMON

    _main->_clcd_print
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0    2231
                                              7 COMMON     4     4      0
                                              0 BANK0     26    26      0
                         _clcd_print
                        _init_config
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     804
                          _init_clcd
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     804
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     804
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           3     2      1     980
                                              4 COMMON     3     2      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     804
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1A      2B       5       53.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      36      12        0.0%
ABS                  0      0      36       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jun 13 04:53:03 2020

                               pc 0002                    clcd_print@addr 0074  __size_of_init_display_controller 0057  
                              l20 074A                                l23 0676                                l32 06F3  
                              l17 06D3                                l41 066B                                u90 06BC  
                              u91 06B8                                fsr 0004                               l800 074B  
                             l810 0782                               l802 0750                               l820 07A5  
                             l804 0765                               l742 06B5                               l750 06F4  
                             l590 06B3                               l822 07AB                               l814 0790  
                             l806 0771                               l744 06BF                               l760 071F  
                             l752 06FC                               l824 07AC                               l816 079E  
                             l808 077A                               l746 06C1                               l762 0722  
                             l754 0703                               l770 066C                               l826 07B6  
                             l748 06C7                               l780 06DD                               l764 0729  
                             l756 0713                               l772 066F                               l828 07C0  
                             l782 06E7                               l766 0735                               l758 0718  
                             l774 0670                               l790 06A1                               l784 06EB  
                             l768 073E                               l776 0671                               l792 06A5  
                             l778 06D5                               l786 0666                               l794 06AD  
                             l788 069C                               _RE1 0049                               _RE2 004A  
                             u110 06F3                               u111 06F2                               u104 06BF  
                             u120 06AD                               u121 06AC                               u130 0758  
                             u140 078F                               u141 078E                               u150 07DC  
                             u207 072B                               u160 07EA                               u217 0739  
                             u161 07E9                               u145 078B                               u227 0747  
                             u155 07CF                               u156 07D0                               u237 06C4  
                             u157 07D5                               u158 07D6                               u247 06CE  
                             u159 07DB                               u177 06F8                               u187 0707  
                             u197 0715                               fsr0 0004                               indf 0000  
                            _main 074B                              btemp 007E                              start 0000  
                  clcd_write@byte 0073                    clcd_write@mode 0070                             ?_main 0070  
                   __CFG_WDTE$OFF 0000                      ?_init_config 0070                             _PORTD 0008  
                           _TRISD 0088                             main@c 0035                             main@i 0038  
                           pclath 000A                             status 0003                             wtemp0 007E  
                 __initialization 07EE                      __end_of_main 07EE                            ??_main 0077  
                          _TRISE1 0449                            _TRISE2 044A           _init_display_controller 06F4  
                          _strlen 069B           __end_of__initialization 07FC                    __pcstackCOMMON 0070  
                    __pidataBANK0 0677              __size_of_init_config 0006                __size_of_init_clcd 000B  
       ??_init_display_controller 0074                        _clcd_print 06D4                        _clcd_write 06B4  
                      __pmaintext 074B                           ?_strlen 0070                           __ptext1 069B  
                         __ptext2 0666                           __ptext3 066C                           __ptext4 06F4  
                         __ptext5 06D4                           __ptext6 06B4                   __size_of_strlen 0019  
 __end_of_init_display_controller 074B                 __end_of_init_clcd 0677                           main@len 0036  
            end_of_initialization 07FC                       ?_clcd_print 0074                       ?_clcd_write 0070  
                         strlen@s 0073                     clcd_print@str 0076                    __end_of_strlen 06B4  
             start_initialization 07EE               __size_of_clcd_print 0020               __size_of_clcd_write 0020  
                      init_fetch0 0688                       __pdataBANK0 003A                          ??_strlen 0072  
                   ??_init_config 0076                         ___latbits 0002                     __pcstackBANK0 0020  
                       _init_clcd 066C               __end_of_init_config 066C          ?_init_display_controller 0070  
                    ??_clcd_print 0075                      ??_clcd_write 0071                __end_of_clcd_print 06F4  
              __end_of_clcd_write 06D4                        ?_init_clcd 0070                       _init_config 0666  
                   __size_of_main 00A3                          main@F944 003A                          main@data 0020  
                        main@wait 0031                          init_ram0 068C                       ??_init_clcd 0076  
                        strlen@cp 0074  
