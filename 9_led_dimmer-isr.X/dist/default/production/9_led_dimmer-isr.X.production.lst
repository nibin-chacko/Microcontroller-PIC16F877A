

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jul  2 07:17:59 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0011                     	;# 
   131  0012                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001B                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  0086                     	;# 
   150  0087                     	;# 
   151  0088                     	;# 
   152  0089                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  0091                     	;# 
   157  0092                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  009F                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  0000                     	;# 
   173  0001                     	;# 
   174  0002                     	;# 
   175  0003                     	;# 
   176  0004                     	;# 
   177  0005                     	;# 
   178  0006                     	;# 
   179  0007                     	;# 
   180  0008                     	;# 
   181  0009                     	;# 
   182  000A                     	;# 
   183  000B                     	;# 
   184  000C                     	;# 
   185  000D                     	;# 
   186  000E                     	;# 
   187  000E                     	;# 
   188  000F                     	;# 
   189  0010                     	;# 
   190  0011                     	;# 
   191  0012                     	;# 
   192  0013                     	;# 
   193  0014                     	;# 
   194  0015                     	;# 
   195  0015                     	;# 
   196  0016                     	;# 
   197  0017                     	;# 
   198  0018                     	;# 
   199  0019                     	;# 
   200  001A                     	;# 
   201  001B                     	;# 
   202  001B                     	;# 
   203  001C                     	;# 
   204  001D                     	;# 
   205  001E                     	;# 
   206  001F                     	;# 
   207  0081                     	;# 
   208  0085                     	;# 
   209  0086                     	;# 
   210  0087                     	;# 
   211  0088                     	;# 
   212  0089                     	;# 
   213  008C                     	;# 
   214  008D                     	;# 
   215  008E                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0094                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  009F                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  018C                     	;# 
   231  018D                     	;# 
   232  0000                     	;# 
   233  0001                     	;# 
   234  0002                     	;# 
   235  0003                     	;# 
   236  0004                     	;# 
   237  0005                     	;# 
   238  0006                     	;# 
   239  0007                     	;# 
   240  0008                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  000E                     	;# 
   247  000E                     	;# 
   248  000F                     	;# 
   249  0010                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0014                     	;# 
   254  0015                     	;# 
   255  0015                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001B                     	;# 
   263  001C                     	;# 
   264  001D                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  0081                     	;# 
   268  0085                     	;# 
   269  0086                     	;# 
   270  0087                     	;# 
   271  0088                     	;# 
   272  0089                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009C                     	;# 
   343  009D                     	;# 
   344  009E                     	;# 
   345  009F                     	;# 
   346  010C                     	;# 
   347  010D                     	;# 
   348  010E                     	;# 
   349  010F                     	;# 
   350  018C                     	;# 
   351  018D                     	;# 
   352                           
   353                           	psect	nvBANK0
   354  0020                     __pnvBANK0:	
   355  0020                     _adc_reg_val:	
   356  0020                     	ds	2
   357  001E                     _ADRESH	set	30
   358  0008                     _PORTD	set	8
   359  0040                     _RD0	set	64
   360  0061                     _TMR2IF	set	97
   361  0092                     _TMR2ON	set	146
   362  0091                     _T2CKPS1	set	145
   363  0090                     _T2CKPS0	set	144
   364  00FA                     _nDONE	set	250
   365  00FA                     _GO	set	250
   366  00F8                     _ADON	set	248
   367  005F                     _GIE	set	95
   368  005E                     _PEIE	set	94
   369  0092                     _PR2	set	146
   370  009E                     _ADRESL	set	158
   371  0088                     _TRISD	set	136
   372  0461                     _TMR2IE	set	1121
   373  04FF                     _ADFM	set	1279
   374                           
   375                           ; #config settings
   376  0000                     
   377                           	psect	cinit
   378  000F                     start_initialization:	
   379  000F                     __initialization:	
   380                           
   381                           ; Clear objects allocated to COMMON
   382  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   383  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   384  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   385  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   386  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   387  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   388  0015  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   389  0016  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   390  0017                     end_of_initialization:	
   391                           ;End of C runtime variable initialization code
   392                           
   393  0017                     __end_of__initialization:	
   394  0017  0183               	clrf	3
   395  0018  120A  118A  2891   	ljmp	_main	;jump to C main() function
   396                           
   397                           	psect	bssCOMMON
   398  0070                     __pbssCOMMON:	
   399  0070                     isr@wait:	
   400  0070                     	ds	2
   401  0072                     isr@value:	
   402  0072                     	ds	2
   403  0074                     _loop_counter:	
   404  0074                     	ds	2
   405  0076                     _duty_cycle:	
   406  0076                     	ds	2
   407                           
   408                           	psect	cstackCOMMON
   409  0078                     __pcstackCOMMON:	
   410  0078                     ?_init_timer2:	
   411  0078                     ?_init_adc:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0078                     ?_init_config:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0078                     ?_main:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0078                     ?_isr:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0078                     ??_isr:	
   424                           ; 1 bytes @ 0x0
   425                           
   426                           
   427                           ; 1 bytes @ 0x0
   428  0078                     	ds	2
   429  007A                     ??_init_timer2:	
   430  007A                     ??_init_adc:	
   431                           ; 1 bytes @ 0x2
   432                           
   433  007A                     ??_init_config:	
   434                           ; 1 bytes @ 0x2
   435                           
   436  007A                     ?_read_adc:	
   437                           ; 1 bytes @ 0x2
   438                           
   439                           
   440                           ; 2 bytes @ 0x2
   441  007A                     	ds	2
   442  007C                     ??_read_adc:	
   443  007C                     ??_main:	
   444                           ; 1 bytes @ 0x4
   445                           
   446                           
   447                           	psect	cstackBANK0
   448  0022                     __pcstackBANK0:	
   449                           ; 1 bytes @ 0x4
   450                           
   451  0022                     read_adc@adc_reg_val:	
   452                           
   453                           ; 2 bytes @ 0x0
   454  0022                     	ds	2
   455                           
   456                           	psect	maintext
   457  0091                     __pmaintext:	
   458 ;;
   459 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   460 ;;
   461 ;; *************** function _main *****************
   462 ;; Defined at:
   463 ;;		line 31 in file "main.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;		None
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, status,2, status,0, pclath, cstack
   472 ;; Tracked objects:
   473 ;;		On entry : B00/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   477 ;;      Params:         0       0       0       0       0
   478 ;;      Locals:         0       0       0       0       0
   479 ;;      Temps:          0       0       0       0       0
   480 ;;      Totals:         0       0       0       0       0
   481 ;;Total ram usage:        0 bytes
   482 ;; Hardware stack levels required when called:    3
   483 ;; This function calls:
   484 ;;		_init_config
   485 ;;		_read_adc
   486 ;; This function is called by:
   487 ;;		Startup code after reset
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           
   492                           ;psect for function _main
   493  0091                     _main:	
   494  0091                     l808:	
   495                           ;incstack = 0
   496                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   497                           
   498  0091  120A  118A  20B9  120A  118A  	fcall	_init_config
   499  0096                     l810:	
   500  0096  120A  118A  20A5  120A  118A  	fcall	_read_adc
   501  009B  087B               	movf	?_read_adc+1,w
   502  009C  1283               	bcf	3,5	;RP0=0, select bank0
   503  009D  1303               	bcf	3,6	;RP1=0, select bank0
   504  009E  00A1               	movwf	_adc_reg_val+1
   505  009F  087A               	movf	?_read_adc,w
   506  00A0  00A0               	movwf	_adc_reg_val
   507  00A1  2896               	goto	l810
   508  00A2  120A  118A  280C   	ljmp	start
   509  00A5                     __end_of_main:	
   510                           
   511                           	psect	text1
   512  00A5                     __ptext1:	
   513 ;; *************** function _read_adc *****************
   514 ;; Defined at:
   515 ;;		line 12 in file "adc.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;  adc_reg_val     2    0[BANK0 ] unsigned short 
   520 ;; Return value:  Size  Location     Type
   521 ;;                  2    2[COMMON] unsigned short 
   522 ;; Registers used:
   523 ;;		wreg
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   529 ;;      Params:         2       0       0       0       0
   530 ;;      Locals:         0       2       0       0       0
   531 ;;      Temps:          0       0       0       0       0
   532 ;;      Totals:         2       2       0       0       0
   533 ;;Total ram usage:        4 bytes
   534 ;; Hardware stack levels used:    1
   535 ;; Hardware stack levels required when called:    1
   536 ;; This function calls:
   537 ;;		Nothing
   538 ;; This function is called by:
   539 ;;		_main
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           
   544                           ;psect for function _read_adc
   545  00A5                     _read_adc:	
   546  00A5                     l802:	
   547                           ;incstack = 0
   548                           ; Regs used in _read_adc: [wreg]
   549                           
   550                           
   551                           ;adc.c: 14:     unsigned short adc_reg_val;;adc.c: 17:     GO = 1;
   552  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   553  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   554  00A7  151F               	bsf	31,2	;volatile
   555  00A8                     l49:	
   556                           ;adc.c: 19:     while (nDONE);
   557                           
   558  00A8  191F               	btfsc	31,2	;volatile
   559  00A9  28AB               	goto	u191
   560  00AA  28AC               	goto	u190
   561  00AB                     u191:	
   562  00AB  28A8               	goto	l49
   563  00AC                     u190:	
   564  00AC                     l804:	
   565                           
   566                           ;adc.c: 21:     adc_reg_val = (ADRESH << 8) | ADRESL;
   567  00AC  081E               	movf	30,w	;volatile
   568  00AD  00A3               	movwf	read_adc@adc_reg_val+1
   569  00AE  1683               	bsf	3,5	;RP0=1, select bank1
   570  00AF  1303               	bcf	3,6	;RP1=0, select bank1
   571  00B0  081E               	movf	30,w	;volatile
   572  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   573  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   574  00B3  00A2               	movwf	read_adc@adc_reg_val
   575                           
   576                           ;adc.c: 23:     return adc_reg_val;
   577  00B4  0823               	movf	read_adc@adc_reg_val+1,w
   578  00B5  00FB               	movwf	?_read_adc+1
   579  00B6  0822               	movf	read_adc@adc_reg_val,w
   580  00B7  00FA               	movwf	?_read_adc
   581  00B8                     l52:	
   582  00B8  0008               	return
   583  00B9                     __end_of_read_adc:	
   584                           
   585                           	psect	text2
   586  00B9                     __ptext2:	
   587 ;; *************** function _init_config *****************
   588 ;; Defined at:
   589 ;;		line 20 in file "main.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg, status,2, status,0, pclath, cstack
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   603 ;;      Params:         0       0       0       0       0
   604 ;;      Locals:         0       0       0       0       0
   605 ;;      Temps:          0       0       0       0       0
   606 ;;      Totals:         0       0       0       0       0
   607 ;;Total ram usage:        0 bytes
   608 ;; Hardware stack levels used:    1
   609 ;; Hardware stack levels required when called:    2
   610 ;; This function calls:
   611 ;;		_init_adc
   612 ;;		_init_timer2
   613 ;; This function is called by:
   614 ;;		_main
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           
   619                           ;psect for function _init_config
   620  00B9                     _init_config:	
   621  00B9                     l752:	
   622                           ;incstack = 0
   623                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   624                           
   625                           
   626                           ;main.c: 21: 
   627  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   628  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   629  00BB  0188               	clrf	8	;volatile
   630                           
   631                           ;main.c: 22:     return;
   632  00BC  1683               	bsf	3,5	;RP0=1, select bank1
   633  00BD  1303               	bcf	3,6	;RP1=0, select bank1
   634  00BE  0188               	clrf	8	;volatile
   635  00BF                     l754:	
   636  00BF  120A  118A  20CC  120A  118A  	fcall	_init_timer2
   637  00C4                     l756:	
   638  00C4  120A  118A  20D9  120A  118A  	fcall	_init_adc
   639  00C9                     l758:	
   640  00C9  170B               	bsf	11,6	;volatile
   641  00CA                     l760:	
   642  00CA  178B               	bsf	11,7	;volatile
   643  00CB                     l23:	
   644  00CB  0008               	return
   645  00CC                     __end_of_init_config:	
   646                           
   647                           	psect	text3
   648  00CC                     __ptext3:	
   649 ;; *************** function _init_timer2 *****************
   650 ;; Defined at:
   651 ;;		line 3 in file "Timers.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;		None
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      void 
   658 ;; Registers used:
   659 ;;		wreg
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   665 ;;      Params:         0       0       0       0       0
   666 ;;      Locals:         0       0       0       0       0
   667 ;;      Temps:          0       0       0       0       0
   668 ;;      Totals:         0       0       0       0       0
   669 ;;Total ram usage:        0 bytes
   670 ;; Hardware stack levels used:    1
   671 ;; Hardware stack levels required when called:    1
   672 ;; This function calls:
   673 ;;		Nothing
   674 ;; This function is called by:
   675 ;;		_init_config
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function _init_timer2
   681  00CC                     _init_timer2:	
   682  00CC                     l744:	
   683                           ;incstack = 0
   684                           ; Regs used in _init_timer2: [wreg]
   685                           
   686                           
   687                           ;Timers.c: 7:     T2CKPS0 = 0;
   688  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   689  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   690  00CE  1012               	bcf	18,0	;volatile
   691                           
   692                           ;Timers.c: 8:     T2CKPS1 = 0;
   693  00CF  1092               	bcf	18,1	;volatile
   694                           
   695                           ;Timers.c: 12:     TMR2IE = 1;
   696  00D0  1683               	bsf	3,5	;RP0=1, select bank1
   697  00D1  1303               	bcf	3,6	;RP1=0, select bank1
   698  00D2  148C               	bsf	12,1	;volatile
   699  00D3                     l746:	
   700                           
   701                           ;Timers.c: 17:     PR2 = 250;
   702  00D3  30FA               	movlw	250
   703  00D4  0092               	movwf	18	;volatile
   704  00D5                     l748:	
   705                           
   706                           ;Timers.c: 19:     TMR2ON = 1;
   707  00D5  1283               	bcf	3,5	;RP0=0, select bank0
   708  00D6  1303               	bcf	3,6	;RP1=0, select bank0
   709  00D7  1512               	bsf	18,2	;volatile
   710  00D8                     l65:	
   711  00D8  0008               	return
   712  00D9                     __end_of_init_timer2:	
   713                           
   714                           	psect	text4
   715  00D9                     __ptext4:	
   716 ;; *************** function _init_adc *****************
   717 ;; Defined at:
   718 ;;		line 3 in file "adc.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		None
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   732 ;;      Params:         0       0       0       0       0
   733 ;;      Locals:         0       0       0       0       0
   734 ;;      Temps:          0       0       0       0       0
   735 ;;      Totals:         0       0       0       0       0
   736 ;;Total ram usage:        0 bytes
   737 ;; Hardware stack levels used:    1
   738 ;; Hardware stack levels required when called:    1
   739 ;; This function calls:
   740 ;;		Nothing
   741 ;; This function is called by:
   742 ;;		_init_config
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           
   747                           ;psect for function _init_adc
   748  00D9                     _init_adc:	
   749  00D9                     l750:	
   750                           ;incstack = 0
   751                           ; Regs used in _init_adc: []
   752                           
   753                           
   754                           ;adc.c: 6:     ADFM = 1;
   755  00D9  1683               	bsf	3,5	;RP0=1, select bank1
   756  00DA  1303               	bcf	3,6	;RP1=0, select bank1
   757  00DB  179F               	bsf	31,7	;volatile
   758                           
   759                           ;adc.c: 9:     ADON = 1;
   760  00DC  1283               	bcf	3,5	;RP0=0, select bank0
   761  00DD  1303               	bcf	3,6	;RP1=0, select bank0
   762  00DE  141F               	bsf	31,0	;volatile
   763  00DF                     l46:	
   764  00DF  0008               	return
   765  00E0                     __end_of_init_adc:	
   766                           
   767                           	psect	text5
   768  001B                     __ptext5:	
   769 ;; *************** function _isr *****************
   770 ;; Defined at:
   771 ;;		line 3 in file "isr.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, status,2, status,0
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   785 ;;      Params:         0       0       0       0       0
   786 ;;      Locals:         0       0       0       0       0
   787 ;;      Temps:          2       0       0       0       0
   788 ;;      Totals:         2       0       0       0       0
   789 ;;Total ram usage:        2 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; This function calls:
   792 ;;		Nothing
   793 ;; This function is called by:
   794 ;;		Interrupt level 1
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           
   799                           ;psect for function _isr
   800  001B                     _isr:	
   801  001B                     i1l772:	
   802                           
   803                           ;isr.c: 5:     static unsigned short value;;isr.c: 6:     static unsigned int wait = 0;;
      +                          isr.c: 7:     if(TMR2IF == 1)
   804  001B  1283               	bcf	3,5	;RP0=0, select bank0
   805  001C  1303               	bcf	3,6	;RP1=0, select bank0
   806  001D  1C8C               	btfss	12,1	;volatile
   807  001E  2820               	goto	u11_21
   808  001F  2821               	goto	u11_20
   809  0020                     u11_21:	
   810  0020  288A               	goto	i1l94
   811  0021                     u11_20:	
   812  0021                     i1l774:	
   813                           
   814                           ;isr.c: 8:     {;isr.c: 9:         if(!wait--)
   815  0021  3001               	movlw	1
   816  0022  02F0               	subwf	isr@wait,f
   817  0023  3000               	movlw	0
   818  0024  1C03               	skipc
   819  0025  03F1               	decf	isr@wait+1,f
   820  0026  02F1               	subwf	isr@wait+1,f
   821  0027  0A70               	incf	isr@wait,w
   822  0028  1D03               	skipz
   823  0029  282E               	goto	u12_21
   824  002A  0A71               	incf	isr@wait+1,w
   825  002B  1D03               	btfss	3,2
   826  002C  282E               	goto	u12_21
   827  002D  282F               	goto	u12_20
   828  002E                     u12_21:	
   829  002E  286D               	goto	i1l85
   830  002F                     u12_20:	
   831  002F                     i1l776:	
   832                           
   833                           ;isr.c: 10:         {;isr.c: 11:             wait = 500;
   834  002F  30F4               	movlw	244
   835  0030  00F0               	movwf	isr@wait
   836  0031  3001               	movlw	1
   837  0032  00F1               	movwf	isr@wait+1
   838                           
   839                           ;isr.c: 13:             duty_cycle = adc_reg_val;
   840  0033  0821               	movf	_adc_reg_val+1,w
   841  0034  00F7               	movwf	_duty_cycle+1
   842  0035  0820               	movf	_adc_reg_val,w
   843  0036  00F6               	movwf	_duty_cycle
   844                           
   845                           ;isr.c: 15:             if (duty_cycle > value)
   846  0037  0877               	movf	_duty_cycle+1,w
   847  0038  0273               	subwf	isr@value+1,w
   848  0039  1D03               	skipz
   849  003A  283D               	goto	u13_25
   850  003B  0876               	movf	_duty_cycle,w
   851  003C  0272               	subwf	isr@value,w
   852  003D                     u13_25:	
   853  003D  1803               	skipnc
   854  003E  2840               	goto	u13_21
   855  003F  2841               	goto	u13_20
   856  0040                     u13_21:	
   857  0040  2853               	goto	i1l784
   858  0041                     u13_20:	
   859  0041                     i1l778:	
   860                           
   861                           ;isr.c: 16:             {;isr.c: 17:                 value = duty_cycle;
   862  0041  0877               	movf	_duty_cycle+1,w
   863  0042  00F3               	movwf	isr@value+1
   864  0043  0876               	movf	_duty_cycle,w
   865  0044  00F2               	movwf	isr@value
   866  0045                     i1l780:	
   867                           
   868                           ;isr.c: 18:                 if(duty_cycle != 1024)
   869  0045  3004               	movlw	4
   870  0046  0677               	xorwf	_duty_cycle+1,w
   871  0047  0476               	iorwf	_duty_cycle,w
   872  0048  1903               	btfsc	3,2
   873  0049  284B               	goto	u14_21
   874  004A  284C               	goto	u14_20
   875  004B                     u14_21:	
   876  004B  286D               	goto	i1l85
   877  004C                     u14_20:	
   878  004C                     i1l782:	
   879                           
   880                           ;isr.c: 19:                 {;isr.c: 21:                 duty_cycle += 10;
   881  004C  300A               	movlw	10
   882  004D  07F6               	addwf	_duty_cycle,f
   883  004E  1803               	skipnc
   884  004F  0AF7               	incf	_duty_cycle+1,f
   885  0050  3000               	movlw	0
   886  0051  07F7               	addwf	_duty_cycle+1,f
   887  0052  286D               	goto	i1l85
   888  0053                     i1l784:	
   889  0053  0873               	movf	isr@value+1,w
   890  0054  0277               	subwf	_duty_cycle+1,w
   891  0055  1D03               	skipz
   892  0056  2859               	goto	u15_25
   893  0057  0872               	movf	isr@value,w
   894  0058  0276               	subwf	_duty_cycle,w
   895  0059                     u15_25:	
   896  0059  1803               	skipnc
   897  005A  285C               	goto	u15_21
   898  005B  285D               	goto	u15_20
   899  005C                     u15_21:	
   900  005C  286D               	goto	i1l85
   901  005D                     u15_20:	
   902  005D                     i1l786:	
   903                           
   904                           ;isr.c: 26:             {;isr.c: 27:                 value = duty_cycle;
   905  005D  0877               	movf	_duty_cycle+1,w
   906  005E  00F3               	movwf	isr@value+1
   907  005F  0876               	movf	_duty_cycle,w
   908  0060  00F2               	movwf	isr@value
   909  0061                     i1l788:	
   910                           
   911                           ;isr.c: 28:                 if(duty_cycle != 0)
   912  0061  0876               	movf	_duty_cycle,w
   913  0062  0477               	iorwf	_duty_cycle+1,w
   914  0063  1903               	btfsc	3,2
   915  0064  2866               	goto	u16_21
   916  0065  2867               	goto	u16_20
   917  0066                     u16_21:	
   918  0066  286D               	goto	i1l85
   919  0067                     u16_20:	
   920  0067                     i1l790:	
   921                           
   922                           ;isr.c: 29:                 {;isr.c: 31:                 duty_cycle-=10;
   923  0067  300A               	movlw	10
   924  0068  02F6               	subwf	_duty_cycle,f
   925  0069  3000               	movlw	0
   926  006A  1C03               	skipc
   927  006B  03F7               	decf	_duty_cycle+1,f
   928  006C  02F7               	subwf	_duty_cycle+1,f
   929  006D                     i1l85:	
   930                           ;isr.c: 34:         }
   931                           
   932                           
   933                           ;isr.c: 35:         if(loop_counter <= duty_cycle)
   934  006D  0875               	movf	_loop_counter+1,w
   935  006E  0277               	subwf	_duty_cycle+1,w
   936  006F  1D03               	skipz
   937  0070  2873               	goto	u17_25
   938  0071  0874               	movf	_loop_counter,w
   939  0072  0276               	subwf	_duty_cycle,w
   940  0073                     u17_25:	
   941  0073  1C03               	skipc
   942  0074  2876               	goto	u17_21
   943  0075  2877               	goto	u17_20
   944  0076                     u17_21:	
   945  0076  2879               	goto	i1l91
   946  0077                     u17_20:	
   947  0077                     i1l792:	
   948                           
   949                           ;isr.c: 36:         {;isr.c: 37:             RD0 = 1;
   950  0077  1408               	bsf	8,0	;volatile
   951                           
   952                           ;isr.c: 38:         }
   953  0078  287A               	goto	i1l794
   954  0079                     i1l91:	
   955                           ;isr.c: 39:         else
   956                           
   957                           
   958                           ;isr.c: 40:         {;isr.c: 41:             RD0 = 0;
   959  0079  1008               	bcf	8,0	;volatile
   960  007A                     i1l794:	
   961                           
   962                           ;isr.c: 43:         if(loop_counter == 1024)
   963  007A  3004               	movlw	4
   964  007B  0675               	xorwf	_loop_counter+1,w
   965  007C  0474               	iorwf	_loop_counter,w
   966  007D  1D03               	btfss	3,2
   967  007E  2880               	goto	u18_21
   968  007F  2881               	goto	u18_20
   969  0080                     u18_21:	
   970  0080  2883               	goto	i1l798
   971  0081                     u18_20:	
   972  0081                     i1l796:	
   973                           
   974                           ;isr.c: 44:         {;isr.c: 45:             loop_counter = 0;
   975  0081  01F4               	clrf	_loop_counter
   976  0082  01F5               	clrf	_loop_counter+1
   977  0083                     i1l798:	
   978                           
   979                           ;isr.c: 47:         loop_counter++;
   980  0083  3001               	movlw	1
   981  0084  07F4               	addwf	_loop_counter,f
   982  0085  1803               	skipnc
   983  0086  0AF5               	incf	_loop_counter+1,f
   984  0087  3000               	movlw	0
   985  0088  07F5               	addwf	_loop_counter+1,f
   986  0089                     i1l800:	
   987                           
   988                           ;isr.c: 48:        TMR2IF = 0;
   989  0089  108C               	bcf	12,1	;volatile
   990  008A                     i1l94:	
   991  008A  0879               	movf	??_isr+1,w
   992  008B  008A               	movwf	10
   993  008C  0E78               	swapf	??_isr^(0+4294967168),w
   994  008D  0083               	movwf	3
   995  008E  0EFE               	swapf	btemp,f
   996  008F  0E7E               	swapf	btemp,w
   997  0090  0009               	retfie
   998  0091                     __end_of_isr:	
   999  007E                     btemp	set	126	;btemp
  1000  007E                     wtemp0	set	126
  1001                           
  1002                           	psect	intentry
  1003  0004                     __pintentry:	
  1004                           ;incstack = 0
  1005                           ; Regs used in _isr: [wreg+status,2+status,0]
  1006                           
  1007  0004                     interrupt_function:	
  1008  007E                     saved_w	set	btemp
  1009  0004  00FE               	movwf	btemp
  1010  0005  0E03               	swapf	3,w
  1011  0006  00F8               	movwf	??_isr
  1012  0007  080A               	movf	10,w
  1013  0008  00F9               	movwf	??_isr+1
  1014  0009  120A  118A  281B   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      12
    BANK0            80      2       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_read_adc

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_read_adc

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      34
                        _init_config
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             4     2      2      34
                                              2 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                           _init_adc
                        _init_timer2
 ---------------------------------------------------------------------------------
 (2) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
     _init_adc
     _init_timer2
   _read_adc

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jul  2 07:17:59 2020

                     l23 00CB                       l52 00B8                       l46 00DF  
                     l65 00D8                       l49 00A8                       _GO 00FA  
                    l802 00A5                      l810 0096                      l804 00AC  
                    l750 00D9                      l744 00CC                      l760 00CA  
                    l752 00B9                      l808 0091                      l746 00D3  
                    l754 00BF                      l748 00D5                      l756 00C4  
                    l758 00C9                      _GIE 005F                      _RD0 0040  
                    u190 00AC                      _PR2 0092                      u191 00AB  
                    _isr 001B                     _ADFM 04FF                     ?_isr 0078  
                   _ADON 00F8                     _PEIE 005E                     i1l91 0079  
                   i1l85 006D                     i1l94 008A                     _main 0091  
                   btemp 007E                     start 000C                    ??_isr 0078  
                  ?_main 0078            __CFG_WDTE$OFF 0000                    i1l800 0089  
           ?_init_config 0078                    i1l780 0045                    i1l772 001B  
                  i1l790 0067                    i1l782 004C                    i1l774 0021  
                  i1l792 0077                    i1l784 0053                    i1l776 002F  
                  i1l794 007A                    i1l786 005D                    i1l778 0041  
                  i1l796 0081                    i1l788 0061                    i1l798 0083  
                  u11_20 0021                    u11_21 0020                    u12_20 002F  
                  u12_21 002E                    u13_20 0041                    u13_21 0040  
                  u13_25 003D                    u14_20 004C                    u14_21 004B  
                  u15_20 005D                    u15_21 005C                    u15_25 0059  
                  u16_20 0067                    u16_21 0066                    u17_20 0077  
                  u17_21 0076                    u17_25 0073                    u18_20 0081  
                  u18_21 0080                    _PORTD 0008                    _TRISD 0088  
           ?_init_timer2 0078                    _nDONE 00FA                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00A5                   ??_main 007C                   _ADRESH 001E  
                 _ADRESL 009E                   _TMR2IE 0461                   _TMR2IF 0061  
                 _TMR2ON 0092         __end_of_init_adc 00E0         __end_of_read_adc 00B9  
                 saved_w 007E  __end_of__initialization 0017           __pcstackCOMMON 0078  
   __size_of_init_config 0013     __size_of_init_timer2 000D               __pmaintext 0091  
             __pintentry 0004                  _T2CKPS0 0090                  _T2CKPS1 0091  
              ?_init_adc 0078                ?_read_adc 007A                  __ptext1 00A5  
                __ptext2 00B9                  __ptext3 00CC                  __ptext4 00D9  
                __ptext5 001B             __size_of_isr 0076               _duty_cycle 0076  
   end_of_initialization 0017                  isr@wait 0070               ??_init_adc 007A  
             ??_read_adc 007C              _adc_reg_val 0020      start_initialization 000F  
            __end_of_isr 0091            ??_init_config 007A            ??_init_timer2 007A  
            __pbssCOMMON 0070                ___latbits 0002            __pcstackBANK0 0022  
              __pnvBANK0 0020        __size_of_init_adc 0007        __size_of_read_adc 0014  
    read_adc@adc_reg_val 0022      __end_of_init_config 00CC      __end_of_init_timer2 00D9  
      interrupt_function 0004             _loop_counter 0074              _init_config 00B9  
            _init_timer2 00CC                 _init_adc 00D9                 _read_adc 00A5  
          __size_of_main 0014                 isr@value 0072                 intlevel1 0000  
