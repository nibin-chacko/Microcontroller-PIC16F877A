Version 4.0 HI-TECH Software Intermediate Code
"34 ./clcd.h
[; ;./clcd.h: 34: void init_clcd(void);
[v _init_clcd `(v ~T0 @X0 0 ef ]
"32 ./matrix_keypad.h
[; ;./matrix_keypad.h: 32: void init_matrix_keypad(void);
[v _init_matrix_keypad `(v ~T0 @X0 0 ef ]
[p mainexit ]
"36 ./clcd.h
[; ;./clcd.h: 36: void clcd_print(const char *str, unsigned char addr);
[v _clcd_print `(v ~T0 @X0 0 ef2`*Cuc`uc ]
"35
[; ;./clcd.h: 35: void clcd_putch(const char data, unsigned char addr);
[v _clcd_putch `(v ~T0 @X0 0 ef2`Cuc`uc ]
"31 ./matrix_keypad.h
[; ;./matrix_keypad.h: 31: unsigned char read_matrix_keypad(unsigned char mode);
[v _read_matrix_keypad `(uc ~T0 @X0 0 ef1`uc ]
"37 /opt/microchip/xc8/v2.10/pic/include/c90/string.h
[; ;/opt/microchip/xc8/v2.10/pic/include/c90/string.h: 37: extern char * strcpy(char *, const char *);
[v _strcpy `(*uc ~T0 @X0 0 ef2`*uc`*Cuc ]
"54 /opt/microchip/xc8/v2.10/pic/include/pic16f877a.h
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;/opt/microchip/xc8/v2.10/pic/include/pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"13 main.c
[; ;main.c: 13:     unsigned int wait,wait1 = 1000;
[p x WDTE = OFF ]
"17
[; ;main.c: 17:     char copy_str[17];
[v _pos `i ~T0 @X0 1 e ]
[i _pos
-> 4 `i
]
"18
[; ;main.c: 18: 
[v _start `uc ~T0 @X0 1 e ]
[i _start
-> -> 0 `i `uc
]
[v _edit `uc ~T0 @X0 1 e ]
[i _edit
-> -> 1 `i `uc
]
[v _direction `uc ~T0 @X0 1 e ]
[i _direction
-> -> 1 `i `uc
]
[v _right `uc ~T0 @X0 1 e ]
[i _right
-> -> 1 `i `uc
]
[v _left `uc ~T0 @X0 1 e ]
[i _left
-> -> 0 `i `uc
]
"19
[; ;main.c: 19: 
[v _init_config `(v ~T0 @X0 1 sf ]
{
[e :U _init_config ]
[f ]
"20
[; ;main.c: 20:     clcd_print("ENTER NEW NUMBER", (0x80 + 0));
[e ( _init_clcd ..  ]
"21
[; ;main.c: 21:     clcd_print("Msg:", (0xC0 + 0));
[e ( _init_matrix_keypad ..  ]
"23
[; ;main.c: 23:     {
[e :UE 95 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"25
[; ;main.c: 25:         {
[v _main `(v ~T0 @X0 1 ef ]
{
[e :U _main ]
[f ]
"26
[; ;main.c: 26:             if(!wait--)
[e ( _init_config ..  ]
"27
[; ;main.c: 27:             {
[v _key `uc ~T0 @X0 1 a ]
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[v _digit_place `uc ~T0 @X0 1 a ]
[e = _digit_place -> -> 0 `i `uc ]
[v _temp1 `uc ~T0 @X0 1 a ]
"28
[; ;main.c: 28:                 wait = 500;
[v _wait `ui ~T0 @X0 1 a ]
[v _wait1 `ui ~T0 @X0 1 a ]
[e = _wait1 -> -> 1000 `i `ui ]
[v F959 `uc ~T0 @X0 -> 2 `i s ]
[i F959
:U ..
"29
[; ;main.c: 29: 
-> -> 255 `i `uc
-> -> 48 `ui `uc
..
]
[v _str `uc ~T0 @X0 -> 2 `i a ]
[e = _str F959 ]
[v F961 `uc ~T0 @X0 -> 17 `i s ]
[i F961
:U ..
"30
[; ;main.c: 30:                 clcd_putch(str[i],(0xC0 + pos));
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
..
]
[v _message `uc ~T0 @X0 -> 17 `i a ]
[e = _message F961 ]
"31
[; ;main.c: 31:                 i++;
[e = *U + &U _message * -> -> -> 16 `i `ui `ux -> -> # *U &U _message `ui `ux -> -> 0 `ui `uc ]
"32
[; ;main.c: 32:                 if(i > 1)
[v _copy_str `uc ~T0 @X0 -> 17 `i a ]
"35
[; ;main.c: 35:                 }
[e ( _clcd_print (2 , :s 1C -> + -> 128 `i -> 0 `i `uc ]
"36
[; ;main.c: 36:             }
[e ( _clcd_print (2 , :s 2C -> + -> 192 `i -> 0 `i `uc ]
"37
[; ;main.c: 37:         }
[e :U 98 ]
"38
[; ;main.c: 38:         key = read_matrix_keypad(1);
{
"39
[; ;main.c: 39: 
[e $ ! && == -> _edit `i -> 1 `i == -> _start `i -> 0 `i 100  ]
"40
[; ;main.c: 40:         if(key == 1 && edit)
{
"41
[; ;main.c: 41:         {
[e $ ! ! != -- _wait -> -> 1 `i `ui -> -> 0 `i `ui 101  ]
"42
[; ;main.c: 42:             str[1]++;
{
"43
[; ;main.c: 43:             if(str[1] > '9')
[e = _wait -> -> 500 `i `ui ]
"45
[; ;main.c: 45:                 str[1] = '0';
[e ( _clcd_putch (2 , *U + &U _str * -> _i `ux -> -> # *U &U _str `ui `ux -> + -> 192 `i _pos `uc ]
"46
[; ;main.c: 46:             }
[e ++ _i -> -> 1 `i `uc ]
"47
[; ;main.c: 47: 
[e $ ! > -> _i `i -> 1 `i 102  ]
"48
[; ;main.c: 48:             message[digit_place] = str[1];
{
"49
[; ;main.c: 49:         }
[e = _i -> -> 0 `i `uc ]
"50
[; ;main.c: 50: 
}
[e :U 102 ]
"51
[; ;main.c: 51:         if ((key == 1) && (edit == 0))
}
[e :U 101 ]
"52
[; ;main.c: 52:         {
}
[e :U 100 ]
"53
[; ;main.c: 53:             direction = 0;
[e = _key ( _read_matrix_keypad (1 -> -> 1 `i `uc ]
"55
[; ;main.c: 55:         }
[e $ ! && == -> _key `i -> 1 `i != -> _edit `i -> 0 `i 103  ]
"56
[; ;main.c: 56: 
{
"57
[; ;main.c: 57:         if ((key == 2) && (edit == 0))
[e ++ *U + &U _str * -> -> -> 1 `i `ui `ux -> -> # *U &U _str `ui `ux -> -> 1 `i `uc ]
"58
[; ;main.c: 58:         {
[e $ ! > -> *U + &U _str * -> -> -> 1 `i `ui `ux -> -> # *U &U _str `ui `ux `ui -> 57 `ui 104  ]
"59
[; ;main.c: 59:             direction = 1;
{
"60
[; ;main.c: 60: 
[e = *U + &U _str * -> -> -> 1 `i `ui `ux -> -> # *U &U _str `ui `ux -> -> 48 `ui `uc ]
"61
[; ;main.c: 61:         }
}
[e :U 104 ]
"63
[; ;main.c: 63:          if ((key == 2) && edit )
[e = *U + &U _message * -> _digit_place `ux -> -> # *U &U _message `ui `ux *U + &U _str * -> -> -> 1 `i `ui `ux -> -> # *U &U _str `ui `ux ]
"64
[; ;main.c: 64:         {
}
[e :U 103 ]
"66
[; ;main.c: 66: 
[e $ ! && == -> _key `i -> 1 `i == -> _edit `i -> 0 `i 105  ]
"67
[; ;main.c: 67:                     if (str[1] < '0')
{
"68
[; ;main.c: 68:                     {
[e = _direction -> -> 0 `i `uc ]
"70
[; ;main.c: 70:                     }
}
[e :U 105 ]
"72
[; ;main.c: 72:             message[digit_place]=str[1];
[e $ ! && == -> _key `i -> 2 `i == -> _edit `i -> 0 `i 106  ]
"73
[; ;main.c: 73: 
{
"74
[; ;main.c: 74:         }
[e = _direction -> -> 1 `i `uc ]
"76
[; ;main.c: 76:         if ((key == 5) && edit)
}
[e :U 106 ]
"78
[; ;main.c: 78:             clcd_print("            ",(0xC0 + 4));
[e $ ! && == -> _key `i -> 2 `i != -> _edit `i -> 0 `i 107  ]
"79
[; ;main.c: 79:             clcd_print(message,(0xC0 + 4));
{
"80
[; ;main.c: 80:             str[1]='0';
[e -- *U + &U _str * -> -> -> 1 `i `ui `ux -> -> # *U &U _str `ui `ux -> -> 1 `i `uc ]
"82
[; ;main.c: 82:            if (pos>15)
[e $ ! < -> *U + &U _str * -> -> -> 1 `i `ui `ux -> -> # *U &U _str `ui `ux `ui -> 48 `ui 108  ]
"83
[; ;main.c: 83:            {
{
"84
[; ;main.c: 84:                pos=4;
[e = *U + &U _str * -> -> -> 1 `i `ui `ux -> -> # *U &U _str `ui `ux -> -> 57 `ui `uc ]
"85
[; ;main.c: 85:            }
}
[e :U 108 ]
"87
[; ;main.c: 87:            digit_place++;
[e = *U + &U _message * -> _digit_place `ux -> -> # *U &U _message `ui `ux *U + &U _str * -> -> -> 1 `i `ui `ux -> -> # *U &U _str `ui `ux ]
"89
[; ;main.c: 89: 
}
[e :U 107 ]
"91
[; ;main.c: 91:         {
[e $ ! && == -> _key `i -> 5 `i != -> _edit `i -> 0 `i 109  ]
"92
[; ;main.c: 92:             strcpy(copy_str, message);
{
"93
[; ;main.c: 93:              start = !start;
[e ( _clcd_print (2 , :s 3C -> + -> 192 `i -> 4 `i `uc ]
"94
[; ;main.c: 94:             clcd_print("                ",(0xC0 + 0));
[e ( _clcd_print (2 , -> &U _message `*Cuc -> + -> 192 `i -> 4 `i `uc ]
"95
[; ;main.c: 95:             edit = 0;
[e = *U + &U _str * -> -> -> 1 `i `ui `ux -> -> # *U &U _str `ui `ux -> -> 48 `ui `uc ]
"96
[; ;main.c: 96:         }
[e ++ _pos -> 1 `i ]
"97
[; ;main.c: 97: 
[e $ ! > _pos -> 15 `i 110  ]
"98
[; ;main.c: 98:         if (key == 4)
{
"99
[; ;main.c: 99:         {
[e = _pos -> 4 `i ]
"100
[; ;main.c: 100:             pos = 4;
}
[e :U 110 ]
"102
[; ;main.c: 102:             start = 0;
[e ++ _digit_place -> -> 1 `i `uc ]
"103
[; ;main.c: 103:             clcd_print("ENTER NEW NUMBER", (0x80 + 0));
}
[e :U 109 ]
"105
[; ;main.c: 105: 
[e $ ! == -> _key `i -> 3 `i 111  ]
"106
[; ;main.c: 106:         }
{
"107
[; ;main.c: 107: 
[e ( _strcpy (2 , &U _copy_str -> &U _message `*Cuc ]
"108
[; ;main.c: 108:         if (key == 6 && edit)
[e = _start -> -> ! != -> _start `i -> 0 `i `i `uc ]
"109
[; ;main.c: 109:         {
[e ( _clcd_print (2 , :s 4C -> + -> 192 `i -> 0 `i `uc ]
"110
[; ;main.c: 110: 
[e = _edit -> -> 0 `i `uc ]
"111
[; ;main.c: 111:             message[digit_place]= ' ';
}
[e :U 111 ]
"113
[; ;main.c: 113:             if (pos-- == 4)
[e $ ! == -> _key `i -> 4 `i 112  ]
"114
[; ;main.c: 114:             {
{
"115
[; ;main.c: 115:                 pos = 15;
[e = _pos -> 4 `i ]
"116
[; ;main.c: 116:             }
[e = _edit -> -> 1 `i `uc ]
"117
[; ;main.c: 117:             clcd_print(message,(0xC0 + 4));
[e = _start -> -> 0 `i `uc ]
"118
[; ;main.c: 118:         }
[e ( _clcd_print (2 , :s 5C -> + -> 128 `i -> 0 `i `uc ]
"119
[; ;main.c: 119:         else
[e ( _clcd_print (2 , :s 6C -> + -> 192 `i -> 0 `i `uc ]
"121
[; ;main.c: 121: 
}
[e :U 112 ]
"123
[; ;main.c: 123:            if (start == 1)
[e $ ! && == -> _key `i -> 6 `i != -> _edit `i -> 0 `i 113  ]
"124
[; ;main.c: 124:            {
{
"126
[; ;main.c: 126:                if (wait1-- <= 0)
[e = *U + &U _message * -> _digit_place `ux -> -> # *U &U _message `ui `ux -> -> 32 `ui `uc ]
"127
[; ;main.c: 127:             {
[e -- _digit_place -> -> 1 `i `uc ]
"128
[; ;main.c: 128:                 wait1 = 1000;
[e $ ! == -- _pos -> 1 `i -> 4 `i 114  ]
"129
[; ;main.c: 129: 
{
"130
[; ;main.c: 130:                 if(direction == 1)
[e = _pos -> 15 `i ]
"131
[; ;main.c: 131:                 {
}
[e :U 114 ]
"132
[; ;main.c: 132: 
[e ( _clcd_print (2 , -> &U _message `*Cuc -> + -> 192 `i -> 4 `i `uc ]
"133
[; ;main.c: 133: 
}
[e $U 115  ]
"134
[; ;main.c: 134:                     temp1= copy_str[0];
[e :U 113 ]
"135
[; ;main.c: 135: 
{
"138
[; ;main.c: 138:                     {
[e $ ! == -> _start `i -> 1 `i 116  ]
"139
[; ;main.c: 139:                         copy_str[i]= copy_str[i+1];
{
"141
[; ;main.c: 141: 
[e $ ! <= -- _wait1 -> -> 1 `i `ui -> -> 0 `i `ui 117  ]
"142
[; ;main.c: 142: 
{
"143
[; ;main.c: 143:                     copy_str[15]=temp1;
[e = _wait1 -> -> 1000 `i `ui ]
"145
[; ;main.c: 145:                }
[e $ ! == -> _direction `i -> 1 `i 118  ]
"146
[; ;main.c: 146:                 if(direction == 0)
{
"149
[; ;main.c: 149: 
[e = _temp1 -> *U + &U _copy_str * -> -> -> 0 `i `ui `ux -> -> # *U &U _copy_str `ui `ux `uc ]
"152
[; ;main.c: 152: 
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $ <= _i -> 15 `i 119  ]
[e $U 120  ]
[e :U 119 ]
"153
[; ;main.c: 153:                     for (int i=15; i>=0; i--)
{
"154
[; ;main.c: 154:                     {
[e = *U + &U _copy_str * -> -> _i `ui `ux -> -> # *U &U _copy_str `ui `ux *U + &U _copy_str * -> -> + _i -> 1 `i `ui `ux -> -> # *U &U _copy_str `ui `ux ]
"155
[; ;main.c: 155:                        copy_str[i]= copy_str[i-1];
}
[e ++ _i -> 1 `i ]
[e $ <= _i -> 15 `i 119  ]
[e :U 120 ]
}
"158
[; ;main.c: 158: 
[e = *U + &U _copy_str * -> -> -> 15 `i `ui `ux -> -> # *U &U _copy_str `ui `ux -> _temp1 `uc ]
"160
[; ;main.c: 160: 
}
[e :U 118 ]
"161
[; ;main.c: 161:                }
[e $ ! == -> _direction `i -> 0 `i 122  ]
"162
[; ;main.c: 162: 
{
"165
[; ;main.c: 165: 
[e = _temp1 -> *U + &U _copy_str * -> -> -> 15 `i `ui `ux -> -> # *U &U _copy_str `ui `ux `uc ]
"168
[; ;main.c: 168:     }
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 15 `i ]
[e $ >= _i -> 0 `i 123  ]
[e $U 124  ]
[e :U 123 ]
"169
[; ;main.c: 169:     return;
{
"170
[; ;main.c: 170: }
[e = *U + &U _copy_str * -> -> _i `ui `ux -> -> # *U &U _copy_str `ui `ux *U + &U _copy_str * -> -> - _i -> 1 `i `ui `ux -> -> # *U &U _copy_str `ui `ux ]
"171
}
[e -- _i -> 1 `i ]
[e $ >= _i -> 0 `i 123  ]
[e :U 124 ]
}
"174
[e = *U + &U _copy_str * -> -> -> 0 `i `ui `ux -> -> # *U &U _copy_str `ui `ux -> _temp1 `uc ]
"176
}
[e :U 122 ]
"178
[e ( _clcd_print (2 , -> &U _copy_str `*Cuc -> + -> 192 `i -> 0 `i `uc ]
"179
}
[e :U 117 ]
"181
}
[e :U 116 ]
"182
}
[e :U 115 ]
"183
}
[e :U 97 ]
[e $U 98  ]
[e :U 99 ]
"184
[e $UE 96  ]
"185
[e :UE 96 ]
}
[a 1C 69 78 84 69 82 32 78 69 87 32 78 85 77 66 69 82 0 ]
[a 5C 69 78 84 69 82 32 78 69 87 32 78 85 77 66 69 82 0 ]
[a 2C 77 115 103 58 0 ]
[a 6C 77 115 103 58 32 32 32 32 32 32 32 32 32 32 32 32 0 ]
[a 4C 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 0 ]
[a 3C 32 32 32 32 32 32 32 32 32 32 32 32 0 ]
